<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.2.1" created="2011-11-19 19:04" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>ZBlog</title>
	<link>http://blog.zarate.tv</link>
	<description>Using law to keep justice away</description>
	<pubDate>Sat, 19 Nov 2011 19:04:29 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://blog.zarate.tv</wp:base_site_url>
	<wp:base_blog_url>http://blog.zarate.tv</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>zzzarate@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Zarate]]></wp:author_display_name><wp:author_first_name><![CDATA[Juan]]></wp:author_first_name><wp:author_last_name><![CDATA[Delgado]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>41</wp:term_id><wp:category_nicename>3d</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[3d]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>33</wp:term_id><wp:category_nicename>adobe</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[adobe]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>21</wp:term_id><wp:category_nicename>air</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[air]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>36</wp:term_id><wp:category_nicename>alchemy</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[alchemy]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>14</wp:term_id><wp:category_nicename>android</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[android]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>51</wp:term_id><wp:category_nicename>apparat</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[apparat]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>43</wp:term_id><wp:category_nicename>as2</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[as2]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>as3</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[as3]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>12</wp:term_id><wp:category_nicename>asdoc</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[asdoc]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>17</wp:term_id><wp:category_nicename>books</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[books]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>22</wp:term_id><wp:category_nicename>bugs</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[bugs]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>31</wp:term_id><wp:category_nicename>code</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[code]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>45</wp:term_id><wp:category_nicename>copyright</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[copyright]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>39</wp:term_id><wp:category_nicename>development</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[development]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>e4x</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[e4x]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>35</wp:term_id><wp:category_nicename>events</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[events]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>49</wp:term_id><wp:category_nicename>flash</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[flash]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>flash-player</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[flash player]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>11</wp:term_id><wp:category_nicename>flex</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[flex]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>46</wp:term_id><wp:category_nicename>google</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[google]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>28</wp:term_id><wp:category_nicename>gravatar</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[gravatar]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>30</wp:term_id><wp:category_nicename>hardware</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[hardware]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>haxe</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[haxe]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>13</wp:term_id><wp:category_nicename>hippohx</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[hippohx]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>37</wp:term_id><wp:category_nicename>i18n</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[i18n]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>23</wp:term_id><wp:category_nicename>incredibly-annoying-macs</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[incredibly annoying macs]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>53</wp:term_id><wp:category_nicename>java</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[java]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>25</wp:term_id><wp:category_nicename>legal</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[legal]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>16</wp:term_id><wp:category_nicename>linux</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[linux]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>15</wp:term_id><wp:category_nicename>mac</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[mac]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>29</wp:term_id><wp:category_nicename>mega-geek</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[mega-geek]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>meta</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[meta]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>48</wp:term_id><wp:category_nicename>microsoft</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[microsoft]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>47</wp:term_id><wp:category_nicename>mobile</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[mobile]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>ogg</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[ogg]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>18</wp:term_id><wp:category_nicename>open-source</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[open source]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>26</wp:term_id><wp:category_nicename>openid</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[openid]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>44</wp:term_id><wp:category_nicename>patents</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[patents]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>27</wp:term_id><wp:category_nicename>php</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[php]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>security</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[security]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>34</wp:term_id><wp:category_nicename>source-control</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[source control]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>42</wp:term_id><wp:category_nicename>sql</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[sql]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>32</wp:term_id><wp:category_nicename>stratus</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[stratus]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>19</wp:term_id><wp:category_nicename>the-cloud</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[the cloud]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>38</wp:term_id><wp:category_nicename>the-industry</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[the industry]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>52</wp:term_id><wp:category_nicename>things-i-need-to-ask-adobe</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[things i need to ask adobe]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>24</wp:term_id><wp:category_nicename>usability</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[usability]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>50</wp:term_id><wp:category_nicename>ustwo</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[ustwo]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>xml</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[xml]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>40</wp:term_id><wp:category_nicename>zcode</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[zcode]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>20</wp:term_id><wp:category_nicename>zlog</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[zlog]]></wp:cat_name></wp:category>

	<generator>http://wordpress.org/?v=3.2.1</generator>

	<item>
		<title>About</title>
		<link>http://blog.zarate.tv/about/</link>
		<pubDate>Fri, 05 Sep 2008 16:12:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[My name is Juan Delgado or <a href="http://zarate.tv">Zárate</a>, whatever you wish. I'm mostly a Flash developer currently living in Cambridge, UK. I'm also into other things such as Android, haXe, AIR and I like anything technology related like usability, accessibility, software development, etc.

I'm a huge fan of Open Source and I run some open projects, check them out in the <a href="projects/">Projects</a> page.

I also enjoy general techy talk and rambling about geeky stuff around a pint or two, so if you see me around or you think I can help you out with your project just say "Hi".

I currently work at <a href="http://ustwo.co.uk/">the studio of dreams™</a> with a bunch of really talented people. Needless to say, whatever I rant about here is my personal opinion only, and not ustwo's.

Whatever you fancy, drop me a line: hi [thingy] zarate . tv.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date>2008-09-05 09:12:07</wp:post_date>
		<wp:post_date_gmt>2008-09-05 16:12:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Loader extends DisplayObject, I like(ish)</title>
		<link>http://blog.zarate.tv/?p=27</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=27</guid>
		<description></description>
		<content:encoded><![CDATA[http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/flash/display/Loader.html

http://www.stevensacks.net/2008/09/04/the-loader-and-the-mouse-why-as3-is-too-hard/

http://www.actionscript.org/forums/showthread.php3?t=149089]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2008-09-07 18:22:37</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>field.autoSize = &quot;&quot;</title>
		<link>http://blog.zarate.tv/?p=31</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=31</guid>
		<description></description>
		<content:encoded><![CDATA[[code]field.autoSize = ""[/code]

Ain't no good.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2008-09-07 19:03:53</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Project Rosetta, from Flash to Silverlight</title>
		<link>http://blog.zarate.tv/?p=42</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=42</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.projectrosetta.com/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2008-09-09 06:57:27</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Comparing fla files</title>
		<link>http://blog.zarate.tv/?p=44</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=44</guid>
		<description></description>
		<content:encoded><![CDATA[I want to!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2008-09-10 08:01:13</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Projects</title>
		<link>http://blog.zarate.tv/projects/</link>
		<pubDate>Sat, 27 Sep 2008 08:14:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?page_id=61</guid>
		<description></description>
		<content:encoded><![CDATA[These are some of the projects I waste my free time with:

<a href="http://zarate.tv/projects/zcode">ZCode</a> is the repository where I currently keep most of my code. Think of it as backup gently provided by Google that I like to share just in case someone finds something interesting.

I also occasionally give Flash-related talks: <a href="http://www.lfpug.com/31st-july-2008-31072008/">SVN for Flash developers or <a href="http://www.lfpug.com/27th-may-2010-27052010/">Developing Flash Apps to Run 24/7</a> at the London Flash Platform User Group</a> or <a href="http://www.dandolachapa.com/2007/07/26/recicla-tu-codigo/">Recycle your code (and focus on what matters) at SubFlash 2007</a>.

<a href="http://www.dandolachapa.com/">Dando la chapa</a> is my other blog in Spanish where I rant about non-geeky stuff.

The geek in me is always looking for <del>useless ways of wasting time</del> nice projects so if you have a crazy idea and you think I can help you out with it, just drop me a line at hi [thingy] zarate . tv.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>61</wp:post_id>
		<wp:post_date>2008-09-27 09:14:35</wp:post_date>
		<wp:post_date_gmt>2008-09-27 08:14:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>projects</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tips</title>
		<link>http://blog.zarate.tv/?page_id=302</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?page_id=302</guid>
		<description></description>
		<content:encoded><![CDATA[Just a quick shortcut

Find something using grep:
[code lang="bash"]grep -n -i -r wadus dir/[/code] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>302</wp:post_id>
		<wp:post_date>2009-11-16 23:48:13</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Taglines</title>
		<link>http://blog.zarate.tv/?page_id=351</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?page_id=351</guid>
		<description></description>
		<content:encoded><![CDATA[Save the geek, save the world
Blank lines are free
Only the right to be wrong makes you free
Don't waste this crisis (from <a href="http://money.cnn.com/galleries/2009/fortune/0902/gallery.ceos_recession.fortune/2.html">here</a>)

I have 4 words for ya...

Using the law to keep justice away

http://dilbert.com/strips/comic/2010-04-11/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>351</wp:post_id>
		<wp:post_date>2010-04-11 19:14:31</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Articles</title>
		<link>http://blog.zarate.tv/articles/</link>
		<pubDate>Sat, 14 Nov 2009 18:57:54 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?page_id=1308</guid>
		<description></description>
		<content:encoded><![CDATA[I'll be moving soon some old articles from my website.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1308</wp:post_id>
		<wp:post_date>2009-11-14 19:57:54</wp:post_date>
		<wp:post_date_gmt>2009-11-14 18:57:54</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>articles</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Delegando que es gerundio</title>
		<link>http://blog.zarate.tv/articles/delegando-que-es-gerundio/</link>
		<pubDate>Sun, 16 Jul 2006 17:20:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?page_id=1310</guid>
		<description></description>
		<content:encoded><![CDATA[[Please note that this post was originally posted on July 2006.]

[Este artículo fue publicado en Julio de 2006.]

---

Delegar es una cosa que mola. En la vida en general y en Flash en particular. Sobre todo cuando nos movemos de AS1 a AS2 + clases. Los foros de Flash están llenos de preguntas que tienen que ver con el "scope" o ámbito dentro de los famosos "callbacks" de objetos como XML, LoadVars, XMLSocket, etc. Flash necesita estas funciones porque las llamadas al servidor en Flash son asíncronas, es decir, el player no detiene la ejecución del código cuando se hace, por ejemplo, una petición de un fichero xml:

[code lang="actionscript"]
class A{

   private var oneVar:String = "Hello world";

   function A():Void{

      var myXML:XML = new XML();
      myXML.ignoreWhite = true; // alguien ha encontrado esto en false????

      myXML.onLoad = function():Void{
         trace(oneVar); // undefined
      }

      myXML.load("myXML.xml");

   }

}
[/code]

Esto pasa porque el ámbito "dentro" del onLoad es el propio objeto myXML, NO la clase. Puedes hacer la prueba haciendo trace(this) dentro del onLoad.

Una de las primeras soluciones que se utilizó para esto fue crear dentro de la función principal una variable que hacía referencia a la propia clase. Algo como esto:

[code lang="actionscript"]
class A{

   private var oneVar:String = "Hello world";

   function A():Void{

      var owner = this;
      var myXML:XML = new XML();
      myXML.ignoreWhite = true;

      myXML.onLoad = function():Void{
         trace(owner.oneVar); // yeah!
      }

      myXML.load("myXML.xml");

   }

}
[/code]

Y esto funciona. Este comportamiento "peculiar" de Flash (de los ECMAScript, vamos) se llama closure, algo de lo que yo me enteré en <a href="http://www.domestika.org/foros/viewtopic.php?t=47694">éste post de Domestika</a>. Más información en <a href="http://timotheegroleau.com/Flash/articles/scope_chain.htm">Scope Chain and Memory waste in Flash MX</a> y en la <a href="http://en.wikipedia.org/wiki/Closure_%28computer_science%29">Wikipedia</a> (para campeones).

La misión era clara, buscar una forma más sencilla y elegante de resolver el problema del ámbito en las llamadas asíncronas. Pues a todo esto llegó la version 7.2 del Flash IDE y el señor Mike Chambers introdujo la clase Delegate. Utilizando esa clase dejaríamos el código anterior en algo como esto:

[code lang="actionscript"]
import mx.utils.Delegate;

class A{

   private var oneVar:String = "Hello world 2";

   function A(){

      var myXML:XML = new XML();
      myXML.ignoreWhite = true;
      myXML.onLoad = Delegate.create(this,xmlLoaded);
      myXML.load("myXML.xml");

   }

   private function xmlLoaded(success:Boolean):Void{
         trace(oneVar);
   }

}
[/code]

Estamos "delegando" el onLoad en la función xmlLoaded, pero, lo más importante, el ámbito de la función xmlLoaded es la clase original, por lo que "encontramos" la variable sin problemas. Ahora empezamos a molar.

Esto definitivamente NO es lo mismo que hacer: myXML.onLoad = xmlLoaded. Si lo probáis, estaréis con el mismo problema que antes, el ámbito de la función xmlLoaded será el objeto myXML, por lo que el trace volverá a ser undefined.

El mayor problema de la clase de Macromedia (aún era Macromedia) es que NO permite el paso de parámetros a la función delegada, pero pronto llegaron los frikis para solucionarlo haciendo sus propias clases para delegar. <a href="http://code.google.com/p/zcode/source/browse/trunk/as2/tv/zarate/utils/Delegate.as">La que yo utilizo</a> es una copia con alguna modificación de una que encontré en la lista de <a href="http://lists.motion-twin.com/pipermail/mtasc/2005-April/001602.html">MTASC</a>. Con estas nuevas clases se pueden pasar parámetros de la siguiente forma:

[code lang="actionscript"]
myXML.onLoad = Delegate.create(this,xmlLoaded,"val1",val2);
[/code]

OJO, nuestros parámetros llegarán despué de los "oficiales", en este caso el típico success que llega a los onLoad del objeto XML.

Como curiosidad apuntar que con las clases de Delegate se pueden hacer cosas como esta:

[code lang="actionscript"]
import tv.zarate.Utils.Delegate;

class A{

   function A(){

      // delegamos la funcion en una variable local

      var delegatedOne:Function = Delegate.create(this,getOneValue);
      // pasamos la funcion delegada como parametro

      doLater(delegatedOne);

   }

   private function doLater(delegated:Function):Void{

      // ejecutamos la funcion pero no devuelve nada
      trace("Pero no me devuelve nada? " + delegated());

   }

   private function getOneValue():String{

      trace("La funcion se ejecuta");
      return "I rock \m/";

   }

}
[/code]

Decidir si esta manera de trabajar es una best practice o no es cosa de cada uno. Hace poco me encontré con una aplicación MVC en la que el modelo le pasaba a la vista las funciones delegadas para los botones de la interface. A gusto del consumidor.

Lo gracioso de esto es que dentro de poco las clases de delegar no se van a utilizar porque en AS3 la delegación es automática (echad un ojo a <a href="http://www.adobe.com/devnet/actionscript/articles/actionscript3_overview.html">AS3 overview</a>, Method closures). Pero vamos, al ritmo que se va adoptando las nuevas versiones, yo creo que este artículo aún puede ser útil a mucha gente.

Pues esto es todo familia, HTH.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1310</wp:post_id>
		<wp:post_date>2006-07-16 18:20:03</wp:post_date>
		<wp:post_date_gmt>2006-07-16 17:20:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>delegando-que-es-gerundio</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>1308</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1018</wp:comment_id>
			<wp:comment_author><![CDATA[Curso Flash Lite en Intelygenz | 2flash2furious :: diseño gráfico, web &amp; multimedia desde Oviedo, Asturias :: por [Q] interactiva]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.q-interactiva.com/blog/2010/05/curso-flash-lite-en-intelygenz/</wp:comment_author_url>
			<wp:comment_author_IP>212.36.74.165</wp:comment_author_IP>
			<wp:comment_date>2010-05-07 12:22:29</wp:comment_date>
			<wp:comment_date_gmt>2010-05-07 11:22:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Delegate con parámetros, por ejemplo el de nuestro amigo Zárate. [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Flash para Barrapunteros como tú</title>
		<link>http://blog.zarate.tv/articles/flash-para-barrapunteros-como-tu/</link>
		<pubDate>Wed, 17 Oct 2007 21:31:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?page_id=1321</guid>
		<description></description>
		<content:encoded><![CDATA[ACTUALIZACIÓN: Finalmente este artículo pasó a <a href="http://barrapunto.com/article.pl?sid=07/10/29/1255222">portada de Barrapunto</a> el 29 de Octubre. Interesante echarle un ojo a los comentarios.

--

<strong>Introducción</strong>

A raíz de <a href="http://barrapunto.com/article.pl?sid=07/09/05/102239">este artículo</a> de Barrapunto me he dado cuenta de que todavía hay mucha gente anclada en la idea de que Flash sólo sirve para hacer dibujitos y letras que vuelan. Bueno, <em>también</em> sirve para eso.

Para que todo el mundo se sitúe, declaro lo siguiente alto y claro:

<ul>
	<li>Yo soy Flashero. Trabajo desde hace 5 años como programador Flash. Sí, he puesto programador y Flash en la misma frase.</li>

	<li>Mi visión de Adobe es 50%-50% amor/odio. Creo que como empresa que son tienen todo el derecho a hacer lo que les parezca con su tecnología y tienen todo mi respeto por llevar a Flash a lo que es hoy en día. Dicho esto, por ejemplo muchas veces tienen una política poco clara sobre algunas aplicaciones libres del mundilo Flash, lo cual me molesta bastante.</li>

	<li>Llevo algún tiempo en Barrapunto aunque antes me dedicaba simplemente a lurkear. La frase "Barrapunto ya no es lo que era" me hace gracia porque como yo llegué tarde a la fiesta, para mi siempre ha sido lo que es ahora. Es decir, un sitio de noticias (algunas me interesan, otras no) con una mezcla de gente que sabe mucho, junto con una panda de trolls con mucho tiempo libre. El título del artículo viene a que tradicionalmente el usuario medio de Barrapunto "odia" Flash, sus intros, el software privativo y (parece) que no se informa sobre la realidad de Flash últimamente. Espero que me sepan perdonar la gracieta cariñosa del título.</li>
</ul>

La idea es proporcionar una visión general actual sobre lo que es el desarrollo de aplicaciones Flash hoy en día (Octubre 2007) para que quien quiera trollear lo haga con conocimiento de causa. No es lo mismo decir:

<blockquote>"Flash es sólo para hacer dibujitos que vuelan" // esto suena a "webmaster" y &lt;marquee&gt;</blockquote>

que

<blockquote>"Adobe es el diablo por intentar sabotear proyectos como Red5" // mucho más 2.0!</blockquote>

Que quede claro que mi intención con este artículo es hacer una visión más o menos rápida de los tópicos más habituales en el desarrollo Flash. Como no soy un experto en todos estos campos, <strong>seguramente haya errores o puntualizaciones que gustosamente corregiré si alguien me los indica</strong> (cuentame arroba zarate tv o directamente en el <a href="http://www.dandolachapa.com/2007/10/17/flash-para-barrapunteros-como-tu/">blog</a>). Al final hay enlaces para ampliar información.

<strong>Flash es sólo una herramienta</strong>

Algo que mucho friki parece olvidar selectivamente es que Flash es sólo una herramienta. Como con todas las tecnologías hay gente que la usa muy bien y gente que la usa muy mal.

Yo personalmente también odio las intros, los "efectos libro" y <a href="http://www.dandolachapa.com/2006/10/05/no-me-gusta-tu-musica/">el que una web tenga música y me obligue a quitar la mía cuando navego</a>. Yo sufro no sólo a clientes que me obligan a programar estas y otras fechorías sino que luego sufro también esas webs cuando navego y a los millones de barrapunteros señalándome con el dedo como si yo hubiera programado todas las intros del mundo.

<strong>¿Pero en Flash se programa?</strong>

La salida de ActionScript 2 supuso un salto de calidad brutal en cuanto a metodología de programación. ActionScript 2 es un lenguaje de programación orientado a objetos basado en ECMAScript.

Sin embargo programar en AS2 requiere ciertos hacks poco elegantes para tareas concretas. Esto es porque AS2 y AS1 son compilados al mismo <em>bytecode</em> que es el que interpreta la ActionScript Virtual Machine 1 (ASVM1).

AS3 sin embargo se compila a un bytecode completamente nuevo que es el que interpreta la AVM2 (lanzada con el player 9). En AS3 se ha cambiado y mucho la estructura interna del lenguaje para hacerlo completamente estricto con ECMAScript de tercera generación (<a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMA-262</a>).

El arsenal de herramientas de un flashero a día de hoy no dista mucho del de un programador Java o C. Compiladores por línea de comandos, herramientas de control de versiones, plugins de Eclipse, consolas de log y debug, descompiladores, libros de programación orientada a objetos... lo normal.

<strong>Flash ¿vs? Software Libre</strong>

Como he dicho antes, la política de Adobe sobre algunas de las aplicaciones libres es cuando menos ambigua. La norma general es un sospechoso silencio sobre por ejemplo Red5 (clon libre de Flash Media Server) o la antigua versión de Screenweaver que permitía incluir el ocx de Flash en un ejecutable.

Adobe por ahora sigue la norma de vive y deja vivir, aunque tambié ha hecho movimientos muy torpes <a href="http://blog.deconcept.com/2006/04/21/flashobject-to-become-swfobject/">como obligar al proyecto FlashObject a rebautizarse como SWFObject</a> porque no podía utilizar su marca registrada "Flash". Cargar contra tus propios desarrolladores y evangelistas MAL Adobe.

<strong>El formato swf</strong>

El formato swf es público pero pertenece a Adobe. Se pueden <a href="http://www.adobe.com/licensing/developer/">solicitar las especificaciones</a> pero el leerlas te incapacita para crear un reproductor de swfs:

<blockquote>This license grants the Licensee access to the SWF file format specification to aid in the creation of software which creates SWF files.

This license does not permit the usage of the specification to create software which supports SWF file playback.</blockquote>

Es decir, si lees las especificaciones y aceptas la licencia legalmente, NO puedes crear un reproductor de archivos swf como GNash (ver abajo). Lo que sí puedes es crear una herramienta generadora de swfs. ¿Significa esto que Gnash es ilegal? NO. Significa que los programadores de GNash no pueden echar un ojo a la especificación.

<strong>Desarrollar Flash con Software Libre</strong>

<a href="http://mtasc.org/">MTASC</a> es un compilador de ActionScript 2 (player 6,7,8) totalmente abierto. Es multiplataforma y funciona mucho, mucho mejor que el compilador oficial del Flash IDE 8. Pero MTASC no puede sólo con toda la faena, así que para eso nació <a href="http://swfmill.org/">SWFMill</a>. ¿Se puede hacer con el dúo MTASC + SWFMill lo mismo que con el IDE oficial? NO.

Si necesitas hacer animación tradicional por frames, entonces necesitas el IDE (o alguna de las otras herramientas para generar swfs como <a href="http://www.toonboom.com/">Toon Boom</a> o <a href="http://www.erain.com/products/swift3d/">Swift 3D</a>). Ahora, a día de hoy Flash es mucho más que animación tradicional. Sin tocar el IDE de Flash y utilizando herramientas libres sobre Linux se pueden programar aplicaciones Flash para la gestión de usuarios, chats, herramientas de videoconferencia, etc, etc.

Para desarrollar ActionScript 3 (player 9) puedes bajarte el <a href="http://www.adobe.com/products/flex/sdk/">SDK de Flex 2</a> que es multiplataforma pero que aún no ha sido liberado (más información <a href="http://labs.adobe.com/wiki/index.php/Flex:Open_Source">aquí</a>) o usar <a href="http://haxe.org/">haXe</a>. haXe es un lenguaje de programación web similar a ActionScript 2 que compila a Flash (6,7,8 y 9), JavaScript y Neko bytecode. Neko es una máquina virtual que funciona en el servidor como módulo de Apache. Es decir, que con el mismo lenguaje (haXe) puedes compilar para cliente, servidor y aplicaciones de escritorio (ScreenweaverHX, ver más abajo).

<strong>Tamarin</strong>

Como he dicho antes, la introducción de la AVM2 y AS3 ha llevado al player de Flash a dar el salto de calidad que le faltaba. La AVM2 utiliza JIT (<a href="http://en.wikipedia.org/wiki/Just-in-time_compilation">Just In Time compilation</a>) lo que ha supuesto una mejora brutal del rendimiento.

Pero resulta que la AVM2 no es sólo la máquina virtual para AS3, sino que es una máquina virtual para lenguajes ECMAScript. Tanto es así que Mozilla ha decidido sustituir su motor de JavaScript por la AVM2 en lo que se conoce como el proyecto Tamarin. Adobe liberó una parte de la AVM2 bajo la MPL en una de las mayores donaciones de código a la Mozilla Foundation.

<strong>Flex 2 SDK</strong>

Seguramente ayudados por la presión de MTASC y haXe, Adobe decició liberar el SDK de Flex 2. Flex es un framework de componentes para el desarrollo de aplicaciones Flash ya que el resultado final de Flex es igualmente un archivo swf, sólo que en lugar del IDE de Flash + ActionScript se utiliza MXML (Macromedia XML, lenguaje de marcado) y AS3. Pero repito, el resultado final es el mismo.

Junto con la liberación de Flex, Adobe también está empezando a abrir poco a poco su <a href="http://bugs.adobe.com/">sistema de gestión de bugs</a> al estilo Bugzilla.

<strong>GNash</strong>

<a href="http://www.gnu.org/software/gnash/">GNash</a> es el reproductor de swfs de la Free Software Foundation. A día de hoy la compatibilidad es bastante limitada ya que sólo reproduce películas de player 7 y algunas de player 8. Aun así, será incluido por defecto en la próxima versión de Ubuntu y otras distribuciones.

Aunque no está preparado para sustituir con garantías al player oficial, el proyecto es bastante interesante. La mayoría de detractores de Flash argumentan que es una herramienta propietaria. Tener un player libre abre aun más las puertas de Flash allí donde por razones (normalmente económicas) a Adobe no le interesa invertir tiempo de desarrollo. Por ejemplo, sistemas de 64 bits o dispositivos fuera de los oficialmente soportados.

También podría redistribuirse sin necesitar el permiso de Adobe, lo cual facilitaría la labor de programas como ScreenweaverHX y otros wrappers de aplicaciones Flash. Eso evitaría la obligación de que el usuario final tenga la correcta versión de Flash instalada. Sobre si es legal redistribuir el player de Flash sin el consentimiento oficial de Adobe, hay una interesante discusión <a href="http://osflash.org/pipermail/osflash_osflash.org/2005-October/004591.html">aquí</a> y <a href="http://osflash.org/pipermail/osflash_osflash.org/2005-October/004633.html">aquí</a>. Mi visión es que NO es legal, pero Adobe nunca ha actuado en contra de esos proyectos. Mantiene silencio e insinúa acciones, pero no hace nada. Claramente <a href="http://en.wikipedia.org/wiki/Fear%2C_uncertainty_and_doubt">FUD</a> para mi.

<strong>Flash y accesibilidad</strong>

La accesibilidad es uno de los puntos flojos de Flash, eso no hay quien lo dude. La comunicación con lectores de pantalla es nula o complicada y Flash tampoco responde por defecto a las preferencias de accesibilidad que el usuario ha establecido en su navegador.

Dicho esto, la <a href="http://labs.adobe.com/technologies/flashplayer9/releasenotes.html">última actualización del player de Flash</a> parece que incluye soporte para Microsoft Active Accessibility (<a href="http://en.wikipedia.org/wiki/Microsoft_Active_Accessibility">MSAA</a>) no sólo para el ActiveX (IE) sino también para los plug-ins (Firefox y compañía). Hay una <a href="http://osdir.com/ml/mozilla.accessibility/2006-11/msg00001.html">interesante discusión</a> en la lista de accesibilidad de Mozilla, especialmente <a href="http://osdir.com/ml/mozilla.accessibility/2006-11/msg00019.html">este post</a>.

Un problema bastante grave que esperemos que Adobe junto con los fabricantes de navegadores se digne a solucionar se llama <a href="http://livedocs.adobe.com/flash/9.0/UsingFlash/WSd60f23110762d6b883b18f10cb1fe1af6-7ba7.html">SeamlessTabbing</a>. Este parámetro se define en el código HTML usado para incluir un objeto Flash en una página y, en teoría, permite que una aplicación Flash entre sin problemas en el ciclo de tabulaciones de una página HTML. Es decir, desdepués de hacer tab en el objeto HTML precedente a Flash, el navegador da el foco a la película Flash que inicia su propio ciclo de tabs y, al llegar al último elemento, "salta" de nuevo al elemento HTML inmediatamente posterior. Esto funciona a día de hoy, pero sólo en Internet Explorer.

Una vez que el objeto Flash tiene el foco, es posible programar aplicaciones accesibles sólo con el teclado, lo cual puede no parecer mucho pero por lo menos es algo.

Resumen: hagamos lo poco que se puede hacer para mejorar la accesibilidad de nuestras aplicaciones Flash.

<strong>Flash y buscadores</strong>

Por qué Google no hace más para buscar información dentro de archivos swf no lo tengo claro. Seguramente sea una mezcla de "política" añadido a que el formato swf no es un estandar. Lo que sí tengo claro es que la mayoría de aplicaciones Flash a día de hoy están "vacías de contenido", es decir, obtienen sus datos de forma dinámica (xmls, bases de datos etc), así que seguramente leer "dentro" de ellas no supusiese un gran avance.

Para conseguir que el contenido se indexe y de paso evitar que los usuarios de IE tengan que activar la película Flash haciendo click en ella (el problema de Microsoft vs. <a href="http://en.wikipedia.org/wiki/Eolas">EOLAS</a>) la mejor forma de incluir contenido Flash es utilizar alguno de los métodos basados en JavaScript. Los más conocidos son <a href="http://meddle.dzygn.com/esp/weblog/flash.accesible/">Flaccess</a>, <a href="http://blog.deconcept.com/swfobject/">SWFObject</a>, o el nuevo <a href="http://www.swffix.org/">SWFFix</a>.

Aunque con algunas diferencias entre ellos, estos métodos se basan en presentar la página en cuestión como HTML y "poner encima" las partes con Flash mediante JavasScript. Aunque esto podría dejar fuera a usuarios con el plugin de Flash instalado pero JS desactivado, no utilizar JS implica caer en el problema de EOLAS y perder una buena manera de validar que el usuario tiene la versión mínima necesaria del plugin.

Más enlaces a artículos y amplías discusiones sobre el tema en la sección de enlaces.

<strong>Flash es multiplataforma. O eso dicen.</strong>

¿Multi significa más de uno, no? Entonce sí, Flash es multiplataforma. La clave claro está en saber cuán multiplataforma es. A día de hoy estas son las plataformas soportadas:

Windows, Mac y Linux. Player 9.
Dispositivos móviles Symbian. <a href="http://www.adobe.com/products/flashlite/">Flash Lite 3</a> (base de Player 8, aunque no completo).
PDAs y Smartphones. <a href="http://www.adobe.com/products/flashplayer_pocketpc/">Flash para PocketPC</a> (Player 7).
PSP. <a href="http://www.dandolachapa.com/2006/10/12/flash-en-la-psp-%c2%bfquieres-las-buenas-o-las-malas-noticias/">Player 6 con muchas limitaciones</a>.
Montones de otros dispositivos como la Wii, la PS3, móviles no basados en Symbian y cosas más estrafalarias como <a href="http://www.chumby.com/">Chumby</a>.
Flash no funciona nativamente en sistemas de 64 bits ni en en FreeBSD. Dejo a juicio del lector decidir si calificar a Flash de multiplataforma o no.

<strong>Aplicaciones que molan y proyectos curiosos</strong>

No son ni mucho menos todos los que hay, pero yo creo que son una buena muestra del potencial de Flash y AS3. La mayoría además son Open Source.

<strong>Papervision3D</strong>

<a href="http://blog.papervision3d.org/">Papervision3D</a> es el motor de 3D en Flash más extendido a día de hoy. No es el primero ni el último pero es Open Source y ha conseguido aunar a una importante comunidad de desarrolladores que lo están haciendo mejorar día a día.

Capitaneado por el español <a href="http://www.carlosulloa.com/">Carlos Ulloa</a> está empezando a dar los <a href="http://osflash.org/papervision3d">primeros frutos realmente interesantes</a> para el 3D en Flash.

<strong>Red5</strong>

Hay 2 formas de publicar vídeo en Flash. Descarga progresiva (el vídeo se carga dinámicamente) o streaming real (el player conecta con un servidor, abre una conexión y descarga el vídeo según lo necesita).

El servidor oficial de Adobe es Flash Media Server (antes Flash Communication Server), pero los chicos de <a href="http://osflash.org/red5">Red5</a> (escrito en Java) están haciendo un muy buen trabajo para tener un servidor de streaming para Flash totalmente abierto. últimamente parece que Adobe quiere poner alguna traba legal a proyectos como Red5 o Wowza (otro clon de FMS, esta vez cerrado y de pago), pero está aún por ver el alcance y la validez de la <a href="http://www.dandolachapa.com/2007/08/21/mpg4-en-flash-adobe-haciendo-amigos/">amenaza</a>.

Red5 también se usa para programar aplicaciones multi-usuario como chats o vídeo conferencias.

<strong>Hydra</strong>

Hydra (parte del <a href="http://labs.adobe.com/wiki/index.php/AIF_Toolkit">Adobe Image Foundation Toolkit</a>) es un nuevo lenguaje de programación de Adobe para la creación de efectos y procesamiento de imágenes. En teoría, está optimizado para utilizar GPUs y CPUs multi-núcleo con lo que el rendimientno debería ser bueno. Sin embargo, lo relamente interesante es que podrá ser usado tanto en Flash como en AfterEffects.

<strong>AlivePDF</strong>

<a href="http://www.alivepdf.org/">AlivePDF</a> es una librería en AS3 para la creación de PDFs directamente desde Flash creada por Thibault Imbert, culpable también de proyectos como SMTPMailer, Mouse Gesture, <a href="http://www.wiiflash.org/">WiiFlash</a>, etc, etc.

<strong>Flash VNC</strong>

<a href="http://osflash.org/fvnc">Cliente de VNC</a> escrito en AS3 por <a href="http://www.darronschall.com/">Darron Schall</a>. Seguramente no para ser usado en producción y más como prueba de concepto y aprendizaje.

<strong>ScreenweaverHX</strong>

La idea de los wrappers o contenedores de Flash es simple. Incluir la película Flash dentro de un ejecutable para poder ampliar sus posibilidades. Desde acceso de lectura y escritura al disco o al regístro de Windows hasta proveer una API de la ventana que lo contiene.

Una de las primeras aplicaciones fué Screenweaver (primero de pago, luego libre) que no hace mucho se pasó completamente a haXe (de ahí el HX). <a href="http://haxe.org/com/libs/swhx">SWHX</a> es un contenedor de aplicaciones Flash totalmente extensible mediante haXe y Neko.

<strong>FC64</strong>

<a href="http://osflash.org/FC64">FC64</a> es un emulador de Commodore64 escrito en AS3 también por Darron Schall y compañía.

<strong>Enlaces</strong>

<ul>
	<li><a href="http://blogs.adobe.com/jnack/2007/10/adobe_unveils_h.html">Adobe unveils Hydra imaging technology</a></li>
	<li><a href="http://niquimerret.com/?p=94">Accessibility in Flash bug and issue list</a>.</li>
	<li><a href="http://accesibilidadweb.blogspot.com/2007/09/flash-y-accesibilidad-web-una-relacin.html">Flash y Accesibilidad Web: una relación complicada</a>.</li>
	<li><a href="http://blog.deconcept.com/2006/03/13/modern-approach-flash-seo/">A modern approach to Flash SEO</a>.</li>
	<li><a href="http://blog.guya.net/?p=11">Can you make me first in Google???</a></li>
	<li><a href="http://blogs.adobe.com/penguin.swf/2006/10/whats_so_difficult_64bit_editi.html">What's So Difficult? 64-bit Edition</a>.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1321</wp:post_id>
		<wp:post_date>2007-10-17 22:31:41</wp:post_date>
		<wp:post_date_gmt>2007-10-17 21:31:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flash-para-barrapunteros-como-tu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>1308</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Flash libre, fácil</title>
		<link>http://blog.zarate.tv/articles/flash-libre-facil/</link>
		<pubDate>Sun, 22 Jan 2006 17:20:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?page_id=1333</guid>
		<description></description>
		<content:encoded><![CDATA[[Please note that this post was originally posted on January 2006, and although MTASC and SWFMill is still very valid toolset, there are other options for Open Source Flash development such as the Flex SDK or haXe.]

[Este artículo fue publicado en Enero de 2006, y aunque MTASC y SWFMill son perfectamente válidos, hay otras opciones para desarrollar Flash con herramientas libres como el SDK de Flex o haXe.]

---

<strong>Introducción</strong>

Desarrollar Flash con Software Libre no es tan fácil como alguno dice ni tan complicado como parece al principio. Muchas letras juntas (FAMES, AMES, MTASC,...) que incluso a veces es difícil recordar qué significan.

Para empezar hay que tener claro que lo único que hace falta para generar swfs es un compilador, MTASC. El "problema" es que no puede generar la librería, por lo que necesitaremos SWFMill. SWFMill lo que hace es, partiendo de un xml de definición y de elementos externos (jps, pngs, swfs...), generar un swf.

RECORDAR:

<ul>
	<li>SWFMill genera swf con librería partiendo de xml y elementos externos.</li>
	<li>MTASC inyecta el código necesario.</li>
</ul>

Podéis descargar los archivos de ejemplo aquí.
Podéis descargar el artículo en pdf + los archivos aquí.

<strong>Instalación de MTASC y SWFMill</strong>

Lo primero que necesitamos son los ejecutables de MTASC y SWFMill, que se bajan de sus respecticvas webs (al final del artículo están los enlaces). Una vez descargados los descomprimimos donde nos interese, por ejemplo en "Archivos de programa". Podemos dejar el nombre con la versión, pero yo normalmente lo dejo como "mtasc" y "swfmill", más sencillo.

Aunque no es necesario, sí es recomendable crear variables de sistema con sus respectivas rutas:

Botón derecho sobre "Mi PC" > Propiedades > Opciones Avanzadas > Variables de entorno > Variables del sistema > Nueva

Hay que agregar una para MTASC y otra para SWFMill. Para la de MTASC ponemos en un alarde de originalidad "mtasc" (sin comillas). En el valor hay que poner la ruta al ejecutable que acabamos de descomprimir, en mi caso:

<ul>
	<li>"C:\Archivos de programa\mtasc\mtasc.exe"</li>
	<li>"C:\Archivos de programa\swfmill\swfmill.exe"</li>
</ul>

¡<strong>Incluyendo las comillas</strong>!, esto es así por los espacios en la ruta.

Para comprobar que hemos hecho esto bien, abrimos una consola de dos (Inicio, Ejecutar, cmd) y escribimos:

[code lang="bash"]%mtasc% (enter)[/code]

Si nos muestra la "ayuda" de MTASC, bien, en caso contrario, mal. A veces es necesario reiniciar la sesión. Lo mismo para SWFMill.

Esto que cuento es para WinXP que es lo que tengo yo instalado. Para Win2000 será parecido y para Mac y Linux no tengo ni idea, pero seguro que hay algo parecido a las variables de entorno. Si algún usuario caritativo me quiere mandar la explicación de cómo hacerlo o un enlace con una explicación decente, la añadiré gustoso.

<strong>Empieza lo divertido</strong>

Recordemos que en principio basta con MTASC para generar swfs 100% funcionales. Vamos a ello. Hay que recordar que a MTASC lo único que le gusta es AS2, así que vamos a hacer una clase sencilla:

[code lang="actionscript"]
class MTASCTest{

   function MTASCTest(){

      _root.createTextField("field",100,0,0,0,0);
      _root.field.autoSize = true;
      _root.field.text = "You rock! \m/";

   }

   public static function main():Void{
      var app = new MTASCTest();
   }

}
[/code]

Abrimos una consola de DOS si no la tenemos abierta, nos movemos hasta el directorio donde hayamos creado la clase y escribimos esto (se puede copiar y pegar en la consola con el botón derecho):

[code lang="bash"]%mtasc% -swf MTASCTest.swf -main -header 200:200:12 MTASCTest.as (enter)[/code]

¡Olé! En el mismo diretorio se ha tenido que crear el archivo MTASCTest.swf que podemos ejecutar para alegria de nuestas mentes. Ahora veamos qué hacen los parámetros que hemos utilizado:

<ul>
	<li>-swf nombreArchivo.swf. Esta claro, el archivo generado de salida</li>
	<li>-main. Este parámetro lo que hace es crear un "punto de entrada" a la aplicación. Básicamente lo que hace MTASC es añadir a la línea de tiempo principal algo como:</li>
[code lang="bash"]MTASCTest.main(this);[/code]
	Es importante notar que a la función main se le pasa una referencia de la línea de tiempo principal (this).
En el ejemplo anterior no lo hemos utilizado, pero luego ya veremos cómo hacerlo.
	<li>-header ancho:alto:fps. Dimensiones y velocidad de la película</li>
	<li>Archivo_origen.as. La clase por la que tiene que empezar el compilado.</li>
</ul>

Es MUY recomendable pasar por la web de MTASC para ver qué hacen el resto de parámetros posibles, que hay unos cuantos.

<strong>Ahora lo mismo pero con gracia</strong>

Ya que tenemos controlado(!) MTASC, vamos a ponerle alegría a la película, vamos a utilizar SWFMill. Como ya hemos dicho antes, de lo que se encarga SWFMill es de generar archivos swf a partir de un xml y elementos externos. De esa forma podemos tener una biblioteca de la que importar elementos con attachMovie.

XML de ejemplo (de la propia web de SWFMill)

[code lang="xml"]
<?xml version="1.0" encoding="iso-8859-1" ?>
<movie width="200" height="200" framerate="12">
   <background color="articulos/flash_libre_facil/#ffffff"/>
   <frame/>
</movie>
[/code]

Nos vamos a la consola, navegamos hasta el directorio y escribimos:

[code lang="bash"]%swfmill% simple library.xml SWFMillTest.swf (enter)[/code]

Este comando lo que hace es tomar "library.xml" como definición y crear el archivo "SWFMillTest.swf" como salida con el ancho, alto y velocidad definida. Como esto es poco útil, vamos a agregarle algo que podamos usar luego:

[code lang="xml"]
<?xml version="1.0" encoding="iso-8859-1" ?>
<movie width="300" height="200" framerate="12">
   <background color="articulos/flash_libre_facil/#ffffff"/>
   <frame>
      <library>
         <clip id="paradise" import="items/arecibo-beach.jpg"/>
      </library>
   </frame>
</movie>
[/code]

Con esto lo que hacemos es coger el objeto "items/arecibo-beach.jpg" y crear un objeto en la librería con nombre de exportación "paradise", para luego poder hacer un attachMovie que es lo que nos interesa.

¡¡¡¡¡¡¡¡¡¡¡¡¡OJO!!!!!!!!!!!!! El jpg se está incluyendo en el swf, NO es una carga dinámica. Esto es lo mismo que crear en el IDE un objeto en la librería e importar un archivo jpg que luego irá incluido DENTRO del swf.

También vale y mucho la pena pasarse por la web de SWFMill para un listado completo de lo que se puede y no hacer. Se pueden importar archivos jpg, png, swf, fuentes y alguna cosa más interesante como definir en qué frame estarán disponibles qué elementos.

<strong>El toque final, unir SWFMill y MTASC</strong>

Pues llegó el momento, tenemos un generador de swfs y un inyector de código, estamos tardando. Con el mismo xml anterior, modificamos los comandos de MTASC para dejarlo así:

[code lang="bash"]%mtasc% -swf Application.swf -main Application.as[/code]

Como veis lo primero que hemos hecho es quitar el parámetro -header, ya que el swf ya está creado previamente con SWFMill, ahora lo único que hacemos es inyectar el código que nos interesa. En este caso un attachMovie de un elemento de la bibliteca. Modificamos la clase para dejarla así:

[code lang="actionscript"]
class Application{

   function Application(){}

   public static function main(m:MovieClip):Void{
      m.attachMovie("paradise","paradise",100);
   }

}
[/code]

Voilá!

Os dejo una pequeña utilidad para hacernos la vida más fácil. Abrimos un archivo de texto y escribimos:

[code lang="bash"]
@echo off

echo ** SWFMIll **
%swfmill% simple library.xml Application.swf

echo ** MTASC **
%mtasc% -swf Application.swf -main Application.as
[/code]

Y guardamos el archivo como "compile.bat". Ahora solo tenemos que ejecutar este archivo (se puede hacer desde las acciones propias de SEPY, por ejemplo) para que el sólo ejecute SWFMill y luego MTASC :D

Lo siento otra vez por los MacPollo y los Linuxeros, pero seguro que también se puede hacer algo similar.

<strong>Conclusión</strong>

La conclusión es que desarrollar Flash con Software Libre es YA una realidad para muchos proyectos, siempre que tu campo no sea la animación tradicional (cosa que dudo porque no habrías ni abierto el link).

Hay que reconocer que no todo va a ser tan sencillo como esto. A día de hoy MTASC puede dar problemas con ciertas cosas como los componentes de Macromedia (bueno, yo diría que son los componentes de MM los que dan problemas con MTASC), pero repito que yo creo que está lo suficiente maduro para muchos proyectos.

También hay algunas librerías previas a la aparición de MTASC (como las de XPath de XFactorStudio) que no compilan en el modo estricto (-strict), lo cual es una pena, pero yo supongo que poco a poco las irán puliendo.

Bueno gentes, espero que esto ayude un poco a tirar de software libre cuando sea posible. No sólo porque sea gratuito Y abierto, sino porque es de CALIDAD.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1333</wp:post_id>
		<wp:post_date>2006-01-22 18:20:38</wp:post_date>
		<wp:post_date_gmt>2006-01-22 17:20:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flash-libre-facil</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>1308</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Crear instancias de clases dinámicamente</title>
		<link>http://blog.zarate.tv/articles/crear-instancias-de-clases-dinamicamente/</link>
		<pubDate>Sun, 26 Nov 2006 17:19:32 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?page_id=1338</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Introducción</strong>

Lo primero aclarar el concepto "crear instancias de clases dinámicamente". Con esto me refiero a que, dado el classpath completo de una clase, podamos crear una instancia de ella. Eso es posible porque las clases que compilamos dentro de una película Flash se "guardan" dentro del objeto <em>_global</em> siguiendo el classPath. Es decir, las clases de mi dominio se almacenan en <em>_global.tv.zarate.*</em>, Flash crea "físicamente" todos esos objetos. Ésta es una de las principales razones para NO utilizar variables globales, ya que es relativamente sencillo "pisar" las que se están utilizando para almacenar clases.

Pero a día de hoy es el único camino que tenemos para crear instancias partiendo del nombre de la clase. En AS3 esto ya se hace de una forma oficial (<a href="http://livedocs.macromedia.com/flex/2/langref/flash/utils/package.htmlarticulos/instancias-dinamicamente/#getDefinitionByName()">getDefinitionByName()</a>), pero hasta que puedas utilizar player 9, igual te sirve lo siguiente.

<strong>Solución</strong>

Para facilitar el proceso, he creado una clase con un método estático al que se le pasa un classpath completo y devuelve un objeto. La podéis ver y/o descargar <a href="http://code.google.com/p/zcode/source/browse/trunk/as2/tv/zarate/utils/ClassUtils.as">aquí</a>. Tened en cuenta que lo que pretendemos hacer es algo como: 

[code lang="actionscript"]new _global.tv.zarate.test.nombreClase();[/code]

Veamos el código:

[code lang="actionscript"]
public static function getInstanceFromClasspath(classPath:String):Object{

   var constructor:Function;
   var classpathBits:Array = classPath.split(".");

   constructor = _global[classpathBits[0]];
   for(var x:Number=1;x<classpathBits.length;x++){ constructor = constructor[classpathBits[x]]; }

   return new constructor();

}
[/code]

Esto es lo que pasa:

<ul>
	<li>Extraemos del classPath los objetos partiéndolo por "."</li>
	<li>Utilizamos el primer objeto del array para "enganchar" con el objeto _global</li>
	<li>Nos metemos en un bucle empezando desde 1 en el que recursivamente vamos accediendo al siguiente objeto.</li>
	<li>Cuando hemos llegado al final, hacemos el new y lo devolvemos.</li>
</ul>

En este momento, la magia ya ha pasado. Partiendo del classpath, hemos creado dinámicamente un objeto. Lo que pasa es que el tipo de la instancia devuelta es <em>Object</em>, así que normalmente tendremos que hacer un cast para no cargarnos la validación a la hora de compilar.

Pero claro, ¿cómo haces el cast si precisamente la clase la estamos creando dinámicamente? Es aquí donde entran las interfaces. Imagínate que estás haciendo esto porque tienes una serie de objetos que quieres utilizar indistintamente, dependiendo de lo definido en un xml. Benne. Entonces lo que puedes hacer es crear una interface, hacer que los objetos la implementen y luego hacer el cast con la interface, que siempre es la misma. ¿Que no está claro? Pues, resumido, así:

[code lang="actionscript"]
interface tv.zarate.test.iDynamic{
   public function giveMeText():String;
}

class tv.zarate.tv.test.DynamicOne implements iDynamic{}
class tv.zarate.tv.test.DynamicTwo implements iDynamic{}

var dynamicInstance:iDynamic = iDynamic(ClassUtils.getInstanceFromClasspath("tv.zarate.test.DynamicOne"));
[/code]

No sólo consigues crear dinámicamente la instancia de la clase, además al mismo tiempo estás programando para la interface, con lo que tu modelo (o lo que esté creando la instancia) es independiente de las distintas implementaciones, ya que siempre está tratando con la interface. Esto mismo también se podría conseguir en lugar de con una interface, haciendo que todas las clases extendieran de una común. ¿Cuándo utilizar una cosa o la otra? Si todos los objetos tienen que hacer una misma tarea (por ejemplo cargar un xml), puedes extender y dejar a la parte común hacer esa tarea, así no duplicas código. En caso contrario, la interface es suficiente.

Si está todo muy confuso, bájate <a href="http://blog.zarate.tv/wp-content/uploads/2009/11/dynamicinstances.zip">este zip</a> en el que lo puedes ver claramente. Para compilar desde el IDE, importa la clase <em>tv.zarate.test.DynamicInstanceCreation</em> y en la línea de tiempo principal pon algo como: <em>DynamicInstanceCreation.main(this)</em>. Para hacerlo con MTASC, símplemente tienes que utilizar <em>-main</em>, échale un ojo a <a href="http://www.zarate.tv/articulos/flash_libre_facil/">Flash libre, fácil</a>.

¡OJO! En la clase principal, podéis ver un par de variables extra, <em>forceOne</em> y <em>forceTwo</em>. Están ahí para forzar al compilador a incluir las clases que queremos utilizar dinámicamente. Si no lo haces, el compilador hace bien su trabajo de no incluir clases en el swf que no están referenciadas en el código (no se usan). Y aquí el avispado lector dirá, ¿y qué pasa si no sé cuántas clases voy a tener ni cómo se van a llamar? Pues entonces lo que hay que hacer es compilar la clases sola en un swf (normalmente usando excludes) y cargarla dinámicamente. Una vez cargada, ya se puede utilizar. Eso lo dejo para el próximo artículo, que sino este sale gigante.

<strong>Notas finales</strong>

Esto que escribo no es nada nuevo, se lleva haciendo bastante tiempo, pero la verdad es que no es algo que se ve muy a menudo. Y como el otro día me lo preguntaron, pues me pareció una buena idea ponerlo a la vista de todo el mundo.

Espero que ayude. ¡Salud!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1338</wp:post_id>
		<wp:post_date>2006-11-26 18:19:32</wp:post_date>
		<wp:post_date_gmt>2006-11-26 17:19:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>crear-instancias-de-clases-dinamicamente</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>1308</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>dynamicinstances</title>
		<link>http://blog.zarate.tv/?attachment_id=1347</link>
		<pubDate>Sat, 14 Nov 2009 20:30:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/wp-content/uploads/2009/11/dynamicinstances.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1347</wp:post_id>
		<wp:post_date>2009-11-14 21:30:07</wp:post_date>
		<wp:post_date_gmt>2009-11-14 20:30:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dynamicinstances</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.zarate.tv/wp-content/uploads/2009/11/dynamicinstances.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/11/dynamicinstances.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cargar clases dinámicamente</title>
		<link>http://blog.zarate.tv/articles/cargar-clases-dinamicamente/</link>
		<pubDate>Fri, 01 Dec 2006 17:18:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?page_id=1349</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Introducción</strong>

En el <a href="http://www.zarate.tv/articulos/instancias-dinamicamente/">capítulo anterior</a> nos quedamos un poco con las ganas de no tener que forzar al compilador a incluir las clases de las que creábamos las instancias dinámicamente. Esto es especialmente un problema cuando no se sabe de antemano cuántas clases distintas se van a tener que instanciar. ¿La forma de solucionarlo? Muy sencillo. Con <em>loadMovie</em> :)

<strong>Solución</strong>

La idea es muy sencilla, "meter" la(s) clase(s) que queramos en un swf, cargarlo con <em>loadMovie</em> y listo. Es casi tan fácil como suena. Vamos a hacerlo por pasos.

** Paso 1. Meter las clases en un swf independiente

Si utilizas el IDE

La idea es la misma que contaba en el artículo anterior, forzar al compilador a meter la clase en el swf. Para ello símplemente impórtala y haz referencia a ella, nada más. Algo como esto en la línea de tiempo principal:

[code lang="actionscript"]
import tv.zarate.test.DynamicOne;
var force:DynamicOne;
[/code]

Y listo. No hay que crear una instancia ni nada. Con eso es suficiente.

Si utilizas MTASC

Más sencillo aún. Con algo como:

[code lang="bash"]mtasc -swf "dynamicone.swf" -header 1:1:24 -version 7 -strict DynamicOne.as[/code]

Que se note que *no* utilizamos -main para iniciar la película, simplemente creamos un swf y metemos la clase dentro.

** Paso 2. Cargas el swf con la clase.

Una vez que tienes creado el swf, lo cargas con loadMovie o MovieClip loader y, cuando haya terminado de cargar, ya tienes "disponible" la clase que estaba en ese swf. Puedes utilizar el método del anterior artículo para crear dinámicamente la instancia sin necesidad de forzar la inclusión de las clases en la clase principal. ¡YEAH!

Puedes bajarte el mismo ejemplo del artículo anterior de <a href="http://blog.zarate.tv/wp-content/uploads/2009/11/swf_as_dll.zip">aquí</a>.

<strong>La vida es bella, pero no tanto</strong>

Lo normal. Todas las cosas molonas tienen un pero y esta no iba a ser la excepción:

<strong>Los excludes</strong>. Este ejercicio es tan fácil porque las clases son triviales, pero en la vida real son más complicadas y normalmente hay mucha relación entre ellas. Si utilizas esta técnica, lo más normal es que tengas un puñado de clases comunes que están en el swf principal y que quieras que en el swf cargado sólo esté la clase que quieres cargar dinámicamente. Para forzar al compilador a NO incluir ciertas clases, necesitas utilizar los apestodos excludes. Que, como comentábamos en <a href="http://www.domestika.org/foros/viewtopic.php?t=50969">este post de Domestika</a>, no funcionan muy bien que digamos. Al final dejo un par de enlaces para utilizarlos, tanto desde el IDE como desde MTASC.

<strong>Las variables globales</strong>. Yo y mi cruzada contra las variables globales. A lo mejor tienes suerte y no es tu caso, pero las variables globales de una película publicada para player 6 NO se ven en una película publicada para player 7. Eso quiere decir que si uno de los swfs es 7 y el otro 6, esto deja de funcionar. *Creo* que esto ya no es así para player superior a 7, pero no estoy seguro. Esta técnica funciona sin problemas con el player 9, pero estoy casi seguro de que no se puede mezclar clases AS1/AS2 con AS3. Quien haga la prueba que me mande un mail, please.

<strong>Notas finales</strong>

Esta técnica tiene bastantes aplicaciones y funciona bastante bien. Sé de buena tinta que por ejemplo El Pais 3 la utiliza intensivamente para ahorrar tiempo de descarga. La mayoría de los objetos (tipos de noticia) utilizan clases que son comunes a todo el sitio web, con lo que son excluidas a la hora de crearlos. Las clases comunes simplemente están ahí cuando la película las necesita. Es decir, la parte principal de la aplicación carga unas clases comunes que son excluídas de los objetos secundarios. Un efecto lateral de esto es que, al no estar las clases comunes compiladas en los objetos secundarios, <strong>no hace falta recompilar esos objetos para las nuevas versiones de las clases comunes</strong>. Esto es al mismo tiempo una ventaja y un inconveniente. Si actualizas una clase y la cagas, cosas que funcionaban dejarán de funcionar aunque no las hayas recompilado. Por la misa regla de 3, solucionar un bug común es más sencillo, ya que, una vez solucionado, todos los objetos secundarios utilizarán la nueva versión instantáneamente. Yo en su d&iaacute;a encontré partidarios y detractores por igual utilizar esto.

Otro uso bastante molón es por ejemplo para hacer skins. La idea es: tienes una clase que hace de modelo y quieres tener muchas vistas distintas. No sólo colores, sino una disposición de los elementos completamente variable. En ese caso lo que puedes hacer es crear un swf principal con el modelo y clases comunes y un swf con elementos de biblioteca y la clase específica de esa vista. Luego defines en un xml qué swf quieres que haga de skin. Funciona de maravilla siempre y cuando todas las vistas tengan algo en común, una interfaces.

Pues esto es más o menos todo. Espero que ayude. ¡Salud!

<strong>Enlaces</strong>

<ul>
	<li><a href="http://www.osflash.org/using_a_swf_as_a_dll">Using a SWF as a DLL</a>. Artículo de Aral Balkan en OSFlash sobre el mismo tema: cómo cargar clase dinámicamente.</li>
	<li><a href="http://www.darronschall.com/weblog/archives/000145.cfm">Using _exclude.xml, the Good, the Bad, and the Wishlist</a>. Darron Schall hablando de los excludes.</li>
	<li><a href="http://mtasc.org/articulos/cargar-clases-dinamicamente/#usage">Cómo usar -exclude en MTASC</a>. MTASC no aporta mucho más a la utilización de excludes, aunque sí alguna mejora como poder utilizar varios archivos.</li>
	<li><a href="http://www.domestika.org/foros/viewtopic.php?t=50969">Post en Domestika</a> donde se comenta sobre los excludes.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1349</wp:post_id>
		<wp:post_date>2006-12-01 18:18:06</wp:post_date>
		<wp:post_date_gmt>2006-12-01 17:18:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cargar-clases-dinamicamente</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>1308</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>swf_as_dll</title>
		<link>http://blog.zarate.tv/?attachment_id=1352</link>
		<pubDate>Sat, 14 Nov 2009 20:41:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/wp-content/uploads/2009/11/swf_as_dll.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1352</wp:post_id>
		<wp:post_date>2009-11-14 21:41:39</wp:post_date>
		<wp:post_date_gmt>2009-11-14 20:41:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>swf_as_dll</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.zarate.tv/wp-content/uploads/2009/11/swf_as_dll.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/11/swf_as_dll.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shared Fonts Today</title>
		<link>http://blog.zarate.tv/articles/shared-fonts-today/</link>
		<pubDate>Mon, 28 Mar 2005 12:46:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?page_id=1355</guid>
		<description></description>
		<content:encoded><![CDATA[[Please note that this post was originally posted on March 2005, there're much better ways of doing this nowadays. I keep it here so the internet doesn't get broken.]

[Este artículo fue publicado en Marzo de 2005, a día de hoy hay formas mucho mejores de hacer esto. Dejo el post más que nada para no romper internet.]

---

<strong>Introducción</strong>

El uso de tipografías compartidas en Flash nunca ha sido una tarea fácil. Desde hace 3-4 años se ha intentado resolver por varios caminos, algunos con mejor o peor resultado. Este método tampoco es perfecto. Estaría bien que Macromedia aprovechara la nueva versión de Flash para crear un método "científico" que solucionara de una vez por todas este problema.

<strong>Aproximaciones anteriores</strong>

Anteriormente se han intentado básicamente 2 caminos:

1) Utilización "normal" de librerías compartidas.

La utilización de las librerías compartidas implicaba que la carga de las películas externas no se hacía a través de <em>loadMovie</em>, por lo que el peso de la fuente se cargaba siempre en el primer frame de la película, con los consiguientes problemas de precarga. Además, este sistema no te permite llevar un control (a través de una clase para la gestión de las fuentes, componente o algo similar) de las fuentes que ya han sido cargadas.

Otro de los inconvenientes de utilizar librerías compartidas es que todas las películas que requieran la fuente harán la petición del archivo swf que la contiene, a pesar de que el archivo esté en la caché del navegador (siempre que no estemos en un entorno https o que por cualquier tipo de razón se hayan utilizado cabeceras de no-cache).

2) Carga dinámica de películas con las fuentes.

La resolución del problema que más se acercaba a lo que yo quería era la de Ivan Dembicki con su <strong>Shared Font Manager</strong> (SFM). Pero tenía una serie de problemas: 1) es de pago, 2) utiliza variables globales para la definición de los objetos TextFormat, 3) utiliza 2 archivos para cada fuente.

<strong>Objetivo</strong>

Crear un archivo swf por cada una de las tipografías que se vayan a compartir y poder cargarlos dinámicamente a través de <em>loadMovie</em> como si fuera un archivo externo más. La aplicación del formato de texto a los campos nuevos debe ser luego la más transparente posible, evitando además objetos <em>TextFormat</em> globales.

<strong>Solución</strong>

Puedes bajarte un <a href="http://blog.zarate.tv/wp-content/uploads/2009/11/Zarate_Shared_Fonts.zip">zip</a> con los fla (MX 2004) de ejemplo.

a) Creación de las películas con las fuentes.

Crear una única película por fuente era una de mis obsesiones, ya que no entendí nunca por qué debería haber 2. Además cuando hay 2 películas, la precarga se complica bastante ya que la película que se carga NO es la que realmente contiene la fuente. Eso quiere decir que se precargaba una película de, por ejemplo, 1kb, cuando la carga real podía ser de 15kb. Cuando sólo hay una película la precarga, evidentemente, es real.

La solución a este problema la encontré por puro azar y no creo que haya que enseñarsela a los niños en la escuela... simplemente funciona. Para saber por qué funciona, lo mejor es preguntar en <a href="http://www.macromedia.com/">www.macromedia.com</a> ñ_ñ

<ol>
	<li>Crear una película nueva. Normalmente yo utilizo como nombre para el archivo el de la fuente que va a contener. Si el nombre tiene un espacio en blanco, los sustituyo por "_". También es posible crear una película con varias fuentes, lo que puede ser muy útil para agrupar fuentes por proyectos y cargarla todas de una sola vez.</li>
	<li>Agregar un símbolo de tipografía a la biblioteca. Para agregarlo hay que hacer click en el botón de la parte superior derecha de la biblioteca y seleccionar "New Font". Seleccionamos de la lista la fuente que deseamos y le damos el nombre que queramos, es indiferente. El de la propia fuente es una buena opción, simplemente por temas de organización.</li>
	<li>Hacer click con el botón derecho sobre el símbolo creado, seleccionar la opción "Export for runtime sharing" y como url poner la del archivo swf que resulta de compilar la película. Es decir, si tenemos el archivo fla "nombre_fuente.fla", pues habría que poner "nombre_fuente.swf".</li>
	<li>Crear un MovieClip vacío y darle como nombre "ForceShared" (esto es una copia de lo que hacía Branden J. Hall). Arrastralo al escenario. Abrir la biblioteca, hacer click con el botón derecho sobre el y seleccionar "Import for runtime sharing". En la URL escribir la url que hemos definido en el paso anterior. IMPORTANTE: SI EL ARCHIVO DE LA FUENTE Y LA PELÍCULA QUE LO VA A CARGAR NO ESTÁN EN LA MISMA CARPETA, HAY DEFINIR ESTA RUTA RELATIVA A LA PELÍCULA QUE LA VA A CARGAR. Ver ejemplo en el fla de los archivos que está en "DistintaCarpeta".</li>
	<li>Compilar. Si la ruta de exportación e importación no es la misma, se producirá un error de carga ya que no podrá cargar la ruta de importación. No pasa nada.</li>
</ol>

b) Utilización de las fuentes.

Cargar dinámicamente con <em>loadMovie</em> la película de la fuente.
Crear un objeto <em>TextFormat</em> y un campo de texto dinámicos como si la fuente estuviera en la biblioteca.Es decir, si la fuente que queremos cargar es "Quadaptor", tendremos que definir la propiedad font del <em>TextFormat</em> así: <em>myFomat.font="Quadaptor"</em>. El campo de texto tiene que incluir las fuentes con <em>myField.embedFonts=true</em>.

Enjoy :)

<strong>Problemas</strong>

De la misma forma que cualquiera de los otros métodos, éste que acabo de presentar también tiene incovenientes. Supongo que la elección de un método u otro dependerá de las necesidades de cada proyecto. Estos son los que yo he encontrado, si véis cualquier otro, por favor mandadme un mail para que lo pueda actualizar.

<ul>
	<li>No puede haber en la película campos de texto creados desde el IDE (ni siquiera estáticos) con la misma fuente que la que se va a cargar. Esto es tan sencillo como que si hay un campo de texto con la misma fuente que la que se ha cargado dinámicamente, los campos de texto a los que le apliquemos el TextFormat de la fuente dinámica dejarán de verse correctamente. La forma más sencilla de solucionar esto es crear con createTextField TODOS los campos de texto que utilicen la fuente dinámica. Esto NO AFECTA A LAS PELÍCULAS QUE LA PELÍCULA PRINCIPAL HAYA CARGADO DINÁMICAMENTE. Ver archivo fla de Errores/TextoEstatico para demostración.</li>
	<li>No es posible utilizar fuentes en cursiva o en negrita. No he conseguido utilizar una fuente en cursiva o negrita y no he encontrado otra forma de solucionarlo. Ver archivo fla de Errores/Cursiva para demostración.</li>
	<li>Los campos de texto tienen que tener la fuente incluida (campo.embedFonts = true), por lo que la fuente SIEMPRE estará suavizada.</li>
	<li>Problemas al hacer la precarga con la clase MovieClipLoader. Utilizando la clase MovieClipLoader para la carga del archivo de la fuente, me he dado cuenta de que el evento onLoadInit se dispara ANTES de que la fuente esté lista para usarse. Técnicamente yo creo que esto no debería ser así ya que la referencia pone claramente que este evento es llamado después de que las acciones del primer frame de la película se hayan ejecutado. En nuestro caso, no funciona así ya que se ejecuta primero el onLoadInit y luego los frames de la película cargada. En algunos casos el orden ha sido MovieClip, onLoadInit, Linea principal, lo que es aún más raro.¿Por qué sucede esto? Pues realmente no lo sé, pero supongo que será un "efecto colateral" de utilizar el mismo swf para la exportación y la importación. Si alguien puede aclararnos esto un poco, será de gran ayuda. La única forma que he encontrado para solucionarlo es: 1) esperar un frame o 2) crear un intervalo. Ver archivos fla de Errores/CargaMovieClipLoader y Errores/Trace para demostración. [Como se puede apreciar en la película de Errores/Trace, hay otro método de conseguir las fuentes dinámicas y consiste en sustituir el símbolo de fuente de la biblioteca por un MovieClip con un campo de texto con los caracteres incluidos. Esto puede ser especialmente útil cuando no se quiere incluir toda la fuente sino sólo unos caracteres, por ejemplos, sólo los números de un preload]</li>
	<li>Incompatibilidades de Player. Yo he probado con éxito el método en players 7 de Windows, Mac y Linux y player 6,0,79 de Windows. Habría que hacer una prueba intensiva porque es probable que de problemas en players anteriores.</li>
</ul>

<strong>Agradecimientos</strong>

Lo primero agradecer a todas las personas que han intentado esto antes, ya que sus trabajos han sido las bases de éste. También a Oscar Pérez y Gustavo Ramos por su labor de investigación y consejos cuando ya estaba completamente desesperado :D

Agradecería un voluntario/a que traduzca el artículo a inglés, ya que si lo hago yo seguro que el que lo lea no saca mucho beneficio :)

<strong>Enlaces</strong>

<ul>
	<li><a href="http://www.sharedfonts.com/">Shared fonts manager</a></li>
	<li><a href="http://web.archive.org/web/20021206180401/http://www.waxpraxis.org/archives/000062.html">WaxPraxis - Shared Fonts Redux</a> (Wayback Machine)</li>
	<li><a href="http://www.quasimondo.com/archives/000227.php">Quasimondo - Shared Library Secrets</a></li>
	<li><a href="http://www.macromedia.com/cfusion/knowledgebase/index.cfm?id=tn_14786">Macromedia Flash TechNote: Using font symbols</a></li>
	<li><a href="http://www.macromedia.com/cfusion/knowledgebase/index.cfm?id=tn_14767">Macromedia Flash TechNote: Using shared libraries</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1355</wp:post_id>
		<wp:post_date>2005-03-28 13:46:05</wp:post_date>
		<wp:post_date_gmt>2005-03-28 12:46:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shared-fonts-today</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>1308</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Zarate_Shared_Fonts</title>
		<link>http://blog.zarate.tv/?attachment_id=1357</link>
		<pubDate>Sat, 14 Nov 2009 20:46:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/wp-content/uploads/2009/11/Zarate_Shared_Fonts.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1357</wp:post_id>
		<wp:post_date>2009-11-14 21:46:38</wp:post_date>
		<wp:post_date_gmt>2009-11-14 20:46:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zarate_shared_fonts</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.zarate.tv/wp-content/uploads/2009/11/Zarate_Shared_Fonts.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/11/Zarate_Shared_Fonts.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gmail preventing sending an email without subject</title>
		<link>http://blog.zarate.tv/2010/06/30/no-more-unfinis/gmail_preventig_email_without_subject/</link>
		<pubDate>Wed, 30 Jun 2010 09:30:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/wp-content/uploads/2010/06/gmail_preventig_email_without_subject.png</guid>
		<description></description>
		<content:encoded><![CDATA[Gmail preventing sending an email without subject]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1619</wp:post_id>
		<wp:post_date>2010-06-30 10:30:06</wp:post_date>
		<wp:post_date_gmt>2010-06-30 09:30:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gmail_preventig_email_without_subject</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1618</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.zarate.tv/wp-content/uploads/2010/06/gmail_preventig_email_without_subject.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/06/gmail_preventig_email_without_subject.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"489";s:6:"height";s:3:"257";s:14:"hwstring_small";s:23:"height='67' width='128'";s:4:"file";s:49:"2010/06/gmail_preventig_email_without_subject.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"gmail_preventig_email_without_subject-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"gmail_preventig_email_without_subject-300x157.png";s:5:"width";s:3:"300";s:6:"height";s:3:"157";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Re-organized email client, body first, then subject, recipients at the end</title>
		<link>http://blog.zarate.tv/2010/06/30/no-more-unfinis/mail/</link>
		<pubDate>Wed, 30 Jun 2010 09:46:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/wp-content/uploads/2010/06/mail.png</guid>
		<description></description>
		<content:encoded><![CDATA[Re-organized email client, body first, then subject, recipients at the end]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1623</wp:post_id>
		<wp:post_date>2010-06-30 10:46:40</wp:post_date>
		<wp:post_date_gmt>2010-06-30 09:46:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mail</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1618</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.zarate.tv/wp-content/uploads/2010/06/mail.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/06/mail.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1204";s:6:"height";s:3:"902";s:14:"hwstring_small";s:23:"height='95' width='128'";s:4:"file";s:16:"2010/06/mail.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"mail-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:16:"mail-300x224.png";s:5:"width";s:3:"300";s:6:"height";s:3:"224";}s:5:"large";a:3:{s:4:"file";s:17:"mail-1024x767.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"767";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Threads in AS3</title>
		<link>http://blog.zarate.tv/?p=46</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=46</guid>
		<description></description>
		<content:encoded><![CDATA[thttp://blogs.adobe.com/aharui/2008/01/threads_in_actionscript_3.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date>2008-11-26 22:31:59</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ContainerCreationPolicy.ALL</title>
		<link>http://blog.zarate.tv/?p=48</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=48</guid>
		<description></description>
		<content:encoded><![CDATA[ContainerCreationPolicy.ALL

http://livedocs.adobe.com/flex/3/html/help.html?content=containers_intro_3.html

Besides:



<blockquote>The TabNavigator container automatically creates a tab for each of its children and determines the tab text from the label property of the child, and the tab icon from the icon property of the child.</blockquote>

http://livedocs.adobe.com/flex/3/html/help.html?content=navigators_4.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date>2008-09-16 14:14:44</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Adobe FXG and SVG</title>
		<link>http://blog.zarate.tv/?p=100</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=100</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.andersblog.com/archives/2008/09/flash_on_the_be.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date>2008-10-01 07:49:09</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Play OGG files in Flash. Hell yeah!</title>
		<link>http://blog.zarate.tv/?p=116</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=116</guid>
		<description></description>
		<content:encoded><![CDATA[http://barelyfocused.net/blog/2008/10/03/flash-vorbis-player/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>116</wp:post_id>
		<wp:post_date>2008-10-03 14:56:34</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="haxe"><![CDATA[haxe]]></category>
		<category domain="category" nicename="ogg"><![CDATA[ogg]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>GNash is a high priority for the FSF</title>
		<link>http://blog.zarate.tv/?p=131</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=131</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.fsf.org/campaigns/priority.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>131</wp:post_id>
		<wp:post_date>2008-10-05 21:46:26</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>You suckers</title>
		<link>http://blog.zarate.tv/?p=135</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=135</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.bit-101.com/blog/?p=1552

http://number27.org/beyondflash.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>135</wp:post_id>
		<wp:post_date>2008-10-06 10:59:23</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Closing web 2.0 apps</title>
		<link>http://blog.zarate.tv/?p=169</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=169</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.elmundo.es/elmundo/2008/10/13/catalejo/1223853824.html

http://news.cnet.com/8301-17939_109-10063034-2.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date>2008-10-13 07:49:43</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Agencies are deadline driven. In software development, nothing is ever on time</title>
		<link>http://blog.zarate.tv/?p=246</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=246</guid>
		<description></description>
		<content:encoded><![CDATA[Back in 2007 I attended <a href="http://www.madinspain.com/">MadInSpain</a> where there was a nice discussi

http://feeds.feedburner.com/~r/jessewarden/~3/443553334/agile-chronicles-1-stressful.html

Creating awesomeness with no result is extremely more frustrating than flat out failing]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>246</wp:post_id>
		<wp:post_date>2008-12-12 09:55:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Show me the money!</title>
		<link>http://blog.zarate.tv/?p=284</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=284</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.offbeatguides.com/

http://www.error500.net/articulo/offbeat-guides-y-los-productos-hiper-personalizados#comment-19550]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>284</wp:post_id>
		<wp:post_date>2008-11-13 09:42:19</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Prevent access to SVN folders</title>
		<link>http://blog.zarate.tv/?p=299</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=299</guid>
		<description></description>
		<content:encoded><![CDATA[Just a little note to self. When deploying sites using SVN add this line to .htaccess:

[code lang="bash"]RedirectMatch 403 /\..*$[/code]

That prevents access to all hidden files.

http://wiki.dreamhost.com/Subversion#Automatic_Post-commit_Checkout]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>299</wp:post_id>
		<wp:post_date>2008-11-15 15:35:04</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Lame scripts</title>
		<link>http://blog.zarate.tv/?p=319</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=319</guid>
		<description></description>
		<content:encoded><![CDATA[Do!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>319</wp:post_id>
		<wp:post_date>2008-11-19 09:54:34</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Programming is a loop</title>
		<link>http://blog.zarate.tv/?p=321</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=321</guid>
		<description></description>
		<content:encoded><![CDATA[Create array_map]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>321</wp:post_id>
		<wp:post_date>2008-11-19 09:55:23</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The sources are mine!</title>
		<link>http://blog.zarate.tv/?p=359</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=359</guid>
		<description></description>
		<content:encoded><![CDATA[http://preguntas.barrapunto.com/article.pl?sid=08/11/26/187210

http://www.pabloburgueno.com/2008/11/%C2%BFdebo-dar-al-cliente-el-codigo-fuente/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>359</wp:post_id>
		<wp:post_date>2008-11-27 11:23:29</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MySQL 5.1</title>
		<link>http://blog.zarate.tv/?p=412</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=412</guid>
		<description></description>
		<content:encoded><![CDATA[http://monty-says.blogspot.com/2008/11/oops-we-did-it-again-mysql-51-released.html

http://developers.slashdot.org/article.pl?sid=08/12/01/1627257&from=rss

http://books.slashdot.org/article.pl?sid=08/12/01/1457236&from=rss

http://developers.slashdot.org/comments.pl?sid=1046991&cid=25947801:

<blockquote>I'm not sure what you are trying to say. If we have to play car analogy - lets say both cars engines will fail if you go over 80 kmh on a sunday while wearing blue. One vendor will tell you before you buy the car - the other waits until you've been on the phone with roadside assistance for a couple days. The severity of the issue is the same - it's just how the manufacturer handles it that is different.</blockquote>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>412</wp:post_id>
		<wp:post_date>2008-12-02 09:15:55</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Variables local to loops</title>
		<link>http://blog.zarate.tv/?p=498</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=498</guid>
		<description></description>
		<content:encoded><![CDATA[I like them but don't work with Flex SDK compiler.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>498</wp:post_id>
		<wp:post_date>2008-12-17 11:40:49</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DisplayObject root and stage</title>
		<link>http://blog.zarate.tv/?p=500</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=500</guid>
		<description></description>
		<content:encoded><![CDATA[Not surprising, but might bite you in the ass at some point. DisplayObject's root and stage properties are null until it's added to the display list via addChild().

But this is quite annoying, actually. Because you cannot subscribe to global keyboard events until the object has been added to the list. Also you cannot set the focus to any of the children of your object using stage.focus = wadus.

 how do you know when that has happened? The <a href="http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/flash/display/DisplayObject.html#event:addedToStage">addedToStage event</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>500</wp:post_id>
		<wp:post_date>2008-12-28 10:54:34</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sprite.getChildren()</title>
		<link>http://blog.zarate.tv/?p=512</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=512</guid>
		<description></description>
		<content:encoded><![CDATA[You wish. Want go through all the children in a Sprite? You have: getChildAt, getChildByName, getChildIndex,... where's getChildren()?!

You have to do it manually using <a href="http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/flash/display/DisplayObjectContainer.html#numChildren">numChildren</a>:

[code lang="actionscript"]for(var x:int=0;x<mySprite.numChildren;x++){
	
	var child:DisplayObject = mySprite_mc.getChildAt(x);
	// do something with child
	
}[/code]

I'd love to be able to do this:

[code lang="actionscript"]for each(var child in mySprite.children){
	
	// do something with child
	
}[/code]

Simpler.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>512</wp:post_id>
		<wp:post_date>2008-12-18 20:50:45</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Flash Player runtime errors</title>
		<link>http://blog.zarate.tv/?p=546</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=546</guid>
		<description></description>
		<content:encoded><![CDATA[http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/runtimeErrors.html

Ok, could you please explain them a little bit??????]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>546</wp:post_id>
		<wp:post_date>2008-12-22 12:18:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Loader.iKnowYouDontKnowYetButWheneverReadySetWidthTo</title>
		<link>http://blog.zarate.tv/?p=548</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=548</guid>
		<description></description>
		<content:encoded><![CDATA[Sorry for the post title, it had to be done.

Anyway. As a Flash developer you know you could go to hell if you EVER try to set up the size of a dynamic image before it's fully loaded, God forbid something like that happens. But wouldn't be nice?

[code lang="actionscript"]var loader:Loader = new Loader();
loader.iKnowYouDontKnowYetButWheneverReadySetWidthTo = 100;
loader.iKnowYouDontKnowYetButWheneverReadySetHeightTo = 100;
loader.load(new URLRequest("wadus.png"));[/code]

So you don't have to listen to the event <em>just</em> to resize the image? Sure if you are on a web environment you need to listen to the events anyway for preloading, but when you are building a desktop app this would help. I think it's so nice that I've asked the lovely Flash player engineers. Go vote for it!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>548</wp:post_id>
		<wp:post_date>2008-12-23 02:32:43</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AS3 sound woes</title>
		<link>http://blog.zarate.tv/?p=563</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=563</guid>
		<description></description>
		<content:encoded><![CDATA[The <a href="http://www.make-some-noise.info/">Adobe, make some noise</a> guys seem (somewhat) happy with the AS3 sound API so this might be me again not getting it, but I don't understand these:

- The sound object has a play method but it doesn't have a stop method.
- Instead, when you call the play method it returns a SoundChannel object that has the marvelous stop method available.
- SoundChannel position property is <strong>read only</strong>. If you want to set it up you have to call sound.play and pass the new position. I find this annoying because what if I have a sound player stopped AND want to move the playhead to a different position WITHOUT starting playing?

See the quotes around returns? The Sound object does <em>not</em> have a soundChannel property that you could use like this:

[code lang="ActionScript"]var channel:SoundChannel = new SoundChannel();
var s:Sound = new Sound();
s.soundChannel = channel;[/code]

Instead, the sound.play() method apparently returns an instance of SoundChannel but that is weird:

[code lang="ActionScript"]var channel:SoundChannel = new SoundChannel();
var s:Sound = new Sound();
channel = s.play(); // WTF???[/code]

Plus, whenever you play/pause or change the volume you MUST reassign both the SoundChannel and the SoundTransform objects or they get lost.

http://www.republicofcode.com/tutorials/flash/as3sound/

Anyway, if you don't really need/want to learn all this stuff, just download and use ZAudio, a class that hides all these under the carpet offering a simple interface with play, pause, reset, set time and volume methods, etc. All in one single class for your pleasure.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>563</wp:post_id>
		<wp:post_date>2009-01-02 20:15:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Find your hardware</title>
		<link>http://blog.zarate.tv/?p=279</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=279</guid>
		<description></description>
		<content:encoded><![CDATA[
http://ubuntu.wordpress.com/2007/02/18/find-hardware-specs-details-on-your-computer/

Which Linux is installed
lsb_release -d -s -c]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>279</wp:post_id>
		<wp:post_date>2009-02-07 19:42:53</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Listen globally to keyboard events in AS3</title>
		<link>http://blog.zarate.tv/?p=587</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=587</guid>
		<description></description>
		<content:encoded><![CDATA[As you can read anywhere else, to listen globally to keyboard events you should be a listener of the stage. What you don't read that often is that the stage only receives keyboard events IF no other object has the focus.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>587</wp:post_id>
		<wp:post_date>2009-01-06 13:03:35</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Main and extending with the same private method</title>
		<link>http://blog.zarate.tv/?p=621</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=621</guid>
		<description></description>
		<content:encoded><![CDATA[You have class A and class B that extends it. Both can have a private method with the same name but the only one called is the one in the main class A.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>621</wp:post_id>
		<wp:post_date>2009-01-11 20:11:02</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Custom events in AS3, yes, but not always</title>
		<link>http://blog.zarate.tv/?p=656</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=656</guid>
		<description></description>
		<content:encoded><![CDATA[I've found myself doing this error, so I thought I'd share. You have two classes and one has to listen to some event the other one dispatches, right? Well, you <strong>only</strong> need to create a custom event (that's a new class extending flash.events.Event) <strong>if</strong> you need extra parameters in the event.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>656</wp:post_id>
		<wp:post_date>2009-01-28 11:08:47</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>VMs and Symbolic Links</title>
		<link>http://blog.zarate.tv/?p=710</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=710</guid>
		<description></description>
		<content:encoded><![CDATA[Last time I reinstalled my machine I finally updated VirtualBox and this is the first version that has finally made USB and shared folders work for me (Ubuntu host, WinXP guest).

Now I can specify from my host which files and folders are shared with the guest. What I'm doing is instead of adding those folders one by one using VirtualBox interface is creating symbolic links from the shared folder to anywhere on the host. 


And I find this really useful. On the guest I only connect to *one* folder but still has potential access to everything. I just need to create/remove symbolic links:

[code lang="bash"]ln -s /path/to/folder new_name[/code]

Sweet.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>710</wp:post_id>
		<wp:post_date>2009-04-25 10:12:11</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Apache 2 post installation tasks</title>
		<link>http://blog.zarate.tv/?p=763</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=763</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
	<li>Edit default configuration: sudo gedit /etc/apache2/sites-available/default</li>
<ul>
	<li>Point DocumentRoot to home/www</li>
	<li>Most likely home needs chmod -R 755 or Apache won't follow symlinks to another partition</li>
</ul>
	<li>Enable mod_rewrite: sudo ln -s /etc/apache2/mods-available/rewrite.load /etc/apache2/mods-enabled/rewrite.load</li>
</ul>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>763</wp:post_id>
		<wp:post_date>2009-02-19 20:07:30</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>There are storms in the cloud</title>
		<link>http://blog.zarate.tv/?p=772</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=772</guid>
		<description></description>
		<content:encoded><![CDATA[And you better have a back up of your data

http://citizengarden.com/2009/02/15/episode-11-whither-magnolia/

http://tech.slashdot.org/article.pl?sid=09/02/20/1543208&from=rss

http://tech.slashdot.org/comments.pl?sid=1135195&cid=26931131

<blockquote>lesson #1, on the 'net you can't tell the major corporation from the kid in a garage
lesson #2, trust no-one with your data
lesson #3 disaster recovery capability only exists after it's been tested
lesson #4 backups are useless unless you can prove you can recover from them</blockquote>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>772</wp:post_id>
		<wp:post_date>2009-02-21 10:44:19</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gotta love single-tasking</title>
		<link>http://blog.zarate.tv/?p=789</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=789</guid>
		<description></description>
		<content:encoded><![CDATA[I think this might hurt my prospects of being hired but I hope it balances with the fact that I'm being very open and honest. Also I'm such a nice guy.

Anyway, just found out this pic (thanks for sharing, <a href="http://bomberstudios.com/">Ale</a>):

<a href="http://www.flickr.com/photos/timferriss/2455345820/sizes/o/"><img alt="" src="http://farm3.static.flickr.com/2170/2455345820_f31ac697a8_o.jpg" title="Single tasking rocks" class="alignnone" width="480" height="640" /></a>

Priceless. Many job offers I read go like this or similar: "ability to multi-task is essential". And at that moment alarms go off because this is how it sounds in my head:

<blockquote>quality is not our or our clients' primary focus, get things done and meet the deadlines is</blockquote>

Let me say this: multi-tasking is not good for the project. Let me prove my point. I have this project which consists in keeping oranges in the air. You have to keep the oranges in the air as much as possible. I give you one to begin with, can you do it? Of course you can. Now with 2. Piece of cake. Now 3. Ok. Now 4, now 5, now 6... where are the oranges now? Thought so. See, multi-tasking is bad, it doesn't let you give your full attention to each of the <del datetime="2009-02-27T10:20:56+00:00">projects</del> oranges.

I posted about this almost a year ago (<a href="http://www.dandolachapa.com/2008/03/04/multitasking/">Multitasking</a>, in Spanish) and I'll re-quote this:

<blockquote>The danger of a distraction depends not on how long it is, but on how much it scrambles your brain. A programmer can leave the office and go and get a sandwich without losing the code in his head. But the wrong kind of interruption can wipe your brain in 30 seconds.

Oddly enough, scheduled distractions may be worse than unscheduled ones. <strong>If you know you have a meeting in an hour, you don't even start working on something hard</strong>.

Since there's a fixed cost each time you start working on a program, it's more efficient to work in a few long sessions than many short ones.

One of the defining qualities of organizations since there have been such a thing is to <strong>treat individuals as interchangeable parts</strong>. This works well for more parallelizable tasks, like fighting wars. For most of history a well-drilled army of professional soldiers could be counted on to beat an army of individual warriors, no matter how valorous. But having ideas is not very parallelizable. And that's what programs are: ideas.</blockquote>

Can I multi-task? Of course I can. Do I think is the best way of developing software? Hell no.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>789</wp:post_id>
		<wp:post_date>2009-02-27 11:57:40</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="the-industry"><![CDATA[the industry]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Strong typed callbacks</title>
		<link>http://blog.zarate.tv/?p=850</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=850</guid>
		<description></description>
		<content:encoded><![CDATA[Surely this is not rocket science but I hadn't used it in the past and I think it's pretty clever. One of the downsides of using callbacks is that you lose type validation.

class A{
   function wadus(a:Number,b:String):void{}
}

class B{
   function B(){
      
   }
}

var callback:Function = Delegate.create(this,wadus);

function wadus(a:Number,b:String):void{}]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>850</wp:post_id>
		<wp:post_date>2009-03-21 13:10:21</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MySQL INSERT...SELECT</title>
		<link>http://blog.zarate.tv/?p=950</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=950</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dev.mysql.com/doc/refman/5.1/en/insert-select.html">INSERT ... SELECT</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>950</wp:post_id>
		<wp:post_date>2009-05-06 10:31:38</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CPU usage in AIR and Flash player</title>
		<link>http://blog.zarate.tv/?p=973</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=973</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.gskinner.com/blog/archives/2009/05/idle_cpu_usage.html

http://blogs.adobe.com/air/2009/05/performance_tips_for_adobe_air.html

http://arno.org/arnotify/2009/05/writing-well-behaved-efficient-air-applications/

http://bugs.adobe.com/jira/browse/FP-2009]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>973</wp:post_id>
		<wp:post_date>2009-05-11 10:17:05</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>You should pay for your mistakes</title>
		<link>http://blog.zarate.tv/?p=977</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=977</guid>
		<description></description>
		<content:encoded><![CDATA[http://developers.slashdot.org/article.pl?sid=09/05/09/1339213

http://www.linuxjournal.com/content/should-software-developers-be-liable-their-code]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>977</wp:post_id>
		<wp:post_date>2009-05-11 10:33:52</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>It&#039;s always a sunny day for designers</title>
		<link>http://blog.zarate.tv/?p=1002</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1002</guid>
		<description></description>
		<content:encoded><![CDATA[This is a timeless classic. Everything fits nicely and perfectly in your Photoshop, doesn't it? God I hate you.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1002</wp:post_id>
		<wp:post_date>2009-05-26 11:58:44</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Get keys out of a Dictionary</title>
		<link>http://blog.zarate.tv/?p=1004</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1004</guid>
		<description></description>
		<content:encoded><![CDATA[Note to self:

for each(var item in dictionary) : Iterate over elements
for (var key in dictionary) : Iterate over keys

http://www.gskinner.com/blog/archives/2006/07/as3_dictionary.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1004</wp:post_id>
		<wp:post_date>2009-05-26 14:19:02</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AS3 Footie Shirt</title>
		<link>http://blog.zarate.tv/?p=1008</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1008</guid>
		<description></description>
		<content:encoded><![CDATA[This is the happy ending to something that sometimes doesn't have it. You know, when you get a design and you instantly see something let's say... <em>challenging</em> and you go like: "see that over there? would love to do it, but you don't have the time or the budget". It might not be something really difficult (like what I'm going to show), but if deadline and budget are tight, usually there's no time for details. Anyway.

Have you ever had to pick a text and make it follow a curve? You know, same as in footballers' t-shirts? Well, I had to. Not for a <em>put-your-name-here</em> sort of thing, but the same concept.

Luckily for me, 80% of work was done already. Unluckily for me, the 20% that was left to do had to do with that <em>arcane-wizardry-half superstition</em> thing called <strong>trigonometry</strong>.

What I'm going to demo, you can sum up like this: "Calculate the length of the arc needed by the text, then the angle for that arc (based on the radius you want to use), then divide in half (so it's centred) and finally subtract 90 degrees so it's at the top of the circumference. But don't forget to adjust to Flash's coordinate system". Easy peasy!

At the end of the post there's the link to the demo (which contains some explanations) but I want to thank <a href="http://www.tom-carden.co.uk/2008/10/01/text-along-a-path-in-flash/">Tom Carden</a> and no other than Mr. <a href="http://www.senocular.com/flash/actionscript.php?file=ActionScript_3.0/com/senocular/drawing/Path.as">Senocular</a> for that 80% work that was already there for me to build upon. Credit where credit belongs.

And to finish up, I AM going to buy a book of trigonometry for dummies. I'm SO fed up with being stuck with stuff like this which is actually VERY simple once you know the basics. Remember kids: 

<blockquote>do not try to score with the girls in your class when the teacher is explaining pointless things on the board. It turns out they are point-FULL! </blockquote>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1008</wp:post_id>
		<wp:post_date>2009-05-30 10:01:25</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Amazing Linux conversation in /.</title>
		<link>http://blog.zarate.tv/?p=1022</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1022</guid>
		<description></description>
		<content:encoded><![CDATA[http://linux.slashdot.org/story/09/05/30/1740205/Harsh-Words-From-Google-On-Linux-Development?from=rss

http://linux.slashdot.org/comments.pl?sid=1250893&cid=28151855

http://linux.slashdot.org/comments.pl?sid=1250893&cid=28153237

http://linux.slashdot.org/comments.pl?sid=1250893&cid=28153575

http://linux.slashdot.org/comments.pl?sid=1250893&cid=28151987

http://d7.allthingsd.com/20090528/d7-interview-mitchell-baker-and-john-lilly/

http://linux.slashdot.org/story/09/06/01/1311206/Should-Enterprise-IT-Give-Back-To-Open-Source?from=rss

http://blogs.fsfe.org/greve/?p=347

<blockquote>The second form of false enemies use Free Software according to the parameters defined by the license chosen for a certain project, but do not contribute back. These companies make use of the freedoms that were explicitly granted, but often find themselves heavily criticised for falling into the gap between unwritten community rules and explicit legal regimes. This criticism conveys a rather unhelpful lesson: Use of Free Software gives rise to public criticism and risks the company’s public profile.
This is not the message the Free Software community should want to send. Active citizenship is an asset, and should be encouraged. But as long as companies meet their legal obligations, they should be at liberty to be hermits. Not only is it impossible to enforce willing pro-active participation, through public criticism and stigma public perception of these companies overlaps with those who break the explicit legal rules. This discourages legal discipline and weakens the brand by confusing “anyone’s gut feeling.”</blockquote>

http://linux.slashdot.org/story/09/06/05/1550212/FSFE-President-Urges-Community-To-Strengthen-Open-Source-As-a-Brand?from=rss]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1022</wp:post_id>
		<wp:post_date>2009-06-05 21:03:51</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Slow and smooth</title>
		<link>http://blog.zarate.tv/?p=1025</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1025</guid>
		<description></description>
		<content:encoded><![CDATA[Yeah, don't be so excited, it's not quite as pornish as it sounds.

For many years Flash devs have struggle to get fast and smooth tweens, but what if you need them <strong>slow</strong>?

Basically, if you need something smooth, you need a high framerate, it doesn't seem to be a doubt about that. But if you have a high framerate most likely you are going to move fast. To balance that speed you need to make small movements. But how small? Your first instinct is move things by 1px, but at between 30 - 60 fps a pixel movement was too much for what I needed.

Then you go sub-pixel. And that's exactly when the classic not-on-rounded-pixels problem arises. Flash doesn't like to slit up poor pixels, so it complains in the form of dodgy looking tweens, specially if there's text involved. Luckily for me I caught <a href="http://www.ventdaval.com/">Vent</a> on MSN and told me to give a go to cacheAsBitmap which certainly gets rid of most of the dodgyness that comes with pixel fractions, but still is not good enough.

So, what was I trying to do? Load some images and put them on the stage "floating". <em>Y'know, like... floating</em>. Yep, that was the <em>briefing</em>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1025</wp:post_id>
		<wp:post_date>2009-06-01 20:38:05</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Being an IT person is being a computer janitor.</title>
		<link>http://blog.zarate.tv/?p=1084</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1084</guid>
		<description></description>
		<content:encoded><![CDATA[http://it.slashdot.org/comments.pl?sid=1262865&cid=28275517


http://it.slashdot.org/story/09/06/09/2028202/How-Do-IT-Guys-Get-Respect-and-Not-Become-BOFHs?from=rss

http://it.slashdot.org/comments.pl?sid=1262865&cid=28275545

I agree as far as "They treat us like crap when everything is working perfectly." I've been in places where everything worked smoothly, and we were treated like garbage, and I've been in places where nothing worked, and we were treated like kings.

http://it.slashdot.org/comments.pl?sid=1262865&cid=28275687

http://it.slashdot.org/comments.pl?sid=1262865&cid=28275225

http://it.slashdot.org/comments.pl?sid=1262865&cid=28275253]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1084</wp:post_id>
		<wp:post_date>2009-06-10 08:11:56</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Help me love OSX</title>
		<link>http://blog.zarate.tv/?p=1087</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1087</guid>
		<description></description>
		<content:encoded><![CDATA[Please!

This is what I want:

- Having an application open in 2 different spaces. Example: FF open with gMail in one space and FF open with my localhost in another.
- When in one space, I want to ALT+TAB <strong>only</strong> through the applications on that space. This, btw, would get rid of another problem which is when you ALT+TAB to an application that is <strong>not</strong> on the current space, nothing happens.
- I want to get rid of the stupid sound the console makes when there's an error.
- FOR THE LOVE OF GOD DO SOMETHING ABOUT THE KEYBOARD. Latest gem is that in Eclipse PageUp and PageDown so the same as End/Beginning of line. Seriously, how you guys type in this?

And just to avoid a little bit looking like the biggest anti-Mac-fan-that-owns-a-mac impression, here's something that I actually like:

- When you see the spaces, you can move them around. That's nice indeed, not sure you can do it in Gnome or KDE.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1087</wp:post_id>
		<wp:post_date>2009-06-12 13:06:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>My perfect career path</title>
		<link>http://blog.zarate.tv/?p=1127</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1127</guid>
		<description></description>
		<content:encoded><![CDATA[http://stackoverflow.com/questions/1022172/work-for-huge-company-or-small-company-that-makes-products-for-huge-company]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1127</wp:post_id>
		<wp:post_date>2009-06-21 11:59:39</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>My experience outsourcing</title>
		<link>http://blog.zarate.tv/?p=265</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=265</guid>
		<description></description>
		<content:encoded><![CDATA[READ:

http://news.slashdot.org/story/09/06/22/0019233/Indian-CEO-Says-Most-US-Tech-Grads-Unemployable?from=rss

READ:

http://www.elmundo.es/elmundo/2009/05/13/nodoycredito/1242179131.html

Might impact national security:

http://it.slashdot.org/story/09/06/11/1355257/Collateral-Damage-From-Cyber-Warfare?from=rss

Regarding outsourcing I've been in both sides. Just before coming to the UK I was employed in a <em>software factory</em> and working for a big bank. At the time I thought the protocols were a little bit loose and it wasn't until I went to my next company when I realize how tight they actually were.

We had a ton of <em>collateral</em> things to do and for short tasks we used to spend more time doing them rather than coding. But that was the only way a huge company like the bank could deal with 2-3 different factories, some of them in different countries.

Fast forward to last year and I'll tell you my latest outsourcing story where I was <del datetime="2009-02-07T23:27:28+00:00">punished</del> charged with the fascinating task of supervising an outsourced project. 

Outsourcing is a matter of money. Companies do it because the want to produce the same expending less and thus making more profit. Or so they think. Although this is technically possible it takes A LOT of effort and planning. But a lot. Unless you have a very clear and well set up methodology the money you are supposed to save because of the lower wages gets wasted everytime:

- The company sends you an email

This is the theory:

- You save money because wages are lower
- 

I think companies outsource not because the people they have around is not clever enough, they do it because of the money. 

Fro the sake of the argument, let's say ALL companies do that. Now nobody in the US has a job, to whom are they going to sell what they produce? Who's going to buy the iPods? Who's going to buy the cars? Certainly NOT the outsourced people that got the job because, remember, they get LOWER salaries.



It sucks

Just to put you in context:

- I'm Spanish and Spain:
-- Was a poor country in the 60s sending 100s of people to France, Germany, Switzerland, etc
-- Is not a "rich" country and receives 1000s of people from South America and North Africa.

- I live in England
- I've worked as an external company for a big bank, so I was doing outsourced job (although in the same country)
- I've worked twice with outsourced teams supervising them.

So, I have some experience in the subject : )

http://news.slashdot.org/article.pl?sid=09/02/06/2010241&from=rss

http://news.slashdot.org/comments.pl?sid=1119209&cid=26761329

http://news.slashdot.org/comments.pl?sid=1119209&cid=26761191
"We want protectionism in what we produce and free market in what we consume"

http://news.slashdot.org/comments.pl?sid=1119209&cid=26758697
"Americans workers would like to work in America for American wages. However, are they also willing to pay the prices of American made products?"

http://news.slashdot.org/comments.pl?sid=1119209&cid=26758933
"Americans have grown to feel entitled to a certain standard of living that is disproportionate event to other Western nations. This is because we've been buying on credit. What Americans need to do is live with fewer toys. And, perhaps if we pay the price for American made toys, we will appreciate them more."

http://news.slashdot.org/comments.pl?sid=1119209&cid=26760459
"the jobs don't have to be exported for the company to remain profitable. The owners simply aren't satisfied with the hundreds of millions per year they're already making."


http://news.slashdot.org/comments.pl?sid=1119209&cid=26758981
"Has IBM announced consulting price-cuts to go along with their now lower wages? If not then they're really not competing. They're just trying to get a larger profit margin out of their current pricing scheme. We should start calling bull on this sort of thing. Let's change the headline to:"]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>265</wp:post_id>
		<wp:post_date>2009-06-22 07:59:50</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="the-industry"><![CDATA[the industry]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>As God is my witness, I&#039;ll never FTP again</title>
		<link>http://blog.zarate.tv/?p=323</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=323</guid>
		<description></description>
		<content:encoded><![CDATA[As Flash development gets more professional more and more people are using some kind of source control for their sources which is G-R-E-A-T. But still, there's a lot of people out there using FTP to upload websites to their servers which is B-A-D.

Let's say you are working on a typical Flash project where you have under source control this folder structure:

bin // <-- swfs, html, js, css, etc
src // <-- AS source files 

To fix a bug you do some changes, update a swf and you commit the new revision to the repository. Next thing you have to do is update your live server with these changes and this is where you would normally FTP the updated SWF. But why FTP when you can use source control? Remember that your server is nothing more than another computer you can use as long as:

* You can SSH to it, ie: remotely access it using the console.
* It has installed a client for your source control system, ie : SVN, Git, Mercurial, etc.

If your ISP doesn't meet those 2 requirements, the party is over. Having said that, they are basic features these days so if yours ISP doesn't offer them... well, move to another place : ) Since this is not a sponsored post, I can't tell you my hosting provider, but it starts by <em>dream</em> and finishes by <em>host</em>. 

Cool, now that you are on a decent hosting, let's continue.

First, you need to SSH to your server. What that means is that you are going to open a console window that is going to execute what you type in your server. Whatever you type is as if you were physically typing it on the server. As long as your server goes, you are there typing your stuff. SSH is simple:

[code lang="bash"]ssh user@domain.com[/code]

If your server accepts SSH and you have the proper rights, you would be prompted for your SSH password. Type it in and... BAM! you are in! [<em>First time I did this I totally felt like the best hacker in the world</em>]

Now, this where source control comes into play. Let's assume SVN, but Git or any other would be pretty much the same <strong>as long as your server has a command line client for it installed</strong>.

<strong>Export vs Checkout</strong>

This is the first decision you have to make, export vs checkout. Remember that the difference is that export would only bring you the files, but not the SVN goodness (the .svn folders, that is). I personally prefer checking out and the reason is that <strong>when you checkout, you can diff and find local modifications</strong>. Why would you have modifications on the server? 2 bad reasons:

* You've had to make some nasty changes to the files so they run on the server. This usually happens with paths, configuration files, etc. Most of the times you should try to avoid this by all means, but let's assume it's a must. Well, you know what you've modified just by running svn diff.

* You've been hacked. Somebody has accessed your server and modified files to distribute malware so you need to go back to your previous state ASAP. What's simpler than <em>svn revert -R</em>? SVN brings back your files and you know they are in a good state, cause that's exactly the state you left them.

<strong>IMPORTANT</strong>: If you decide to checkout, please note that your .svn folders would be openly available to the public which is a <strong>BAD THING™</strong>. A little .htaccess magic fixes the problem:

[code lang="bash"]RewriteRule ^(.*/)?\.svn/ – [F,L]
ErrorDocument 403 "Access Forbidden[/code] 

<strong>Updating</strong>

For many people putting up a temp index page while updating is more than enough. Having said that, you could be in a situation where any downtime would be problematic. Also, running <em>svn update</em> (or uploading via FTP for that matter) is not an atomic operation because files are updated one by one. The problem is that your SWF might depend on a JS file and if someone access your page in the middle of the update it could get a new SWF with an old JS, a new HTML with an old CSS or a new PHP code with an old DB. The bigger your site is, the more chances you have of something like this happening. You can avoid this using hard links.

Basically, you put your code on a private folder and then re-route your public folder using hard links. That means you checkout your code to a <strong>different</strong> private folder and only when all the code has been updated/checked out, you change the hard link from the old folder to the new folder.

http://uk.youtube.com/watch?v=rgjHuOnwhFA]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>323</wp:post_id>
		<wp:post_date>2010-11-14 21:21:36</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_82f18667e3981ebca0508cc1be216c29</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>No 3rd party libraries for Apple</title>
		<link>http://blog.zarate.tv/?p=1138</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1138</guid>
		<description></description>
		<content:encoded><![CDATA[http://jobs.apple.com/index.ajs?BID=1&method=mExternal.showJob&RID=36106&CurrentPage=1

<blockquote>Competent JavaScript programmer who doesn't need to rely on libraries to accomplish innovative interactions.</blockquote>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1138</wp:post_id>
		<wp:post_date>2009-06-23 21:21:10</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Amazing World of Software Version Numbers</title>
		<link>http://blog.zarate.tv/?p=1176</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1176</guid>
		<description></description>
		<content:encoded><![CDATA[http://tech.slashdot.org/story/09/07/14/1546253/The-Amazing-World-of-Software-Version-Numbers?from=rss]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1176</wp:post_id>
		<wp:post_date>2009-07-15 07:17:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ubuntu DNG viewer</title>
		<link>http://blog.zarate.tv/?p=1186</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1186</guid>
		<description></description>
		<content:encoded><![CDATA[Use Picasa, don't bother. 

Just happen to have my <a href="http://delgado.es/">brother</a> around and as a self-respected geek and photographer he shoots in <a href="http://en.wikipedia.org/wiki/Digital_Negative_(file_format)">DNG</a> format, not loosy JPGs. Problem is Gnome doesn't preview DNG files so a quick review to <del datetime="2009-07-23T19:06:01+00:00">steal</del> review the pics becomes some sort of a mission.

There's <a href="http://ufraw.sourceforge.net/">UFRaw</a> both as a standalone app or as a GIMP plugin, but I don't want to tweak the picture, just want to quickly view it. After some consultations to the oracle couldn't find anything until I read in a forum about <a href="http://picasa.google.co.uk/">Picasa</a>.

By any means I'm a fan of such "big" apps, but Picasa does the job. Not sure how the Windows version works, but the one for Ubuntu is very fluent and quick, I have to admit.

If anyone has a better option I'm all ears. For the time being I'm stuck with Picasa.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1186</wp:post_id>
		<wp:post_date>2009-07-23 20:24:55</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting OSX to be dev friendly</title>
		<link>http://blog.zarate.tv/?p=1223</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1223</guid>
		<description></description>
		<content:encoded><![CDATA[Install Xcode (from DVD)
Install MacPorts]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1223</wp:post_id>
		<wp:post_date>2009-08-30 18:18:11</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wasting time</title>
		<link>http://blog.zarate.tv/?p=1464</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1464</guid>
		<description></description>
		<content:encoded><![CDATA[End of lines.
Different folder separators.
Dot or comma for decimals.
MM/DD/YYYY vs DD/MM/YYYY.
An English billion vs a fucking billion.

http://en.wikipedia.org/wiki/Billion

WHY DO WE KEEP DOING THIS SHIT? Where's the fucking UN when you need it?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1464</wp:post_id>
		<wp:post_date>2010-02-09 12:04:05</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Senior. Or not.</title>
		<link>http://blog.zarate.tv/?p=1509</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1509</guid>
		<description></description>
		<content:encoded><![CDATA[
Senior is not only about skills. Is about being able to communicate with clients, project managers and peers. Is about recognizing crappy situations soon. Is about knowing when to give up and when pushing harder. Is about recognizing the work of other people, including competence. Is about having friends to help you out on a dead end situation.

Knowing this or that language is important, but:

http://www.codinghorror.com/blog/2008/02/the-years-of-experience-myth.html

<blockquote>This toxic, counterproductive years of experience myth has permeated the software industry for as long as I can remember. Imagine how many brilliant software engineers companies are missing out on because they are completely obsessed with finding people who match-- exactly and to the letter-- some highly specific laundry list of skills.

Somehow, they've forgetten that <strong>what software developers do best is learn</strong>. Employers should be loooking for passionate, driven, flexible self-educators who have a proven ability to code in whatever language -- and serving them up interesting projects they can engage with.</blockquote>

And to close up, senior is about posting what a senior is and highlight your own strengths :P]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1509</wp:post_id>
		<wp:post_date>2010-04-10 23:33:12</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cron job at DH</title>
		<link>http://blog.zarate.tv/?p=1527</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1527</guid>
		<description></description>
		<content:encoded><![CDATA[http://wiki.dreamhost.com/Cron]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1527</wp:post_id>
		<wp:post_date>2010-04-16 14:09:35</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Launchd with SSH</title>
		<link>http://blog.zarate.tv/?p=1541</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1541</guid>
		<description></description>
		<content:encoded><![CDATA[We've been lately coding a little nice

http://developer.apple.com/mac/library/documentation/Darwin/Reference/ManPages/man5/launchd.plist.5.html#//apple_ref/doc/man/5/launchd.plist

http://developer.apple.com/macosx/launchd.html

http://forums.macosxhints.com/archive/index.php/t-47804.html

http://www.dribin.org/dave/blog/archives/2007/11/28/ssh_agent_leopard/

http://arunxjacob.wordpress.com/2008/08/28/mac-launchd-and-launchctl-the-osx-alternative-to-cron/

[code lang="bash"]me=`whoami`
export SSH_AUTH_SOCK=`find /tmp/launch-*/Listeners -user ${me} -type s | head -1`
/Applications/helper[/code] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1541</wp:post_id>
		<wp:post_date>2010-05-03 14:33:30</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AS3 Vector flakyness</title>
		<link>http://blog.zarate.tv/?p=1556</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1556</guid>
		<description></description>
		<content:encoded><![CDATA[Can change for Dictionary?

for each(var s : String in kaker)
{
// change type and it works]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1556</wp:post_id>
		<wp:post_date>2010-05-06 14:01:48</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AIR holds pointers to files</title>
		<link>http://blog.zarate.tv/?p=1558</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1558</guid>
		<description></description>
		<content:encoded><![CDATA[This one caught me by surprise and I'm still not sure what I think about it. When you create a new instance of a File object <strong>the AIR runtime holds an actual pointer to the file</strong>. 

This is, let's say, very powerful.  You create the instance, and you have a pointer to the file so if you want to know any of its properties you access them, as with any other object. I don't think I'm doing a great job at explaining myself so see the pseudo-code below:

[code lang="actionscript"]class Wadus extends Sprite
{
	private var myFile : File;

	public function Wadus()
	{
		super();
		
		myFile = File.desktopDirectory.resolvePath("wadus.txt");
		addEventListener(Event.ENTER_FRAME, update);
	}

	private function update(e : Event) : void
	{
		if(myFile.exists)
		{
			trace(myFile.size + " // " + myFile.modificationDate);
		}
		else
		{
			trace("no file");
		}
	}
}[/code]

You see? When you launch the app you create a pointer to a file in your desktop called "wadus.txt". It doesn't even need to exits, but you've created a pointer. Now check its state inside an on ENTER_FRAME. As you create and modify the file, the trace will automatically update. Is this obvious to you? Coming from haXe/Neko, it wasn't for me.

This being powerful, brings responsibility. It is a source of potential memory leaks. Let's say you read the content of a folder with 200 files in it:

[code lang="actionscript"]folder.addEventListener(FileListEvent.DIRECTORY_LISTING, onRead);
folder.getDirectoryListingAsync();

function onRead(event : FileListEvent) : void
{
   myFiles = event.files;
}[/code]

See that <em>myFile = event.files</em>? You would be holding a pointer to each and every one of the 200 files in the folder. That can't be good.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1558</wp:post_id>
		<wp:post_date>2010-05-16 19:01:24</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="air"><![CDATA[air]]></category>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Adding settings to an Android live wallpaper</title>
		<link>http://blog.zarate.tv/?p=1634</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1634</guid>
		<description></description>
		<content:encoded><![CDATA[Boy am I thick today!

It's taken more than I would be comfortable to acknowledge in public to add a settings activity to an Android live wallpaper.

Even with a <a href="http://developer.android.com/resources/samples/CubeLiveWallpaper/index.html">couple</a> of <a href="http://code.google.com/p/androgames-sample/source/browse/SampleLiveWallpaper/">examples</a> on line, I was just watching and staring like a monkey with no result.

Anyway. This makes the trick:


[code]android:settingsActivity="path.to.your.settings.Activity"[/code] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1634</wp:post_id>
		<wp:post_date>2010-07-27 15:05:32</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[android]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Native or not</title>
		<link>http://blog.zarate.tv/?p=1673</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1673</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.bbc.co.uk/news/technology-11389416

"I think the problem is that these groups don't really understand there are companies that... create platforms that work across multiple devices. There is no interest in a standardisation of platforms because those companies need to differentiate their product."


Native or not

I was the other day having a chat with former boss and current friend Mr. Geoff Stead. Back in the day he was a coder and he still is a true geek at heart. They are into e-learning, doing a lot of stuff for mobile devices (which I was part of), and they are now facing the same dilema all companies face these days. Do we go native or not?

Native

Let's say you are company and you want to create a mobile app. If you want to reach to the majority of your audience you need to at least target: iDevices, Android, Nokia and Windows mobile. I'm specifically leaving outside Blackberry (they have very specific niche market) or things like Samsung's Bada (which don't think will last).

Now those are a lot of different platforms, let alone different devices within the same platform (screen sizes, resolutions, RAM, CPU, OS version...). That's a lot. For each target you must:

* UX: even if the bulk of your app is still the same, you shouldn't ignore that different platforms have different usage patters. For example both Android and iOS have very clear UX guidelines that you should follow.
* Code: If you want to target X platforms you need X different code bases, no code re-usage whatsover. Basically you are building X different apps and would probably need X different teams, specially if you plan for a coordinated release.

Sounds like a lot, right? It is. Whether you do it yourself or you pay a company to do it, it's a lot to go through so you might be thinking about leaving out some platforms?

Developing for a single platform is what most companies are doing these days. The iDevices are so shiny and Steve Jobs thyself is so convincing that companies are falling for this one. Since when it's ok to ignore 80% of your user base? How's "iDevices only" good but "IE only" wasn't? How's offering a native app for iDevices but a crappy mobile site for the rest a good thing? What about reserving the best tables for blondes and brunnettes and leaving gingers at the end of the restaurant?

You just can't release an app targeting one platform and ignore the rest, people are going to complain very soon. Specially, you can't target iDevices only since those are not and will not ever be a significant % of your users, Apple has never been about the market share. 

[[[There's no WOW factor in iDevices or mobile apps any more, it's in the MBA's minds more than anything.

There's no money either. Don't get me wrong, you can play the app lottery same as I played the same lottery numbers for 8 years and every single week I was damn sure I was going to be the next lottery winner. If you are planning an app it better be useful or solve somebody's problem, otherwise it's going to be ignored after a week or two sitting in some corner of the device.]]]


Lowest common denominator.

So, you decided you want to reach as many people as you can? Let's take a look to the options.

HTML

Some people are very excited about HTML5 and that's good, but depending on what you are planning to do, might not be the right tool for the job. Yeah, I've seen some good HTML + JS experiments out there, but how do they run on the real devices? Go for HTML if you need something functional only with some touches here and there.

BTW, I think HTML5 adoption is going to be massively faster than any of its previous predecessors.

Flash

Many people have jumped on to Apple's wagon of calling Flash names and simply refusing to acknowledge *any* of its merits. Many years of annoying Flash banners and intros have bottled inside users and now all that rage has been unleashed. Good for them, releasing stress is always a good thing.

Don't get me wrong, Flash has its very own downsides, but still is a good contender (if not the best) when it comes to "write once, run everywhere". Adobe has done a HELL of a job regarding consistency and, leaving bugs apart, you can be almost sure that, functionality-wise, what you see in one platform is what you see in another one.

If you are worried about performance, let me tell you this. You'll run into problems if:

* You need to scroll big chunks of dynamic text
* You need to scroll big images.

Other than that, there're very valid work-arounds for things like parsing big XML files or similar tasks. What I say is that facing the same big XML a native parser is always going to be faster than Flash, but the work around in Flash to get decent performance is not a disgusting hack. It's only keeping performance in mind when you code. 

haXe

The wholy grail of development: write on one single language and deploy to several platforms using native code. But it has its own problems:

* You lose some of the native-ness on the way since you are most likely going to use a common API such as NME.
* You need training in a new language that not many people are familiar with.
* Biggest of them all: read below.

Phonegap

I'll start with the problem that shares with haXe:

* Apple has banned its usage for the AppStore. Flash haters were cheering up and high fiving each other when Apple specifically banned cross-compiling from the Flash IDE to a *native* app (no Flash player needed), but since they couldn't (I guess for legal reasons) specify something like this on the SDK license:

"Adobe, fuck off my lawn, and shove your tools up your ass"

They banned *anything* that wasn't "originally written" in Objective-C. Not even compiled using their own tools, mind you. Had to be "originally written" in Objective-C. This, obviously, is ridiculous cause it effectively bans porting a Java library to Objective-C and use it. So what does this mean? It means that since you wrote your app in haXe / Phonegap / Unity3D / etc. you have even more chances to get your app rejected (as if Apple needed more reasons to ban an app).

Apple wants applications that are made using their tools only, that follow their UX guidelines and, if possible, only available on their devices. Why? Money obviously. And so far they've gotten away with it as most developers and users don't seem to give a shit about it. Time will tell how good of a business decision that has been (and to my dispair, is not looking bad for Apple).

So, are you willing to take the risk? 

Wrap up

Sadly, there's not a single rule when it comes down to deciding what to do. It very much depends on each specific project, who you want to target, your resources... but it all comes down to money. Prepare a big fat check if you want to go native and support more than one platform.


Wait, there's more!

If you happen to have extremely clever people on board. And I mean REALLY clever you can try this:

* Create a meta language close to your domain language.
* Create code generators that take that implementation-less meta language and create native apps.

Read about this in The Art of programming. I think in theory is an awesome idea (specially to let the client make changes) but bringing down to reallity would be a FREAKING NIGHTMARE. Requiring extensive and thorough knowledge of each of the target platforms, parsers, etc.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1673</wp:post_id>
		<wp:post_date>2010-10-13 14:37:39</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Incredibly annoying Macs. Today, screenshots.</title>
		<link>http://blog.zarate.tv/?p=1738</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1738</guid>
		<description></description>
		<content:encoded><![CDATA[Want to change the default path where your screenshots are saved?

<strong>OSX</strong>

1. Create a folder on your desktop called Screenshots
2. Go to applications > utilities > terminal
3. Type in:
[code lang="bash"]defaults write com.apple.screencapture location ~/Desktop/Screenshots[/code]
4. Logout and then login again
5. Next time you take a screenshot it will store it in the new folder

<strong>Ubuntu</strong>

You get a regular save dialog.

--

Thought Linux was for command line freaks and OSX was the user friendly OS?

<strong>Un-freaking-believable</strong>.

OSX tip via Mr <a href="http://twitter.com/gilkahana">Gil</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1738</wp:post_id>
		<wp:post_date>2011-01-14 12:19:35</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<category domain="category" nicename="mac"><![CDATA[mac]]></category>
		<category domain="category" nicename="usability"><![CDATA[usability]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mod_rewrite</title>
		<link>http://blog.zarate.tv/?p=1744</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1744</guid>
		<description></description>
		<content:encoded><![CDATA[Enable logging (<a href="http://drupal.org/node/134439">thanks</a>):

sudo a2enmod rewrite

http://www.easymodrewrite.com/guide-logging

sudo gedit /etc/apache2/apache2.conf

RewriteLog "/var/log/apache2/rewrite.log"
RewriteLogLevel 5

/etc/apache2/sites-enabled/000-default
AllowOverride All

http://www.easymodrewrite.com/guide-logging]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1744</wp:post_id>
		<wp:post_date>2011-01-15 21:11:38</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Things I need to ask Adobe. Today, System.disposeXML()</title>
		<link>http://blog.zarate.tv/?p=1759</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1759</guid>
		<description></description>
		<content:encoded><![CDATA[Sometimes when developing Flash apps I run across those WTF moments. However, I always forget to bring them up with Adobe people at conferences such as FOTB. Well, I'm going to try from now onwards to post them in the blog under its own category so I don't forget about them.

Let me start with one that screams <a href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/system/System.html#disposeXML()">System.disposeXML()</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1759</wp:post_id>
		<wp:post_date>2011-02-06 11:37:55</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Questions I need to ask Adobe. Today, System.disposeXML()</title>
		<link>http://blog.zarate.tv/?p=1760</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1760</guid>
		<description></description>
		<content:encoded><![CDATA[READ FIRST: http://blogs.adobe.com/simplicity/2009/09/object_graphs_the_gc_and_syste.html

Sometimes when developing Flash apps I end up in one of those W-T-F moments. The thing is that whenever I go to Flash conferences I always forget to ask the Adobe guys, so from now on I'll try to post them in the blog under <a href="http://blog.zarate.tv/category/things-i-need-to-ask-adobe/">its own section</a>.

Let me start with an API that screams <em>something is not quite working</em>: <a href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/system/System.html#disposeXML()">System.disposeXML()</a>:

<blockquote>Makes the specified XML object immediately available for garbage collection. This method will remove parent and child connections between all the nodes for the specified XML node.</blockquote>

Without reading the docs, the first question is: <strong>why does XML need some special treatment to be disposed?</strong> Sure XMLs are objects and as such they should follow the same garbage collection rules as any other object? Is the XML implementation leaking memory or prone to it?

<blockquote>This method will remove parent and child connections between all the nodes for the specified XML node</blockquote>

I'm having some trouble understanding, but I think it says it's going to remove any parent or children, right? Ok, thanks for that, but what if I'm holding a reference to the XML somewhere else? Making the object "<em>immediately <strong>available</strong> for garbage collection</em>" doesn't actually mean it <strong>is</strong> going to be GC'ed. I think it is giving a false sense of security to developers that might think "I'll just call disposeXML() and I'm good to go".

Assuming there's an actual need for the method to exist, why is part of the System API and not part of the <a href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/XML.html">XML</a> API? More so, why there's no mention of it in the XML docs?!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1760</wp:post_id>
		<wp:post_date>2011-02-06 12:15:34</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="things-i-need-to-ask-adobe"><![CDATA[things i need to ask adobe]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SmartfoxServer</title>
		<link>http://blog.zarate.tv/?p=1859</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1859</guid>
		<description></description>
		<content:encoded><![CDATA[Don't bother with old release, go for 2X directly.
Install patch.
Edit SFS2X > config > server.xml]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1859</wp:post_id>
		<wp:post_date>2011-07-18 09:24:17</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cyanogen the shit out of the Galaxy S</title>
		<link>http://blog.zarate.tv/?p=1871</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1871</guid>
		<description></description>
		<content:encoded><![CDATA[z4root
http://forum.xda-developers.com/showthread.php?t=833953

Backup
call logs back up: http://android.riteshsahu.com/apps/call-logs-backup-restore
sms back up pro: http://www.appbrain.com/app/sms-backup-restore-pro/com.riteshsahu.SMSBackupRestorePro#
Titanium backup
Or send everything to google
Manually back up sd cards files you like
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1871</wp:post_id>
		<wp:post_date>2011-08-28 16:27:53</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hello world!</title>
		<link>http://blog.zarate.tv/2008/09/05/hello-world/</link>
		<pubDate>Fri, 05 Sep 2008 16:12:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[Yep, I'm about to start blogging in English about Flash and my usual geeky stuff: haXe, PHP, <a href="http://hippohx.com/">HippoHX</a>, maybe CodeIgniter, etc.

Stay tunned, opening around 1st October :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1</wp:post_id>
		<wp:post_date>2008-09-05 09:12:07</wp:post_date>
		<wp:post_date_gmt>2008-09-05 16:12:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hello-world</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="meta"><![CDATA[meta]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting up XML values</title>
		<link>http://blog.zarate.tv/2008/10/02/setting-up-xml-values/</link>
		<pubDate>Thu, 02 Oct 2008 14:25:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=50</guid>
		<description></description>
		<content:encoded><![CDATA[I quite like the new XML capabilities of AS3. E4X is really handy and it's really nice creating XMLs like this:

[code lang="actionscript"]
var myXML = new XML(
   <data>
      <wadus att="true">Hello World</wadus>
   </data>
);
[/code]

But what do you do when you have to create an XML based on an object's properties or simply based on information set up at run time? Curly braces:

[code lang="actionscript"]
private var wadus:String="Hello World";
private var wadusAtt:Boolean=true;

var myXML = new XML(
   <data>
      <wadus att={wadusAtt}>{wadus}</wadus>
   </data>
);
[/code]

Please note that you don't use quotes when setting up the attribute. I'm using this as part of HippoHX's GUI, you can see it <a href="http://hippohx.googlecode.com/svn/trunk/src/tools/gui/com/hippohx/gui/Project.as">here</a>.

I learnt this reading <a href="http://dispatchevent.org/roger/as3-e4x-rundown/">AS3 E4X Rundown</a>, go there for a much deeper look to E4X.

BTW, if you try to create 2 attributes with the same name in the same node the player simply stops (I guess it's throwing an exception). It would be great catching this up at compile time instead.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2008-10-02 15:25:00</wp:post_date>
		<wp:post_date_gmt>2008-10-02 14:25:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-up-xml-values</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="e4x"><![CDATA[e4x]]></category>
		<category domain="category" nicename="xml"><![CDATA[xml]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Cay]]></wp:comment_author>
			<wp:comment_author_email>ventdaval@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>89.130.22.119</wp:comment_author_IP>
			<wp:comment_date>2008-10-02 15:52:43</wp:comment_date>
			<wp:comment_date_gmt>2008-10-02 14:52:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[actually you don't even need the "new XML()" since XML is native now :)
var miXML:XML=
   
&lt;/data;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[Cay]]></wp:comment_author>
			<wp:comment_author_email>ventdaval@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>89.130.22.119</wp:comment_author_IP>
			<wp:comment_date>2008-10-06 00:43:48</wp:comment_date>
			<wp:comment_date_gmt>2008-10-05 23:43:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ouch, the code is fkd up... it should say:
<code>var miXML:XML=[data][wadus/][/data];</code>
swaping [ for &lt;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Good ol&#039; delegates in AS3 and Flex</title>
		<link>http://blog.zarate.tv/2008/10/05/good-ol-delegates-in-as3-and-flex/</link>
		<pubDate>Sun, 05 Oct 2008 17:06:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=52</guid>
		<description></description>
		<content:encoded><![CDATA[In ActionScript there are several ways of communicating 2 classes.

<strong>Passing an instance or composition</strong>

This is probably the most obvious one. Pass an instance of one class to the other class, then you can call its public methods.

The good: You can call any public method on A and also access (and modify!) any of its public properties.
The bad: The type passed can only be A (although you can ease out this restriction using interfaces). Also this is a 1-to-1 process, if more than one object needs to get notified of the action, you have to code that yourself.

<strong>Using events</strong>

In this method class A is a listener of class B.

The good: 1-to-many communication. Different objects that might have nothing to do with each other can listen to the same event. Also class B doesn''t need to know anything about who's listening (therefore avoiding coupling).
The bad: You might run into <a href="http://www.gskinner.com/blog/archives/2006/08/as3_resource_ma_2.html">memory leaks</a>.You need to create one class per event. Well, this is not bad <em>per se</em>, it's just a little bit extra coding. Also remember that in AS3 your events should extend from the generic flash.events.Event.

<strong>Delegates</strong>

This is the one you don't see that often and the one I'd to comment. What we do here is passing a function to class B and class B executes it whenever it has to. See a sample in this simplified code:

[code lang="actionscript"]
class A{

   function wadus(){
      var b:B = new B(myHandler);
   }

   function myHandler(myParam:String){
      trace("myHandler > " + myParam);
   }

}

class B{

   function B(callback:Function){
      // do whatever here, even asynchronous stuff
      callback("Hello world"); // now when you fancy execute the callback
   }

}
[/code]

The good: Same as events, we avoid coupling because B doesn't know anything about A, just needs a function to call.
The bad: We lose strict data typing at compile time. Also this is a 1-to-1 method.

You can do this in Flex too, just check out how <a href="http://hippohx.googlecode.com/svn/trunk/src/tools/gui/com/hippohx/gui/HippoGUI.mxml">this</a> class is setting up the "on" methods of <a href="http://hippohx.googlecode.com/svn/trunk/src/tools/gui/com/hippohx/gui/HippoApp.mxml">this</a> one. And how the later executes them when needed.

As I'm pretty new with AS3 and Flex I'm not sure what people think about this and possible side effects.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>52</wp:post_id>
		<wp:post_date>2008-10-05 18:06:04</wp:post_date>
		<wp:post_date_gmt>2008-10-05 17:06:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>good-ol-delegates-in-as3-and-flex</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="flex"><![CDATA[flex]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Flash player 10 security updates</title>
		<link>http://blog.zarate.tv/2008/10/01/flash-player-10-security-updates/</link>
		<pubDate>Wed, 01 Oct 2008 06:26:54 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=56</guid>
		<description></description>
		<content:encoded><![CDATA[As you all know, a new version of the Flash player is coming out soon. For the time being you can get it from <a href="http://labs.adobe.com/technologies/flashplayer10/">Adobe Labs</a>.

The new version is introducing new security rules, and usually new rules are more strict. I guess what happens is that <a href="http://en.wikipedia.org/wiki/Software_cracker">bad guys</a> find out new security holes and <a href="http://blogs.zdnet.com/security/?p=1733">release exploits</a>. Then Adobe has to move to stop them.

Something that I really like from Adobe is that at least for the last 2 releases of the player, they've published in advanced what the security changes are going to be so developers can prepare. See what's coming on in <a href="http://www.adobe.com/devnet/flashplayer/articles/fplayer10_security_changes.html">Understanding the security changes in Flash Player 10 beta</a>. There's a ton of stuff related to Sockets, cross-domain, local save and upload, etc, I just leave a couple of comments:

<strong>Upload and download of files needs "user interaction"</strong>

User interaction means the user has to click the mouse or the keyboard to start the process:

<blockquote>FileReference.browse and FileReference.download operations may be initiated only through ActionScript that originates from user interaction. This includes actions such as clicking the mouse or pressing the keyboard.</blockquote>

This is going to break things like <a href="http://swfupload.org/">SWFUpload</a> because to allow an upload system that degrades gracefully they are using a HTML button that calls via JS a Flash function that initializes the upload/download dialogue. Well, no more. <a href="http://swfupload.org/forum/generaldiscussion/551">They are not very happy with it</a> but I guess there's no way back on this one, they'll have to find a workaround (as it seems they are doing).

BTW, based on the same principle, setting data on the system clipboard will require user interaction too.

<strong>Limited full-screen keyboard input</strong>

In this case things gets <em>better</em>. Previously when in full screen mode all keyboard input was disabled. New version allows to catch cursors, tab and space bar. Full screeen online games anyone?

-----

And just lately got to know about something called <a href="http://">clickjacking</a> that apparently is going to be the next big thing in internet security after the <a href="http://it.slashdot.org/article.pl?sid=08/07/08/195225&tid=172">DNS disaster</a>. So big that haven't been disclosed yet, it seems that affects all browsers in all operating systems and also Flash.

Luckily for us the good guys found first and they are working with all major guys to fix this, including Adobe as they acknowledge in the, hold to your chair, <a href="http://blogs.adobe.com/psirt/2008/09/thanks_to_jeremiah_grossman_an.html">Adobe Product Security Incident Response Team</a> blog.

Security always scares me, there's no way in hell you can be 100% sure something is secure. If you do, you either are a fool or a <a href="http://www.computerworld.com/action/article.do?command=viewArticleBasic&articleId=9010041">liar</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2008-10-01 07:26:54</wp:post_date>
		<wp:post_date_gmt>2008-10-01 06:26:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flash-player-10-security-updates</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="flash-player"><![CDATA[flash player]]></category>
		<category domain="category" nicename="security"><![CDATA[security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cloud computing is a (scary) trap</title>
		<link>http://blog.zarate.tv/2008/11/05/cloud-computing-is-a-scary-trap/</link>
		<pubDate>Tue, 04 Nov 2008 23:51:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=94</guid>
		<description></description>
		<content:encoded><![CDATA[Fed up with <em>The Cloud</em> already? Can't blame you. But same as <a href="http://blog.zarate.tv/2008/11/02/intellectual-property-and-open-source/">IP and lawyers</a>, it's here to stay whether we like it or not. Some people love it, some people hate it, I'm in the middle.

The concept is obviously really nice, having all your files in a place where you don't have to worry about backups, redundancy, maintenance.... sounds like heaven. But it isn't. Currently <a href="http://www.guardian.co.uk/technology/2008/sep/29/cloud.computing.richard.stallman">it's a trap</a>, Stallman <em>dixit</em>. Just after he said so there were <a href="http://whydoeseverythingsuck.com/2008/09/you-really-cant-get-something-for.html">people</a> all over the place jumping on him.

Problem with Stallman is that he's not the very finest orator ever. But if you can ignore the <em>how</em>, then you get to the <em>what</em> and find gems such as this one:

<blockquote>Somebody is saying that the cloud is inevitable – and whenever you hear somebody saying that, it's very likely to be a set of businesses campaigning to make it true</blockquote>

Damn right. And he's also right about the biggest deal regarding The Cloud:

<blockquote>One reason you should not use web applications to do your computing is that you lose control</blockquote>

When we use Flickr, YouTube, GMail, Amazon S3, Google App Engine, or any other service like that, we are trading privacy for comfort. But not only that. Putting data on the cloud is very easy. <a href="http://whydoeseverythingsuck.com/2008/11/my-comments-are-down-aka-ill-tell-you.html">Getting it out not so much</a>.

So, what we do? We obviously want the good part (nice services that someone else maintains) but we don't want the bad part (losing privacy and freedom to move). If we step back a little bit we can quickly realize that we've been using "cloud computing" for quite a while already anyway, that's what ISPs are. Someone that takes care of setting up a good infrastructure, installing the servers, Apache, a Linux distro, configuring everything.... It sounds like "cloud computing" to me. There's a big, big difference, though. I can very easily move from one ISP to another. Heck, I can even pay for a fixed IP and install a server on my house and (more or less) do the job myself. I can install Linux, Apache, PHP, mySQL and get on with my life. That's freedom.

The problem is, there's no easy escape from Google App Engine. Or from Blogger. Or Flickr. Or YouTube... Sure you can back up some of your data, but there's no standard. <strong>That</strong> is the problem.

Let alone privacy and data stealing. Check out <a href="http://tech.slashdot.org/comments.pl?sid=981325&cid=25212647">this comment</a> on /.:

<blockquote><em>Small business people want to focus on their businesses, not on setting up and maintaining IT. They don't service their own cars & delivery vans, so why should they run their own inhouse IT?</em>

Because if their auto mechanic goes bankrupt/closes they can always find another one to take their cars to. <strong>If their IT service goes bankrupt/closes, you can find another provider, but the data you had is gone</strong>.

It is in only the rare case that your car is in the shop when the mechanic goes bankrupt that you have any chance of losing your car; <strong>your data is always in the IT shop</strong>.

Also, there is little of proprietary interest in your automobile. "Oh, look, they drove 3000 miles since the last oil change." Doesn't mean much. T<strong>here is a LOT of proprietary interest in your customer data, and stealing it would be trivial</strong>. You wouldn't even know it was gone, because technically it wouldn't be. It would just be that your competitor has a copy of all your data, too.</blockquote>

Is not that you have to trust Google with your data. You have to trust Google <em>employees</em> too. Scary.

And to wrap up, the myth of "small company is not going to do better than big, dedicated company". Might be true, but guess what? <a href="http://tech.slashdot.org/article.pl?sid=08/10/16/194244&from=rss">Google goes down too</a>. And that's not the biggest problem. The big one is that <a href="http://tech.slashdot.org/comments.pl?sid=998259&cid=25405047">you have no one to complain to</a>, not even if you pay. Your problems are just a ticket between hundreds of thousands of complains. However, when your super-nice 2.0 web-app fails mercilessly or when your boss cannot access for hours that very important Excel spreadsheet that it's in the cloud <strong>**you**</strong> my friend are in big trouble. 

Careful with the cloud.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2008-11-05 00:51:43</wp:post_date>
		<wp:post_date_gmt>2008-11-04 23:51:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cloud-computing-is-a-scary-trap</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="the-cloud"><![CDATA[the cloud]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android not so vaporware</title>
		<link>http://blog.zarate.tv/2008/10/14/android-not-so-vaporware/</link>
		<pubDate>Tue, 14 Oct 2008 07:52:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=127</guid>
		<description></description>
		<content:encoded><![CDATA[After some delays and apparently lack of SDK development many people feared that Android was going to be vaporware. Luckily for us, <a href="http://www.iht.com/articles/2008/08/15/technology/15google.php">the first Android based device is coming out soon</a> and there seems to be a good interest in Android developers: <a href="http://developers.slashdot.org/article.pl?sid=08/10/04/139226&from=rss">Motorola To Hire 300 Android Developers</a>.

I'm holding somehow my breath over Android, though. It's quite clear that Android means freedom to manufacturers but we don't know yet if that freedom is going to be offered to final users too. Maybe T-Mobile chooses to close their devices as much as Apple has closed the iPhone. I know, it sounds unlikely but big companies love to give us these sort of surprises.
 
But what I really hope from Android is some super-cheap-unknown Chinese or Taiwanese hardware company coming up with cool, cheap devices with just a very basic version of Android, 100% ready to hack the hell out of them. Now that would be cool. I think I read something like this somewhere:

<blockquote>Same as you don't buy computers from your broadband provider we should start thinking about stop buying devices from telecom companies.</blockquote>

And I totally agree. We should stop trading our freedom to do whatever we want with *our* devices for a few euros/bucks/quid. I'm not saying this applies to everybody, fair enough if you want to pay for an iPhone and be locked down forever or always be fearful of bricking a device that you've paid for, but that doesn't work for me.

And not long ago there was yet another discussion about what new platform should <a href="http://haxe.org/">haXe</a> target. Java/Android would be awesome and it will open a ton of new opportunities for Flash/haXe developers.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>127</wp:post_id>
		<wp:post_date>2008-10-14 08:52:34</wp:post_date>
		<wp:post_date_gmt>2008-10-14 07:52:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android-not-so-vaporware</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[android]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Documenting sucks</title>
		<link>http://blog.zarate.tv/2008/10/07/documenting-sucks/</link>
		<pubDate>Tue, 07 Oct 2008 20:13:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=133</guid>
		<description></description>
		<content:encoded><![CDATA[Documenting is such an annoying task that should be paid double. At least. Same as fixing bugs. I haven't met anyone who likes either documenting or fixing bugs, and that's probably because if you want to do it right you have to be very careful or go through every single possibility like default parameters, etc. when all you want to do is start coding the next big feature of your application.

But because I don't have anyone to help me out with <a href="http://hippohx.com/">HippoHX</a> (snif, snif) I have to do everything myself. And as I don't want to release the GUI without documentation, I've spent last couple of days going through the APIs and adding comments all over and I'm not near finished.

I didn't want to complicate things so I've gone for the simplest: <a href="http://livedocs.adobe.com/flex/3/html/help.html?content=asdoc_1.html">ASDoc</a> that comes very handy with Flex 3 SDK. And what's even handier is the integration with <a href="http://www.flashdevelop.org/">FlashDevelop</a> (beta 9). Just go to Tools > Flash tools > Documentation generator and fill in the blanks. Nice.

There seems to be a little bug though in ASDoc documentation (ain't that funny?) regarding <a href="http://livedocs.adobe.com/flex/3/html/asdoc_9.html#192651">excluding classes</a>. It turns out that if you want to exclude more than one class, you have to do it like this:

[code lang="actionscript"]-exclude-classes myClassOne -exclude-classes myClassTwo[/code]

Instead of this as suggested:

[code lang="actionscript"]-exclude-classes "myClassOne myClassTwo"[/code]

What I don't like that much about ASDoc is that the output looks A LOT like Adobe, because that's the tool they've used to generate <a href="http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/">AS3 docs</a>. You can modify the output by modifying the template that comes in asdoc/template BUT it's not a simple task. I have to review my rusty XSL skills and see how far I can go.

Cheers!

ps: There are <a href="http://www.flashdevelop.org/community/viewtopic.php?f=9&t=3568">some discussions</a> going on about the future of FlashDevelop, go and check it out if you use it. I think I'll post soon about Open Source projects and funding.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date>2008-10-07 21:13:47</wp:post_date>
		<wp:post_date_gmt>2008-10-07 20:13:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>documenting-sucks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="asdoc"><![CDATA[asdoc]]></category>
		<category domain="category" nicename="flex"><![CDATA[flex]]></category>
		<category domain="category" nicename="hippohx"><![CDATA[hippohx]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[TheOm3ga]]></wp:comment_author>
			<wp:comment_author_email>theom3ga@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://om3.com.es</wp:comment_author_url>
			<wp:comment_author_IP>84.122.4.188</wp:comment_author_IP>
			<wp:comment_date>2008-10-07 22:42:11</wp:comment_date>
			<wp:comment_date_gmt>2008-10-07 21:42:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have you ever tried Doxygen (http://en.wikipedia.org/wiki/Doxygen)? It's great, though looks like it doesn't support ActionScript. However, I guess there must be some workarounds to use AS with it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>81.107.34.90</wp:comment_author_IP>
			<wp:comment_date>2008-10-07 22:52:01</wp:comment_date>
			<wp:comment_date_gmt>2008-10-07 21:52:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the tip, definitely will give it a go. BTW, I'm trying NaturalDocs too and doesn't look good atm :|

Cheers!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; HippoHX 0.4 ready to roll]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2008/10/16/hippohx-04-ready-to-roll/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.37.130</wp:comment_author_IP>
			<wp:comment_date>2008-10-16 11:46:31</wp:comment_date>
			<wp:comment_date_gmt>2008-10-16 10:46:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] big thing is that, as you might have guessed from previous posts, there&#8217;s now an auto-generated on-line documentation of HipoHX&#8217;s client API. I finally [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; Adding Google Analytics to your ASDoc documentation]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2008/10/29/adding-google-analytics-to-your-asdoc-documentation/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.37.130</wp:comment_author_IP>
			<wp:comment_date>2008-10-29 23:18:14</wp:comment_date>
			<wp:comment_date_gmt>2008-10-29 22:18:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] previous post about documentation, I&#8217;m finally sticking to ASDoc. NaturalDocs seems&#8230; errr.. very natural, but I [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; Gravatar for CakePHP]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2008/11/20/gravatar-for-cakephp/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.37.130</wp:comment_author_IP>
			<wp:comment_date>2008-11-20 16:06:51</wp:comment_date>
			<wp:comment_date_gmt>2008-11-20 15:06:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] so I&#8217;d make kick ass docs for HippoHX both for advanced developers AND newbies. Even though documenting sucks you/we must create good [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; HippoHX 0.5 released]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2009/02/24/hippohx-05-released/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.37.130</wp:comment_author_IP>
			<wp:comment_date>2009-02-24 21:37:06</wp:comment_date>
			<wp:comment_date_gmt>2009-02-24 20:37:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] first version of the help file is in place. As I&#8217;ve said before, documenting takes a long time and it&#8217;s not funny, but as a software developer you have to go through it if you want that anyone tries what you do. I [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adding Google Analytics to your ASDoc documentation</title>
		<link>http://blog.zarate.tv/2008/10/29/adding-google-analytics-to-your-asdoc-documentation/</link>
		<pubDate>Wed, 29 Oct 2008 22:18:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=151</guid>
		<description></description>
		<content:encoded><![CDATA[Following <a href="http://blog.zarate.tv/2008/10/07/documenting-sucks/">previous post about documentation</a>, I'm finally sticking to ASDoc. NaturalDocs seems... errr.. very natural, but I don't like the output nor it seems to be easy to modify. <a href="http://om3.ventdaval.com/wp/">Om3ga</a> suggested <a href="http://www.doxygen.org/">Doxygen</a> which nicely comes as an Ubuntu package but doesn't have AS3 support. Tried telling the tool it was Java and did output some stuff but I gave up (maybe too soon I have to admit).

So, back to ASDocs again. Modifying the output is not easy and requires going through the XSL templates. Something I wanted to do was add Google Analytics to the files so I did some <del>copy & paste</del> research and got it working.

First, you should create your own template. Go to asdoc/templates and copy that folder somewhere else. Then pass it as a parameter to the compiler:

[code lang="actionscript"]--templates-path path/to/your/template/folder[/code]

Doing this you don't mess up Adobe's original files. Now we work all the time modifying your template. Open asdoc-utils.xsl and add this somewhere:

[code lang="xml"]
	<xsl:template name="gAnalytics">

		<script type="text/javascript">
			var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
			document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
		</script>

		<script type="text/javascript">
			var pageTracker = _gat._getTracker("XXXXXXXX"); // change this for your tracking id.
			pageTracker._initData();
			pageTracker._trackPageview();
		</script>

	</xsl:template>
[/code]

And now you have to add this template to your files. I'd love to have a single <head> template where add this and be done, but sadly you have to add it to a bunch of files. If there's such a central place, please let me know. Until then, open these files: class-summary.xsl, all-index.xsl, class-files.xsl, package-detail.xsl and package-summary.xsl (there are other files, but they are always shown on the frames, when one of these is already being displayed).

Now search for "&lt;/head&gt;" and add this just before:

[code lang="xml"]<xsl:call-template name="gAnalytics"/>[/code]

Export and you are good to go, Analytics on your <a href="http://hippohx.com/api">API</a> docs.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date>2008-10-29 23:18:08</wp:post_date>
		<wp:post_date_gmt>2008-10-29 22:18:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adding-google-analytics-to-your-asdoc-documentation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="asdoc"><![CDATA[asdoc]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>int and uint default values are NOT null</title>
		<link>http://blog.zarate.tv/2008/10/09/int-and-uint-default-values-are-not-null/</link>
		<pubDate>Thu, 09 Oct 2008 17:16:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=162</guid>
		<description></description>
		<content:encoded><![CDATA[Write it down because it's going to leave you o_O the moment you want to use them. Let's say you have an object that can be sized from 1 to whatever, that's clearly a uint type. Let's say you want to make life easier for your users (developers using your API in this case) and you want to write something like this:

[code lang="actionscript"]
setSize(width:unit=null,height:uint=null):void{
   
   if(width != null){ // do something; }
   if(height != null){ // do other something; }

}
[/code]

The idea is that whoever is calling the function can set a new width or height <strong>without</strong> passing the other. Like this:

[code lang="actionscript"]
setSize(100);
setSize(null,100)
[/code]

Well, it doesn't work. Default value for int and unit is 0 (zero). I'm sure there's a super-geeky explanation out there about why (although I haven't been able to find it in Moock's book) but the fact is that this seems <em>weird</em>.

So you are left with either:

a) handle 0 as the default value, which is weird to me.
b) make the 2 parameters mandatory, which is "annoying" for the users.

I think I'm going to stick with option b). 

And just for the record, the default value of Number property is NaN and if you want to check if a number is NaN you have to do it like this:

[code lang="actionscript"]
if(isNaN(myVar)){ //wadus }
[/code] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>162</wp:post_id>
		<wp:post_date>2008-10-09 18:16:30</wp:post_date>
		<wp:post_date_gmt>2008-10-09 17:16:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>int-and-uint-default-values-are-not-null</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[Cay]]></wp:comment_author>
			<wp:comment_author_email>ventdaval@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>89.130.22.119</wp:comment_author_IP>
			<wp:comment_date>2008-10-11 14:04:23</wp:comment_date>
			<wp:comment_date_gmt>2008-10-11 13:04:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I would probably use Number and NaN... I try to think of uint and int for loops, colors, and indexes only... But I have encountered this problem, and it's actually quite anoying ^^]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>My Groundhound Day passing extra parameters to listeners</title>
		<link>http://blog.zarate.tv/2008/11/06/my-groundhound-day-passing-extra-parameters-to-listeners/</link>
		<pubDate>Thu, 06 Nov 2008 21:09:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=176</guid>
		<description></description>
		<content:encoded><![CDATA[Back in AS2 when the mx.utils.Delegate class was introduced quickly many people were asking for extra parameters. It didn't take long until people came up with a new Delegate class that could indeed pass parameters.

Fast forward to AS3 and guess what? Again you cannot pass extra parameters to listeners. I'm talking about doing something like this:

[code lang="actionscript"]button.addEventListener(MouseEvent.CLICK,callback,myFancyParameter);[/code]

Half the answers I've found end up saying something like:

<blockquote>The event object that arrives to your callback has a target property that you can use.</blockquote>

Well, that doesn't help me much. Maybe I should change how I build things, but if I do it like this:

[code lang="actionscript"]
for(var x:uint=0;x<10;x++){
   var button:Button = new Button();
   button.addEventListener(MouseEvent.CLICK,callback);
}
[/code]

What's the difference between the buttons if all of them have been created on the same loop? There are a couple of dirty tricks that you can use to bypass this limitation, but so far the best solution I've found is using the <a href="http://livedocs.adobe.com/flex/3/langref/mx/controls/Button.html#data">data attribute</a> of the Button object. Then the loop looks like this:

[code lang="actionscript"]
for(var x:uint=0;x<10;x++){
   var button:Button = new Button();
   button.data = wadus // where wadus might be any type of object
   button.addEventListener(MouseEvent.CLICK,callback);
}

function callback(e:MouseEvent):void{
   var yourWadus:Wadus = Wadus(e.target.data); // gotcha!
}
[/code]

This is obviously not the same as the ability to pass any number of parameters you might need, but at least it's something <em>and</em> it's official.

If you really, really need to pass any number of parameters, then get ready to step into the Dark Side: <a href="http://www.ultrashock.com/forums/actionscript/as3-adding-parameter-to-eventlistener-104729.html">closures</a>. Every time you use them a little puppy dies or so they say. Your objects won't be GC'ed and your performance will go even worst than the global economy but it feels sooooo good. Check it out:

[code lang="actionscript"]
for(var x:uint=0;x<10;x++){
   var button:Button = new Button();
   button.addEventListener(MouseEvent.CLICK,function(e:MouseEvent):void{ callback(x); });
}

function callback(x:uint):void{
   trace("Oh yeah baby > " + x);
}
[/code]

Oh yes, I forgot, there's also the <em>good</em> way of doing it, which would look like this:

[code lang="actionscript"]
class MyButton extends Button{
   public var myVar:uint;
}

for(var x:uint=0;x<10;x++){
   var button:MyButton = new MyButton();
   button.addEventListener(MouseEvent.CLICK,callback);
   button.myVar = x; // now this is NOT a trick
}

function callback(e:MouseEvent):void{
   trace("Oh yeah baby > " + MyButton(e.target).myVar);
}
[/code]

So maybe it's time to do things <em>right</em> and if your button needs an extra property, then it's not a <em>Button</em>, it's a <em>MyButton</em>. But, am I going to build a new type of Button for each element of my interface that has to pass a parameter to a listener??? Don't think so.

For the time being the data property works for me, but more than happy to hear other options.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date>2008-11-06 22:09:04</wp:post_date>
		<wp:post_date_gmt>2008-11-06 21:09:04</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-groundhound-day-passing-extra-parameters-to-listeners</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[Matt Rix]]></wp:comment_author>
			<wp:comment_author_email>matt@indusblue.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.indusblue.com</wp:comment_author_url>
			<wp:comment_author_IP>99.245.213.40</wp:comment_author_IP>
			<wp:comment_date>2008-11-13 07:21:32</wp:comment_date>
			<wp:comment_date_gmt>2008-11-13 06:21:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, this is basically a glorified version of closures, but it looks much cleaner and you can just store a reference to the function for later removal if you want. I just posted this on another blog so I figured I might as well post it here too:

[code lang="actionscript"]


buttonA.addEventListener(MouseEvent.CLICK, Delegate.create(onClick, buttonA, 99));

buttonB.addEventListener(MouseEvent.CLICK, Delegate.create(onClick, buttonB, 33));

buttonC.addEventListener(MouseEvent.CLICK, Delegate.create(onClick, buttonC, 1044));

function onClick(e:Event, button:Button, someVar:int)
{

}

[/code]

Feel free to rename it and put it in whatever package you like : http://matt-rix.com/perm/flash/code/AS3Delegate/Delegate.as]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>78</wp:comment_id>
			<wp:comment_author><![CDATA[Newbie]]></wp:comment_author>
			<wp:comment_author_email>newbietoprofessional@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>79.79.102.43</wp:comment_author_IP>
			<wp:comment_date>2009-04-04 20:16:30</wp:comment_date>
			<wp:comment_date_gmt>2009-04-04 19:16:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello guys, I looked at the Delegate class by Matt Rix but I could not actually figure out how it works. Matt, it would be good if you could include some comments in your class or something that could provide more detail on how to use it as I am totally baffled.

Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>HippoHX 0.4 ready to roll</title>
		<link>http://blog.zarate.tv/2008/10/16/hippohx-04-ready-to-roll/</link>
		<pubDate>Thu, 16 Oct 2008 10:46:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=186</guid>
		<description></description>
		<content:encoded><![CDATA[I'm very happy to announce that the new release of <a href="http://hippohx.com/">HippoHX</a> is ready to <a href="http://hippohx.com/download/">download</a>. There are a bunch of changes on the API, bug fixes but specially the first version of the GUI is ready. That means you don't have to figure out the hhx format or how to call the packager, the GUI will do all that for you automatically.

Another big thing is that, as you might have guessed from <a href="http://blog.zarate.tv/2008/10/07/documenting-sucks/">previous posts</a>, there's now an auto-generated on-line documentation of <a href="http://hippohx.com/api/">HipoHX's client API</a>. I finally went for ASDoc, I'll comment the reasons in another post.

Next version will heavily focus on fixing bugs, improving the GUI (mr <a href="http://andreskarp.es/">Karp</a> has a lot to do), finishing <a href="http://www.haxevideo.com/">haXe video</a> integration so you can record audio/video from your apps out of the box, and whatever comes from the people using it.

HippoHX is starting to look to what it should: GUI + API for SWHX and I'm happy for that. I'm also happy because working in HippoHX is forcing me to look to a million different things such as Flex, AS3, ASDoc, haXe and even bash scripting (check out my <a href="http://hippohx.googlecode.com/svn/make">make</a> file, although I'm planning to change it already) and that was one of the initial ideas too: use HippoHX as an excuse to learn.

Just for the record, working alone on a project like this takes a huge, huge amount of time, it really does. Maybe it's because I'm not the smartest guy on Earth, but it's amazing the amount of stuff to do.

Anyway, if you are a Flash developer and have a SWF you want to make a desktop application go get the latest download and start finding bugs : )

Cheers!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date>2008-10-16 11:46:25</wp:post_date>
		<wp:post_date_gmt>2008-10-16 10:46:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hippohx-04-ready-to-roll</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hippohx"><![CDATA[hippohx]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>haXe goes CSS</title>
		<link>http://blog.zarate.tv/2008/10/19/haxe-goes-css/</link>
		<pubDate>Sun, 19 Oct 2008 15:06:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=198</guid>
		<description></description>
		<content:encoded><![CDATA[Say what? Yep, you read it right. Mr <a href="http://ncannasse.fr/">Cannasse</a> has just <a href="http://lists.motion-twin.com/pipermail/haxe/2008-October/020155.html">announced</a> <a href="http://ncannasse.fr/projects/hss">HSS</a>.

To sum up, write your CSS files using haXe. There are quite nice tricks like nested block, variables, etc. I'll definitely give it a go when needed, but I'd like to know what <a href="http://orangeside.org/">my</a> CSS <a href="http://denegro.com/">friends</a> think about it.

And as usual, hats off to Nicolas. I love the spirit: "<em>I don't like how this works I think I can make it better</em>" that we all should follow. Also, he shouldn't create any more tools, he should write a book about productivity to teach us that how to build them ourselves. ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>198</wp:post_id>
		<wp:post_date>2008-10-19 16:06:27</wp:post_date>
		<wp:post_date_gmt>2008-10-19 15:06:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>haxe-goes-css</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="haxe"><![CDATA[haxe]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Linux and Mac security bubble</title>
		<link>http://blog.zarate.tv/2008/10/22/linux-and-mac-security-bubble/</link>
		<pubDate>Wed, 22 Oct 2008 14:31:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=203</guid>
		<description></description>
		<content:encoded><![CDATA[Mr <a href="http://en.wikipedia.org/wiki/Eugene_Kaspersky">Kaspersky</a> (co-founder of the antivirus) thinks that in the very near future <a href="http://www.itworld.com/security/56382/kaspersky-mac-linux-bsd-open-attack">the bad guys making crapware are going to end up with the security bubble Linux and Mac users have these days</a>. I partially agree.

I think he and many others are right to think that targeting Windows is the most effective way of spreading a virus because it's present on most computers out there. But the more Linux and Macs grow, the bigger the reward will be for whoever cracks them down. Same old story as with Firefox.

But what the article doesn't say is that out of the 3 one is Open Source. And that's a big deal to me. Finding bugs in Open Source projects is indeed veeeeery easy. You can either go to their <a href="http://code.google.com/p/hippohx/issues/list">bug tracking system</a>, check out the <a href="http://hippohx.com/download/changelog">change log</a> or simply diff the latest version with the previous one. Piece of cake. Now you know what security bugs they've fixed so the only thing remaining is finding out previous version already installed and you are good to crack.

So, what you think it's more secure, Firefox that makes all this information publicly available or IE with its <a href="http://en.wikipedia.org/wiki/Security_through_obscurity">security through obscurity</a>? I have no doubt.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>203</wp:post_id>
		<wp:post_date>2008-10-22 15:31:01</wp:post_date>
		<wp:post_date_gmt>2008-10-22 14:31:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-and-mac-security-bubble</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<category domain="category" nicename="mac"><![CDATA[mac]]></category>
		<category domain="category" nicename="security"><![CDATA[security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Intellectual Property and Open Source</title>
		<link>http://blog.zarate.tv/2008/11/02/intellectual-property-and-open-source/</link>
		<pubDate>Sun, 02 Nov 2008 22:14:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=210</guid>
		<description></description>
		<content:encoded><![CDATA[Disclaimer: I hate lawyers, laws and judges. I think the whole legal system is built specifically to be complicated because, c'mon, life is not <em>that</em> complicated by itself. Everything is slow, language is really tricky, you have to go to a thousand different places to do anything... <em>Yes, let's better hire lawyers an let them take care of it</em>. But it doesn't matter how much we hate laws or Intellectual Property (IP), they are here to stay and they rule everything we do.

So, when I read <a href="http://books.slashdot.org/article.pl?sid=08/09/15/1459219">this review</a> on Slashdot about the book <a href="http://www.amazon.com/dp/0596517963/ref=nosim/?tag=slashdot0c-20">Intellectual Property and Open Source</a>, I thought I'd give it a go. I thought: "let's get better on what I hate the most".

It's kind of ironic that the book starts with IAAL (I am a layer) but very quickly says something like "whatever is written here shouldn't be taken for granted, go and check with your lawyer" which is exactly the same warning all the <a href="http://en.wikipedia.org/wiki/IANAL">IANAL</a> statements begin with.

The first part of the book gives a background about where IP comes from and why it's good (or was meant to be good) for society. It also covers differences between patents, copyright, trademarks, trade secrets and all the legal terminology crap.

Then continues with examples such as:

* If you write code for a company, who owns the rights of that code, you or the company?
* If you write your own project that has nothing to do with your current job, could your company claim compensation?

You would be surprised with <em>actual</em> cases and how they ended up. I haven't even finished the book yet and I'm sure I'm going to find even more interesting stuff.

So, copyright, lawyers, laws and all the crew aren't going to go away just because we don't like them. Let's try to learn how to use them in own our benefit.

Cheers!

ps: Grant Skinner wrote not long ago a very interesting post about <a href="http://www.gskinner.com/blog/archives/2008/07/source_code_lic_1.html">licensing source code</a>, give it a read and also to the comments. Interesting stuff.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date>2008-11-02 23:14:35</wp:post_date>
		<wp:post_date_gmt>2008-11-02 22:14:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>intellectual-property-and-open-source</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="books"><![CDATA[books]]></category>
		<category domain="category" nicename="open-source"><![CDATA[open source]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; Cloud computing is a (scary) trap]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2008/11/05/cloud-computing-is-a-scary-trap/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.37.130</wp:comment_author_IP>
			<wp:comment_date>2008-11-05 00:51:49</wp:comment_date>
			<wp:comment_date_gmt>2008-11-04 23:51:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] up with The Cloud already? Can&#8217;t blame you. But same as IP and lawyers, it&#8217;s here to stay whether we like it or not. Some people love it, some people hate it, [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; Good ol&#8217; GPL]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2008/11/15/good-ol-gpl/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.37.130</wp:comment_author_IP>
			<wp:comment_date>2008-11-15 14:09:13</wp:comment_date>
			<wp:comment_date_gmt>2008-11-15 13:09:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] finished the book Intellectual Property and Open Source that I was reading. As I said, I&#8217;ve found a bunch of interesting topics that I will probably post about whenever I feel you [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Custom traces in AS3</title>
		<link>http://blog.zarate.tv/2008/11/09/custom-traces-in-as3/</link>
		<pubDate>Sun, 09 Nov 2008 16:39:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=255</guid>
		<description></description>
		<content:encoded><![CDATA[At least a year ago I created an AIR version of <a href="http://zarate.tv/projects/zlog">ZLog</a>. I've been using it myself and also some workmates at the office, but never found time to release it officially. Precisely one of my ex-workmates sent me an email last week complaining about it wasn't working with latest version of AIR and that was the kick in the butt I needed. So here it is: <a href="http://zarate.tv/assets/projects/zlog/files/ZLog.air">ZLog AIR</a>. From now onwards each ZLog release will come as an AIR package too.

About the future of ZLog, I don't know what to do :| For starters, Flex SDK compiler doesn't provide a simple way of re-routing your traces to a custom trace. That plain sucks. They only needed to mimic what MTASC does, pre-process your code and substitute any trace call with calls to your custom trace function. I find that extremely useful and flexible, specially working in teams. What if I want to work with ZLog and someone else wants to work with <a href="http://osflash.org/xray">Xray</a>? That was easy to do in MTASC, almost impossible in AS3 + Flex SDK.

Everything I've read about custom traces in AS3 ends up saying:

<blockquote>Create a package function and call it from anywhere in your code</blockquote>

Well, that's certainly possible but not near as good as MTASC behaviour and I really miss it. On top of that, when I've tried ZLog for AS3, I've always found problems. Don't know what it is yet, but the player stops running after a couple of calls. Might be related to very fast consecutive LocalConnection calls, I don't know. I have to spend some time looking to this.

BTW, while I was creating the AIR version, I've run across the very famous AIR 303 error. It happens when you try to define custom icons for your AIR application, check out <a href="http://bugs.adobe.com/jira/browse/FB-11712">this bug</a>. All references I've found out there are related to Flex Builder, but I was compiling with <a href="http://www.adobe.com/products/air/tools/sdk/">AIR SDK</a>, so the solution didn't apply. I finally solved it telling the compiler to include the icons' folder too (<a href="http://zcode.googlecode.com/svn/trunk/as2/tv/zarate/projects/ZLog/compileAIR.bat">complete script</a>):

[code lang="dos"]adt -package ... ZLog.air air-descriptor.xml ZLog.html elements icons[/code]

Hope this helps!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>255</wp:post_id>
		<wp:post_date>2008-11-09 17:39:31</wp:post_date>
		<wp:post_date_gmt>2008-11-09 16:39:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>custom-traces-in-as3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="air"><![CDATA[air]]></category>
		<category domain="category" nicename="bugs"><![CDATA[bugs]]></category>
		<category domain="category" nicename="zlog"><![CDATA[zlog]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Incredibly annoying Macs. Take 1.</title>
		<link>http://blog.zarate.tv/2008/11/11/incredibly-annoying-macs-take-1/</link>
		<pubDate>Tue, 11 Nov 2008 16:50:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=272</guid>
		<description></description>
		<content:encoded><![CDATA[I'm just sorry, but I can't stand them. They are supposed to be the super-usable machines, but they are not. It's fun though how all my UX/HCI/usability friends (that of course use Macs) keep blaming *me* because "you are so used to Windows that you think Macs are wrong". How nice is that? What happened to the the old "if the software model doesn't match the user model, the software is wrong"?.

I switched from Windows to Ubuntu and I didn't have a single usability problem. Full stop*. I had many problems, but not usability related. So here comes the first round of the <strong>Incredibly annoying Macs</strong>.

Desktops or <em>spaces</em> (Apple's marketing team dixit) work in Linux as you would expect. For example, this is my usual working environment in Ubuntu:

Desktop 1: Working stuff, usually involving Firefox opened with whatever I'm doing.
Desktop 2: Music player kicking plus Firefox opened with GMail opened.

Nice'n'easy. Now, let's go to the Mac. Open FF in desktop 1, switch to desktop 2, click on FF and....... ops! I'm taken to desktop 1. WTF???? How on earth you justify from an usability point of view that opening an application switches desktops? C'mon...

You have to Google the problem to find out that you can go to Preferences > Exposé and spaces > Spaces and click on "When switching to an application, switch to a space with open windows for the application". Fuck me. What about "Keep all application's windows in the same space"?

Anyway. I have a ton more, I'll post them as soon as they hit me again. Of course feel free to blog about "incredibly annoying Windows" or "incredibly annoying Ubuntu" or "incredibly annoying whatever". The difference is that they don't proclaim themselves as <em>the most usable system in the world</em>. 

Have a nice day!

* Ok, I shouldn't lie. In Windows when you are on the console both "cd .." and "cd.." work. In Linux (and Macs!) only "cd ..".]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>272</wp:post_id>
		<wp:post_date>2008-11-11 17:50:37</wp:post_date>
		<wp:post_date_gmt>2008-11-11 16:50:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>incredibly-annoying-macs-take-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="incredibly-annoying-macs"><![CDATA[incredibly annoying macs]]></category>
		<category domain="category" nicename="usability"><![CDATA[usability]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The sound of the death</title>
		<link>http://blog.zarate.tv/2008/11/23/the-sound-of-the-death/</link>
		<pubDate>Sun, 23 Nov 2008 16:49:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=282</guid>
		<description></description>
		<content:encoded><![CDATA[Hard drives fail and they do when you least expect it. If you are lucky you might hear weird sounds before the big-bang-crash just in time to back up your precious data. Because no one does a back ups randomly (that's only for cowards), we only do them when we think something bad is about to happen.

So, if you want to impress family and friends this Xmas, check this out: <a href="http://datacent.com/hard_drive_sounds.php">typical sounds from 35 different failing and dying hard drives</a>. How geeky is that, uh? You can totally be the king of the party listening to the computers around you and diagnosing them:

<blockquote>Hear that sound baby? That's a Maxtor desktop drive with bad heads making clicking/knocking/beeping noise.</blockquote>

You get the girl or your money back. Via <a href="http://hardware.slashdot.org/hardware/08/11/12/004220.shtml">Slashdot</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>282</wp:post_id>
		<wp:post_date>2008-11-23 17:49:46</wp:post_date>
		<wp:post_date_gmt>2008-11-23 16:49:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-sound-of-the-death</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hardware"><![CDATA[hardware]]></category>
		<category domain="category" nicename="mega-geek"><![CDATA[mega-geek]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Good ol&#039; GPL</title>
		<link>http://blog.zarate.tv/2008/11/15/good-ol-gpl/</link>
		<pubDate>Sat, 15 Nov 2008 13:09:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=287</guid>
		<description></description>
		<content:encoded><![CDATA[I've finished the book Intellectual Property and Open Source that I was reading. As <a href="http://blog.zarate.tv/2008/11/02/intellectual-property-and-open-source/">I said</a>, I've found a bunch of interesting topics that I will probably post about whenever I feel you guys need a good nap.

I was somehow disappointed to find out that the book comes with a rather big appendix (roughly 1/3 of the book size) that gathers a printed version of the most common OSI licenses for your <em>pleasant</em> reading. There is a copy of the Apache License, BSD license, Mozilla License.... Probably the author felt too that he needed to help his readers out with their sleeping problems.

But while I was flicking through the pages I stumbled upon the GPL. Good ol' GPL. The license that is at the very heart of the Open Source movement. Have I read it before? Of course not. Have I read it now? Hell no, I sleep like a baby, why would I? What I did read was the preamble. And it made me think. For those insomniacs among my readers, you can read the <a href="http://www.gnu.org/licenses/gpl-3.0.html">full license</a>, I'm copying only parts adding some emphasis. Here we go:

<blockquote>The GNU General Public License is a free, copyleft license for software and other kinds of works.

The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the <strong>GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users</strong>. 

When <strong>we speak of free software, we are referring to freedom, not price</strong>. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.

<strong>To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others</strong>.

For example, if you distribute copies of such a program, whether gratis or for a fee, <strong>you must pass on to the recipients the same freedoms that you received</strong>. You must make sure that they, too, receive or can get the source code. And <strong>you must show them these terms so they know their rights</strong>.

<strong>Some devices are designed to deny users access to install or run modified versions of the software inside them</strong>, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. <strong>The systematic pattern of such abuse occurs in the area of products for individuals to use, which is **precisely** where it is most unacceptable</strong>.</blockquote>

So, the GPL boils down to:

* You have the freedom to do what you want with the software you just got.
* If you redistribute the software, be kind and pass on that freedom.

Wouldn't be great if the GPL were just this piece of text? Simple, human readable, to the point... The problem is that after this beautiful preamble comes the actual legal text that you can't get your head around unless you are a bloody lawyer. The legal system seems to me like a race to find ways of <em>not</em> obeying the law. But I leave that for another post.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>287</wp:post_id>
		<wp:post_date>2008-11-15 14:09:08</wp:post_date>
		<wp:post_date_gmt>2008-11-15 13:09:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>good-ol-gpl</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="legal"><![CDATA[legal]]></category>
		<category domain="category" nicename="open-source"><![CDATA[open source]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OpenID Yes. OpenID No.</title>
		<link>http://blog.zarate.tv/2008/11/18/openid-yes-openid-no/</link>
		<pubDate>Tue, 18 Nov 2008 08:44:53 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=305</guid>
		<description></description>
		<content:encoded><![CDATA[I've been wondering lately about using <a href="http://openid.net/">OpenID</a> as the only registration method for a site I'm helping out with. My problem is that I clearly see both the benefits and the problems of using OpenID.

But one problem I hadn't see hit me the other day. What about 2 users using the same nick? Even <a href="http://zarate.tv">Zarate</a> is difficult to pick up in sites with a little bit of traffic, so what about "John Smith", "Rachel" or "Wadus"? Most likely 2 or even more users are going to have them. And because they will be registering with an OpenID provider, there's nothing you could do to prevent the collision.

Now let's say you want to do something meaningful with the nicks. What if you want to offer nice URLs based on the nick only? Now you are screwed. If you control all the registration process, you can easily prevent duplicates and the <em>hot</em> nicks like <em>suPerFUcker77</em> are given away on a strictly first-come-first-served basis.

To bypass that you could do various things. For example StackOverflow adds their internal user ID to the URLs (see me <a href="http://stackoverflow.com/users/5908/z225rate">here</a>) which is an acceptable solution.

But this problem is also a usability problem. People are going to find several users with the same nick and they are <em>not</em> used to it. Let's say a forum implements OpenID and they get me hanging out and posting. You get a bunch of posts by "Zarate" with my nice <a href="http://www.gravatar.com/">Gravatar</a> by its side. Now, 6 months later another Zarate comes in. As opposed to the first one, new Zarate turns out to be a clever guy and on top of that he has another avatar. User will be confused: "<em>What? This Zarate now is clever? And what's up with the new avatar?</em>" Eventually they'll figure out what's going on, but sure there's going to be some confusion.

And that's because <strong>on the internet we are not used to duplicated nicks</strong>. In real life it's perfectly normal having 2 people in the same group with the same name because they have different faces, different voices and you just can <strong>see</strong> they are different. But there's only one Zarate in <a href="http://unvlog.com/zarate">unvlog</a>, there's only one Zarate in <a href="http://planetaki.com/zarate">Planetaki</a>, etc.

Maybe this is something that is inevitable in the long term as more and more people have an internet life, but today I think is a little bit of a problem that adds up to the OpenID list. If you are interested here you have a bunch of links about OpenID, help yourself.

* <a href="http://stackoverflow.com/questions/297249/using-openid-how-do-you-handle-2-accounts-with-the-same-nick">Using OpenID how do you handle 2 accounts with the same nick</a>
* <a href="http://www.intertwingly.net/blog/2007/01/03/OpenID-for-non-SuperUsers">OpenID for non-SuperUsers</a>
* <a href="http://stackoverflow.com/questions/182258/are-there-any-security-risks-associated-with-me-using-openid-as-the-authenticat">Security risks associated with me using OpenId as the authentication method on my site</a>
* <a href="http://teddziuba.com/2008/09/openid-is-why-i-hate-the-inter.html">OpenID Is Why I Hate The Internet</a>
* <a href="http://stackoverflow.com/questions/140613/how-to-address-openid-providers-downtime">How to address OpenID providers downtime?</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>305</wp:post_id>
		<wp:post_date>2008-11-18 09:44:53</wp:post_date>
		<wp:post_date_gmt>2008-11-18 08:44:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>openid-yes-openid-no</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openid"><![CDATA[openid]]></category>
		<category domain="category" nicename="usability"><![CDATA[usability]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gravatar for CakePHP</title>
		<link>http://blog.zarate.tv/2008/11/20/gravatar-for-cakephp/</link>
		<pubDate>Thu, 20 Nov 2008 15:06:45 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=326</guid>
		<description></description>
		<content:encoded><![CDATA[I've been playing around with <a href="http://cakephp.org/">CakePHP</a> for a week or so and I think it has a lot of <em>potential</em>. The framework feels robust, complete and very handy <em>once</em> you get to know it. "<em>As every thing else</em>" I hear you saying, but the problem I'm having with CakePHP is the documentation.

Most of the times it's incomplete or just assumes that you know way too much about the framework. Getting to work a simple authentication system using their built-in component has been quite a bit of a pain. And I'm not alone, the docs, the mailing list and many other blogs complain about the same. I'm thinking about writing yet another tuto myself, it's really frustrating when you just want to get things done and you can't...

I hope I've learnt from others so I'd make kick ass docs for <a href="http://hippohx.com/">HippoHX</a> both for advanced developers <em>AND</em> newbies. Even though <a href="http://blog.zarate.tv/2008/10/07/documenting-sucks/">documenting sucks</a> you/we must create good documentation.

Anyway. I've created a very simple Helper to handle Gravatars. Certainly not rocket science, but here it is:

[code lang="php"]
/*
* Gravatar Helper. 
* First import it. Either globally in your app_controller.php (app/app_controller.php) or in a specific controller:
* var $helpers = array('Gravatar');
*
* Then just call it from your view like this:
* $gravatar->get(wadus@wadus.com);
*/

class GravatarHelper extends Helper {
	
	var $helpers = array('Html');
	
	function get($email,$size = 40){
		return $this->output($this->Html->image("http://www.gravatar.com/avatar.php?gravatar_id=".md5($email)."&size=".$size));
	}

}
[/code]

So simple it doesn't need documentation :P]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>326</wp:post_id>
		<wp:post_date>2008-11-20 16:06:45</wp:post_date>
		<wp:post_date_gmt>2008-11-20 15:06:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gravatar-for-cakephp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="gravatar"><![CDATA[gravatar]]></category>
		<category domain="category" nicename="php"><![CDATA[php]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>81.107.34.90</wp:comment_author_IP>
			<wp:comment_date>2008-11-20 16:09:46</wp:comment_date>
			<wp:comment_date_gmt>2008-11-20 15:09:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[And of course just after posting I googled "gravatar cakephp" and found 200 helpers just like this one or better. I swear I looked on the mailing list first...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[Dando la chapa - &raquo; Zárate busca chica]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.dandolachapa.com/2008/11/26/zarate-busca-chica/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.37.130</wp:comment_author_IP>
			<wp:comment_date>2008-11-26 10:15:57</wp:comment_date>
			<wp:comment_date_gmt>2008-11-26 09:15:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] vamos, porno duro. Me defiendo con PHP también (últimamente me está gustando CakePHP, aunque la documentación no es lo mejor) así que lo único que me falta para ser un hombre orquesta total es diseñar, pero en eso sí que [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[juanma]]></wp:comment_author>
			<wp:comment_author_email>juanma@apatika.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.apatika.com</wp:comment_author_url>
			<wp:comment_author_IP>80.103.108.36</wp:comment_author_IP>
			<wp:comment_date>2008-12-02 20:05:05</wp:comment_date>
			<wp:comment_date_gmt>2008-12-02 19:05:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Buenas Zárate, In english (a ver si me sale , jeje) 
Once upon a time my laziness took me to cakephp. I use cakephp for admin flash driven sites. I use cakeamfphp to connect width the controllers.
For admin area authentication I use a component, I can´t remember where I found it:

[code lang="php"]class LoginComponent extends Object {

	function startup (&amp;$controller) {
      if(isset($controller-&gt; params['admin'])) {   
		if (!$controller-&gt;Session-&gt;check('User')) {   
			// set flash message and redirect   
			$controller-&gt;Session-&gt;setFlash('Necesitas usuario y contraseña');   
			$controller-&gt;redirect(array('action'=&gt;'admin_login', 'controller'=&gt;'users'), null, true);
    	}
	
	  } 
	
	}   
}[/code]

then each controller has a:
 
var $components=array('login');

i know this is not quite efficiency but it works. Every action in the controller like "admin_..." will ask for user and pass.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>81.107.34.90</wp:comment_author_IP>
			<wp:comment_date>2008-12-02 20:47:41</wp:comment_date>
			<wp:comment_date_gmt>2008-12-02 19:47:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Juanma!

Thanks for code snippet, might come handy in the (near) future. I'm seriously thinking about writing that Cake authentication tuto including remember-me cookies and forgot password features, because which website doesn't have such basic features these days?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>There&#039;s something called Flex Compiler SHell</title>
		<link>http://blog.zarate.tv/2008/12/07/theres-something-called-flex-compiler-shell/</link>
		<pubDate>Sun, 07 Dec 2008 16:55:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=268</guid>
		<description></description>
		<content:encoded><![CDATA[And I had no idea. I've been working with the Flex SDK for a while now and I find it very slow to say the least. Actually, compared to MTASC or haXe compilers is just painfully slow. So I thought about giving a go to Google and the oracle has spoken: there's a toy called <a href="http://labs.adobe.com/wiki/index.php/Flex_Compiler_Shell">Flex Compiler SHell</a> or fcsh.

Basically, whenever you call the mxmlc compiler it has to start up the fatty Java Virtual Machine and that ain't good news. Specially in Linux where I find every single Java application damn slow. 

To speed things up fcsh starts the JVM only <em>once</em> per session and keeps it running as long as fcsh is opened. And on top of that it does incremental compilation which means it only compiles the classes that have changed between calls.

So, want to use it? Easy peasy, fsch binary is in the same folder as mxmlc, so fire up your console, browse to the folder (if you don't have it in your path) and type this:

[code lang="bash"]./fcsh[/code]

Now you should see in your console something like this.

[code lang="bash"]Adobe Flex Compiler SHell (fcsh)
Version 3.0.0 build 477
Copyright (c) 2004-2007 Adobe Systems, Inc. All rights reserved.

(fcsh)[/code]

Cool, you have a fcsh session opened. To start the magic type the same as if you were calling mxmlc compiler. As an example this is the call I make to compile HippoHX's GUI:

[code lang="bash"](fcsh) mxmlc tools\gui\com\hippohx\gui\HippoGUI.mxml -source-path+=client\as3 -source-path+=tools\gui -defaults-css-files tools\gui\com\hippohx\gui\hippogui.css[/code]

Hit enter and you'll see something like "Assigned 1 as the compile target id". You've probably noticed that there was no speed improvement. Don't panic, the performance boost comes from now onwards. To compile again, just type this:

[code lang="bash"]compile 1[/code]

Now there's the speed improvement. If you are an obsessive compulsive compiler as I am, this is going to save you tons of time.

I wish the compiler was fast by default and I'd like to know Adobe's reasons to build the compiler in Java instead of plain C, but until that time comes, we have fcsh. If you want to know more about it, read it from <a href="http://stopcoding.wordpress.com/2008/04/20/flex-compiler-shell-fcsh/">the man behind the idea</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>268</wp:post_id>
		<wp:post_date>2008-12-07 17:55:01</wp:post_date>
		<wp:post_date_gmt>2008-12-07 16:55:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>theres-something-called-flex-compiler-shell</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="flex"><![CDATA[flex]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; fcsh doesn&#8217;t realize an embedded css has been updated]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2009/02/23/fcsh-doesnt-realize-an-embedded-css-has-been-updated/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.37.130</wp:comment_author_IP>
			<wp:comment_date>2009-02-23 12:26:35</wp:comment_date>
			<wp:comment_date_gmt>2009-02-23 11:26:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] found this one. If you are compiling using fcsh from Flex SDK 3.2 (read here if you are not) be warned that if you update an embedded css (passed using -defaults-css-files) [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Incredibly annoying Macs. Today keyboard layout.</title>
		<link>http://blog.zarate.tv/2008/12/28/incredibly-annoying-macs-today-keyboard-layout/</link>
		<pubDate>Sun, 28 Dec 2008 10:10:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=337</guid>
		<description></description>
		<content:encoded><![CDATA[Unless you learnt to type using a Mac you probably thought W-T-F the first time you tried to type something in one of them.

Again, Linux and Windows behave almost the same way, but some geniuses at Apple decided to go creative, and this time not in the nice way. To name a few:

* There's a Ctrl key, but doesn't work as you'd expect.
* There's CMD key that you don't know what's for.
* You have the F keys but they don't work as you'd expect either.
* You have end/beginning of line, PageUp and and PageDown keys, but guess what? You bet your ass they don't work as you'd expect.
* If you want to select words in a line instead of just letters, the key combination is Alt + Shift instead of Ctrl +  Shift.

Not enough? Then check this out: even though you can solve some of these <em>features</em> <a href="http://www.devtaxi.com/category/leopard/">editing dark configuration files somewhere in your hard drive</a> the changes are <em>NOT</em> consistent through all your applications. Some of them follow that new configuration file, like TextMate, some others don't, like Firefox or the console.

Apparently it has to do with being a Cocoa application, but I'm going to play here the "<em>I'm a dumb user, don't give a shit about your geeky stuff</em>" card and say: "I don't give a shit about your geeky stuff, all I want is that my applications behave consistently".

The reason for this odd behaviour on Macs? I have no idea. What I think is that this <em>feature</em> is not an advantage (like a nice innovation as, let's say, the iPhone interface), just a different way of doing things, a deviation from the standard. Why keep using it? Remember that <a href="http://www.codinghorror.com/blog/archives/000290.html">defaults are arguably the most important design decisions you'll ever make as a software developer</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>337</wp:post_id>
		<wp:post_date>2008-12-28 11:10:48</wp:post_date>
		<wp:post_date_gmt>2008-12-28 10:10:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>incredibly-annoying-macs-today-keyboard-layout</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="incredibly-annoying-macs"><![CDATA[incredibly annoying macs]]></category>
		<category domain="category" nicename="usability"><![CDATA[usability]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[Tom]]></wp:comment_author>
			<wp:comment_author_email>banoffi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>81.86.126.217</wp:comment_author_IP>
			<wp:comment_date>2009-01-22 11:04:48</wp:comment_date>
			<wp:comment_date_gmt>2009-01-22 10:04:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Funny, I feel just the same way about PCs when I'm forced to use them!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>84</wp:comment_id>
			<wp:comment_author><![CDATA[xleon]]></wp:comment_author>
			<wp:comment_author_email>malandro@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.xinterface.net</wp:comment_author_url>
			<wp:comment_author_IP>79.148.176.141</wp:comment_author_IP>
			<wp:comment_date>2009-04-20 16:04:10</wp:comment_date>
			<wp:comment_date_gmt>2009-04-20 15:04:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Qué razón tienes!
El teclado del portátil es horrible. De hecho, no he conseguido adaptarme. Solo pude hacerlo con el teclado blanco de apple (el grande, porque el wireless tambien es lo peor)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Blank lines are free</title>
		<link>http://blog.zarate.tv/2008/11/27/blank-lines-are-free/</link>
		<pubDate>Thu, 27 Nov 2008 08:18:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=353</guid>
		<description></description>
		<content:encoded><![CDATA[Just these last 2 weeks I've come across pieces of code that looked very similar and familiar. Doesn't matter if it's ActionScript, PHP, CSS or whatever. Well, write this down: <strong>BLANK LINES ARE FREE</strong>! Jeeeez, it's not that difficult! Just add some blank lines between your functions or your definitions... It makes your code much, much easier to read. Writing code is like general writing, you have to use punctuation signs, blank lines to split paragraphs and ideas (yes, different actions on the same function) and so on. Besides, you are not just writing for the computer, you are writing for people. And <a href="http://www.codinghorror.com/blog/archives/001184.html">coding is just writing</a>: "Let us change our traditional attitude to the construction of programs: Instead of imagining that our main task is to instruct a computer what to do, <strong>let us concentrate rather on explaining to human beings what we want a computer to do</strong>".

Please.

ps: Why can't I say "Blank lines are free" without my mind racing to sing <a href="http://unvlog.com/zarate/2008/11/27/blank-lines-are-free">this</a>?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>353</wp:post_id>
		<wp:post_date>2008-11-27 09:18:27</wp:post_date>
		<wp:post_date_gmt>2008-11-27 08:18:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blank-lines-are-free</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[code]]></category>
		<category domain="category" nicename="usability"><![CDATA[usability]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>74</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; Part time cuddler]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2009/03/26/part-time-cuddler/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.37.130</wp:comment_author_IP>
			<wp:comment_date>2009-03-26 00:03:20</wp:comment_date>
			<wp:comment_date_gmt>2009-03-25 23:03:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 1) The lack of free space. For the love of GOD, leave at least one blank line between functions. Remember: blank lines are free. [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>FDT, now is the time</title>
		<link>http://blog.zarate.tv/2008/12/02/fdt-now-is-the-time/</link>
		<pubDate>Tue, 02 Dec 2008 20:02:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=362</guid>
		<description></description>
		<content:encoded><![CDATA[Quite an interesting <a href="http://www.lfpug.com/27th-november-2008-27112008/">meeting at LFPUG last week</a>. After <a href="http://elecash.org/">Elecash</a> told me almost a year and half ago at Subflash I've been meaning to attend a full demo of FDT. He very kindly did a 30 minutes one for us in Malaga, but certainly not this deep.

I remember trying <a href="http://fdt.powerflasher.de/">FDT</a>'s Linux version back then and I have to say I wasn't very pleased. I don't know what it was, maybe the JRE version I was running, maybe FDT itself, but it wasn't working properly. Let alone it runs on top of my old nemesis Eclipse. So yesterday I grabbed one of the FDT guys (the marketing one) and asked how the Linux version was doing these days. "We don't officially support Linux". Rather disappointing for a *commercial* application ¬¬ 

But I have to admit that the workflow looks veeeeeeeery cool. It seems the tool tries to help you out without getting in your way. You know, like those tools that pretend to more clever than you are *cof,Word,cof,cof*. For example, the live error highlighting feature saves you a lot of time. Also you can move around FDT views and dialogs using the keyboard only, and that's usually a good usability sign.

On a side note again I was amazed by the HUGE difference of skills across the Flash community. While there are people successfully doing actual work with a very low let's say... regard for Software Development best practices, there're also pure hardcore programmers following those best practices to heart. And all of them are using pretty much the same tools. Kudos to Adobe for creating such a flexible platform. I say this because the guys at PowerFlasher seem to be using <a href="http://www.spicefactory.org/parsley/">Parsley</a>, a framework for Flex and Flash that I had never heard from before and that it seems very interesting.

There's no LFPUG meeting next month and it seems we might have a little bit of <a href="http://haxe.org/">haXe</a> for January, which would be very cool. Damn I need a new version of <a href="http://hippohx.com/">HippoHX</a> for then!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>362</wp:post_id>
		<wp:post_date>2008-12-02 21:02:33</wp:post_date>
		<wp:post_date_gmt>2008-12-02 20:02:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fdt-now-is-the-time</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="events"><![CDATA[events]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[ftd-now-is-the-time]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Adobe Stratus</title>
		<link>http://blog.zarate.tv/2008/11/28/adobe-stratus/</link>
		<pubDate>Fri, 28 Nov 2008 08:17:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=365</guid>
		<description></description>
		<content:encoded><![CDATA[When I read about it at <a href="http://www.flashcomguru.com/index.cfm/2008/11/26/stratus-rtmfp">Stefan's blog</a> I thought the <a href="http://en.wikipedia.org/wiki/Media_echo_chamber">echo chamber</a> was going to do its job fast so I'm rather surprised I haven't read about it anywhere else because I think this is a big deal.

Long story short: Flash player 10 has P2P super-powers. I first heard about this from Hank Williams (<a href="http://whydoeseverythingsuck.com/2008/05/adobe-introduces-p2p-flash-player-kills.html">here</a>, <a href="http://whydoeseverythingsuck.com/2008/05/flash-10-p2p-and-cdns-deeper-analysis.html">here</a>, <a href="http://whydoeseverythingsuck.com/2008/05/adobe-refuses-to-say-im-wrong.html">here</a> and <a href="http://whydoeseverythingsuck.com/2008/05/on-p2p-adobe-says-i-am-wrong-i-say-well.html">here</a>) but it wasn't clear at that time what would the player exactly do. Now it's a little bit more clear, I quote from the <a href="http://labs.adobe.com/wiki/index.php/Stratus:FAQ">FAQ</a>s:

<blockquote>End User to End User: Two clients communicate directly without passing their data through the server for low-latency, real-time communication. This is the solution that Adobe is enabling with RTMFP.</blockquote>

In English: Video chat and Voice over IP. This is fantastic news for my Mum. I'm going to build a mega-simple, easier to use than Skype, no registration needed, audio-video chat so we can easily talk. Also opens up for multi-player games. Maybe screensharing too?

<blockquote>Swarming: Many to many communication typically used to share delivery a file via download. [...] Flash player 10 and AIR 1.5 will <strong>not</strong> enable swarming solutions.</blockquote>

In English: No eMule in Flash. Probably Adobe doesn't want to mess up with RIAA and the likes.

<blockquote>Multicast: One to many communication over an IP infrastructure. Flash Player 10 and AIR 1.5 will <strong>not</strong> enable multicast solutions.</blockquote>

In English: If you want one-to-many communication, please go to the Flash Media Server section, thanks. Why would Adobe want to create competitors for their own commercial products?

But all this is <em>not</em> Stratus, all this is the new RTMFP protocol. You still need need <em>something</em> to connect 2 Flash players together. And <em>that</em> is Stratus, a beta service to be launched in December. At least testing the beta is free, you only need to register with your Adobe ID to get a developer key for your app.

So, even with the technical limitations I think this is very good news and keeps opening up what we can do with Flash.

How nice!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>365</wp:post_id>
		<wp:post_date>2008-11-28 09:17:47</wp:post_date>
		<wp:post_date_gmt>2008-11-28 08:17:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adobe-stratus</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<category domain="category" nicename="stratus"><![CDATA[stratus]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[Boss]]></wp:comment_author>
			<wp:comment_author_email>geoffstead@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://moblearn.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>81.107.39.115</wp:comment_author_IP>
			<wp:comment_date>2008-11-28 10:43:06</wp:comment_date>
			<wp:comment_date_gmt>2008-11-28 09:43:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow - very cool for the education market (that's us). Thanks for the translations!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[Saad]]></wp:comment_author>
			<wp:comment_author_email>saadshamim@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.66.70.177</wp:comment_author_IP>
			<wp:comment_date>2008-12-19 07:40:03</wp:comment_date>
			<wp:comment_date_gmt>2008-12-19 06:40:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[don't you need a multicast solution to make multilayer games?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Merging SVN branches</title>
		<link>http://blog.zarate.tv/2008/11/30/merging-svn-branches/</link>
		<pubDate>Sun, 30 Nov 2008 10:24:58 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=379</guid>
		<description></description>
		<content:encoded><![CDATA[[NOTE]

Apologies for yesterday's incomplete post. It seems that lately I'm having problems to tell the difference between the "Preview" and the "Publish" buttons. Just the last 2 weeks I've published posts when all I wanted was preview them. And at least Google Reader is bloody quick fetching new posts because I deleted them just 20 seconds after publishing and still they got caught. Anyway, here we go again.

[/NOTE]

SVN is very well known for not doing a good job merging branches, or so they say. Most developers avoid branching at all costs (at least I was doing it) but that’s ignoring a very powerful feature of source control systems. Using branches is specially important when different developers or teams have to implement big features but still want to commit to the repo regularly. Using a branch they will not commit to the trunk and get in the way of other developers or affect the stability of the project (daily builds).

So, if you decide to go for branches the first thing I'd recommend is reading <a href="http://svnbook.red-bean.com/en/1.5/svn.branchmerge.html">Branching and Merging</a> from the all almighty SVN book. It's a 10-20 minutes read  and it gives you a nice overview.

Creating a branch is very simple, technically it's just a copy from one folder to another, so the command looks like this:

[code lang="bash"]svn copy http://myrepo.com/trunk http://myrepo.com/branches/SupreBranch -m "Creating branch for new super feature"[/code]

Please note that you can also branch a branch, not only the trunk. After you've created your new fancy branch just check it out somewhere and start making your changes, fixing ugly bugs and adding new features. The rest of the team will continue to work on the trunk (or their branches) and everybody happy. 

Now, the big deal is <em>merging</em> branches. SVN takes care of the heavy load, but most likely you are going to get some conflicts. That happens when SVN cannot make sense of the changes or decide which difference is more important. You can read <a href="http://jessewarden.com/2008/11/agile-chronicles-3-branch-workflow.html">Branch Workflow</a> from Jesse Warden's Agile Chronicles for a real case scenario.

A nice cool SVN feature is that you can get a little preview of what's going to happen before the actual merge. First let’s try this:

[code lang="bash"]svn merge --dry-run http://myrepo.com/trunk@42 http://myrepo.com/branches/SuperBranch@17 svn_trunk/ > changes.txt[/code]

See the --dry-run bit? That’s asking SVN: “Please tell me what would happen”. Then we pipe the result to a txt file for easier reading. The <em>@x</em> means specific revision numbers to merge, btw. So now open your changes.txt file and you'll see what files are being deleted, updated, removed and more important, where the conflicts are (if any). Also note that you have to provide a valid working copy folder that will be used for the real merge (I prefer to use a clean trunk folder, but that's just my paranoia).

So, everything looks good? Even if it doesn't go ahead because nothing makes it to the repo until you commit, so here we go:

[code lang="bash"]svn merge http://myrepo.com/trunk@42 http://myrepo.com/branches/SuperBranch@17 svn_trunk/[/code]

Now in your "svn_trunk" folder you have the 2 branches merged. Wohooo! Go and take a look, resolve the conflicts and commit the local changes (the result of the merge) to the trunk and job done. Now you feel you have SVN super-powers or I at least I do.

There's much more stuff regarding branches like undoing changes, branching strategies, merging from the trunk to a branch or merging just some files, so again take a look to the <a href="http://svnbook.red-bean.com/en/1.5/">SVN Book</a> and Google a little bit for more info.

Go branching, go!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>379</wp:post_id>
		<wp:post_date>2008-11-30 11:24:58</wp:post_date>
		<wp:post_date_gmt>2008-11-30 10:24:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>merging-svn-branches</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="source-control"><![CDATA[source control]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Want it fast? </title>
		<link>http://blog.zarate.tv/2008/12/05/want-it-fast/</link>
		<pubDate>Fri, 05 Dec 2008 11:58:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=424</guid>
		<description></description>
		<content:encoded><![CDATA[Probably you've already heard about <a href="http://labs.adobe.com/technologies/alchemy/">Adobe Alchemy</a>, if you haven't, here's quick sum up: Alchemy is a tool to cross-compile pure C/C++ to a SWF for the Flash player 10. If you want to know more about it, just go to the Labs and follow the links. What's really interesting is this:

<blockquote>...performance can be considerably faster than ActionScript 3.0...</blockquote>

Luckily for us, what's interesting to me is a challenge for the so-called <em>man that never sleeps</em>, Nicolas Cannasse. How come you could create faster SWFs with Alchemy? At the end of the day it's just a SWF, right? Well, it's not. Alchemy SWFs use parts of the AVM2 that "regular" SWFs don't use.

It didn't take long to Nicolas to come up with the haXe solution: the <a href="http://ncannasse.fr/blog/virtual_memory_api">Virtual Memory API</a>. So from haXe you can use this new API that outputs the same bytecode as Alchemy does, therefore you get super-fast SWFs. Veeeeeery cool. Or very cool if you are an haXe developer.

And this is my point. How weird it is that there're 2 ways of producing fast SWFs but none of them is officially supported by Adobe? One is in the labs, the other one is haXe. Now put yourself in the shoes of a Papervision or Away3D developer. It sucks. Those projects (and many others) need to squeeze the player till the very last drop of performance. And when you are talking about 30-40% performance boost.... it's a big deal.

On the bright side, Adobe keeps improving the AVM2 and that's always good for everybody, haXe developer or not!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>424</wp:post_id>
		<wp:post_date>2008-12-05 12:58:27</wp:post_date>
		<wp:post_date_gmt>2008-12-05 11:58:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>want-it-fast</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<category domain="category" nicename="alchemy"><![CDATA[alchemy]]></category>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="haxe"><![CDATA[haxe]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6661</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; Alchemy, what&#8217;s Adobe waiting for?]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2011/02/06/alchemy-whats-adobe-waiting-for/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.2.138</wp:comment_author_IP>
			<wp:comment_date>2011-02-06 11:27:12</wp:comment_date>
			<wp:comment_date_gmt>2011-02-06 10:27:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] top of the options I wrote about back in 2008 now there&#8217;s a third way of accessing those hidden FP APIs: Apparat. So you can use Alchemy, [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1296988032.9808";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:48:{s:15:"comment_post_ID";s:3:"424";s:14:"comment_author";s:54:"ZBlog &raquo; Alchemy, what&#8217;s Adobe waiting for?";s:18:"comment_author_url";s:65:"http://blog.zarate.tv/2011/02/06/alchemy-whats-adobe-waiting-for/";s:15:"comment_content";s:155:"[...] top of the options I wrote about back in 2008 now there&#8217;s a third way of accessing those hidden FP APIs: Apparat. So you can use Alchemy, [...]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:12:"67.205.2.138";s:10:"user_agent";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.0.4";s:8:"referrer";s:0:"";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:46:"http://blog.zarate.tv/2008/12/05/want-it-fast/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:11:"/xmlrpc.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"TU53fkWjtW4AACMtFzoAAAAK";s:10:"SCRIPT_URL";s:11:"/xmlrpc.php";s:10:"SCRIPT_URI";s:32:"http://blog.zarate.tv/xmlrpc.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:12:"CONTENT_TYPE";s:8:"text/xml";s:15:"HTTP_USER_AGENT";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.0.4";s:14:"CONTENT_LENGTH";s:3:"312";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:12:"67.205.2.138";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:38:"/home/zarate/blog.zarate.tv/xmlrpc.php";s:11:"REMOTE_PORT";s:5:"45862";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:11:"/xmlrpc.php";s:15:"HTTP_CONNECTION";s:5:"close";s:8:"PHP_SELF";s:11:"/xmlrpc.php";s:12:"REQUEST_TIME";s:10:"1296988030";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1296988328.9087";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>URLs out of titles</title>
		<link>http://blog.zarate.tv/2008/12/09/urls-out-of-titles/</link>
		<pubDate>Tue, 09 Dec 2008 12:23:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=444</guid>
		<description></description>
		<content:encoded><![CDATA[I'm in the middle of a project that needs to create URLs from the titles the users define, same for example as blog posts URLs coming from their titles.

This is the typical problem a programmer can easily underestimate and I was close to. At the end of the day you just have to substitute non-English characters, substitute spaces with hyphens and remove symbols and your are good to go, right? Yeah, you wish.

I didn't even try to do it myself, just Googled a little bit and came up with a couple of very easy regexp PHP functions to do the job. <em>Too easy</em>. They were doing the job, but my arachnid sense was telling me something wasn't quite working. 

That's when <a href="http://wordpress.org/">Wordpress</a> came to my mind. I thought nobody better than one of the top blogging platforms to solve the problem. They sure must deal with people from all over the world and they sure must be doing a good job creating URLs from titles. And guess what? WP is Open Source, you can go there and <del datetime="2008-12-09T12:02:17+00:00">steal</del> <del datetime="2008-12-09T12:02:17+00:00">not reinvent the wheel</del> reuse their code. I'm not going to copy here the functions (+200 lines of code), they are in <a href="http://svn.automattic.com/wordpress/trunk/wp-includes/formatting.php">wp-include/formatting.php</a> and are "remove_accents", "seems_utf8", "utf8_uri_encode" and some other code. So, <strong>thanks very much again to the Wordpress guys for sharing</strong>, Open Source rocks.

And this got me thinking about the HUGE amount of time and the HUGE pain in the arse handling different languages is. I was talking to Martin Kleppmann (a fellow developer here in Cambridge) about it and it turns out he just blogged about it: <a href="http://www.yes-no-cancel.co.uk/2008/11/24/i18n-and-social-web-we-still-havent-figured-it-out/">i18n and social web: We still haven’t figured it out</a>. I quote:

<blockquote>i18n has been an issue which software engineers have loved to ignore, because (a) it’s difficult, (b) it’s not cool, and (c) if you’re in North America, you can find enough customers in North America for the first few years, so there isn’t a strong business requirement to work internationally.</blockquote>

Amen. I wonder if whoever created "the computers" 50 or 60 years ago would have thought about the problem back then things would be much easier now. This is the classic example of "<em>let future me take care of a future problem</em>" or "<em>this is not a problem now, go on with it and we'll figure it out later</em>". Well, fast forward 60 years and here we are. Guess what again? Yes, the problem still sucks.

And if you have an application and you think you've done your work regarding i18n, give it a go with Turkish, apparently is the final test: <a href="http://www.codinghorror.com/blog/archives/001075.html">What's Wrong With Turkey?</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>444</wp:post_id>
		<wp:post_date>2008-12-09 13:23:21</wp:post_date>
		<wp:post_date_gmt>2008-12-09 12:23:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>urls-out-of-titles</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="i18n"><![CDATA[i18n]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>You have to give credit where credit belongs</title>
		<link>http://blog.zarate.tv/2008/12/12/you-have-to-give-credit-where-credit-belongs/</link>
		<pubDate>Fri, 12 Dec 2008 09:17:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=464</guid>
		<description></description>
		<content:encoded><![CDATA[Back in 2007 I attended <a href="http://www.madinspain.com/">MadInSpain</a> where there was a nice discussion where 5 of the top heads of Spanish advertising agencies had a chat about the industry.

One of the ideas floating around was that in the rather near future agencies were not going to be able to have specialists on each field. You know: backend, sysadmins, traditional Flash animation, pure ActionScript developers, HTML, CSS, JS, Papervision, Motion Graphics.... The range of things an on-line agency has to do these days is sooo wide that the amount of people involved is huge. But for most of the very specific fields they only have 1 or 2 projects a year. So they face either:

1) Have someone with mixed skills that is not a trully specialist but can work on very different projects all year long or
2) Bring in that specialist who's going to do an amazing job but have him/her without actual work to do for 6 months.

We know #2 is not going to happen, but if they go for #1 they don't get amazing products. Bummer. So what these guys were saying is that, same as off-line agencies contact a TV production company to film an actual TV ad, they will eventually do the same and outsource the production of their ideas to smaller but very specialized studios. <em>I put a great idea, you put a great production, we make a great product</em>. Sounds like a win-win situation for everybody, right? Well, <em>almost</em>.

And here's the little problem: <strong>on-line agencies do NOT give credit</strong>. When you work for them and they win an award, you are not in the picture. You are not even on the credits. Damn, you cannot even publicly say that you were part of that project in your website. And that's unfair. Ok it's their client, ok it's their idea but your ideas go too on the product. <strong>You built it</strong>. I think you should be able to at least add the project to your public portfolio.

So, big bosses of on-line agencies that read this blog: I think it's a very good idea that you outsource production to smaller studios but with one condition: <strong>you have to give credit where credit belongs</strong>. Don't be greedy. ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>464</wp:post_id>
		<wp:post_date>2008-12-12 10:17:18</wp:post_date>
		<wp:post_date_gmt>2008-12-12 09:17:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>you-have-to-give-credit-where-credit-belongs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="the-industry"><![CDATA[the industry]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fancy AS3 Vector class</title>
		<link>http://blog.zarate.tv/2008/12/16/fancy-as3-vector-class/</link>
		<pubDate>Tue, 16 Dec 2008 19:09:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=476</guid>
		<description></description>
		<content:encoded><![CDATA[It was about time for ActionScript and finally Flash player 10 comes with <em>vectors</em> or typed arrays. Very simple stuff, it's just an array in which all of its members have the same type. We had this for years both in MTASC and haXe because adds an extra layer of security at compile time against silly mistakes, so it's nice having it as part of AS3 too.

But with security and performance improvements come some restrictions. From the <a href="http://help.adobe.com/en_US/AS3LCR/Flash_10.0/Vector.html">docs</a>:

<blockquote>* A Vector is a dense array. Unlike an Array, which may have values in indices 0 and 7 even if there are no values in positions 1 through 6, a Vector must have a value (or null  ) in each index.
* A Vector can optionally be fixed-length, meaning the number of elements it contains can't change.
* Access to a Vector's elements is bounds-checked. You can never read a value from an index greater than the final element ( length - 1 ). You can never set a value with an index more than one beyond the current final index (in other words, you can only set a value at an existing index or at index [length] ).</blockquote>

Careful with them because we are so used to the <em>loose</em> Array that most likely we are going to forget these limitations.

Also I'm liking a lot mixing the Vector class with the new for each loop. Like this:

[code lang="actionscript"]var wadusList:Vector.<Wadus>;

for each(var w:Wadus in wadusList){
	// do something with w
}[/code]

Short, fast and strictly typed. I bet that <a href="http://tink.ws/blog">the people that was casting even Strings in for loops</a> love this. I know I am and I also know I'm going to get rid of 99% of my Arrays.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>476</wp:post_id>
		<wp:post_date>2008-12-16 20:09:09</wp:post_date>
		<wp:post_date_gmt>2008-12-16 19:09:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fancy-as3-vector-class</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[TheOm3ga]]></wp:comment_author>
			<wp:comment_author_email>theom3ga@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://om3.com.es</wp:comment_author_url>
			<wp:comment_author_IP>84.122.4.188</wp:comment_author_IP>
			<wp:comment_date>2008-12-16 20:25:15</wp:comment_date>
			<wp:comment_date_gmt>2008-12-16 19:25:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great! Long live generic programming! I hope it keeps growing this way. The more it looks like C++, the easier it will be for me to get back to Flash :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>AS2 to AS3 tip of the day</title>
		<link>http://blog.zarate.tv/2008/12/19/as2-to-as3-tip-of-the-day/</link>
		<pubDate>Fri, 19 Dec 2008 08:52:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=505</guid>
		<description></description>
		<content:encoded><![CDATA[I haven't seen this anywhere and it's what's helping me out the most: <strong>if you are new to AS3, install the debug version of the player</strong>.

The thing is that the AVM2 is very sensitive to variable types, number of arguments passed to a method, etc. I mean, very, very sensitive. If you mess something up the player just stops without saying a word. Maybe you passed an extra parameter, maybe the method is expecting a parameter and it doesn't get it, maybe you are trying to access a variable that hasn't been initialized yet... whatever it is, the debug version will tell you loud and clear making the mistake very obvious and thus easy to find.

When your application is ready to go don't forget to test it also in the actual player because there's a big performance penalty when using the debug version. That penalty is ok because it's a player only meant for developers, but maybe you are struggling to make an animation fluid and it turns out you are running it in a "slow" environment.

You can get the debug version of any player in the <a href="http://www.adobe.com/support/flashplayer/downloads.html">Flash player's downloads page</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>505</wp:post_id>
		<wp:post_date>2008-12-19 09:52:47</wp:post_date>
		<wp:post_date_gmt>2008-12-19 08:52:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>as2-to-as3-tip-of-the-day</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Linux year has been already</title>
		<link>http://blog.zarate.tv/2009/01/04/the-linux-year-has-been-already/</link>
		<pubDate>Sun, 04 Jan 2009 11:24:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=509</guid>
		<description></description>
		<content:encoded><![CDATA[There's this fairy tail among some Linux geeks that xxxx year is going to be <em>The</em> Linux year. I'm not sure what they are looking for, maybe <a href="http://slashdot.org/article.pl?sid=09/01/03/1754244">a stupid bug that takes down all Window boxes in the world the same day</a>, maybe the UN claiming that Windows is very bad and Linux very good, maybe the Linux desktop adoption rates rocketing sky high... For me, the Linux year has been already. Check out <a href="http://linux.slashdot.org/comments.pl?sid=1066973&cid=26161755">this comment</a> on Slashdot:

<blockquote>People need to get it through their thick skulls that Linux is a kernel for a unix-like operating system. The primary purpose of Linux is not to become a replacement for the Windows desktop, or to become the latest gadget PDA system. Its purpose is not to be a fancy, shiny, eyecandy competitor for OSX. Its purpose is to be an extremely versatile, scalable, and portable kernel for a unix-like operating system.

*Linux has succeeded as the number 1 OS of choice for HPC and supercomputing applications.
*Linux has succeeded as being a very popular OS for Internet-connected servers.
*Linux has succeeded as being the OS of choice for many embedded systems, home entertainment applications and DVR systems.
*Linux has succeeded as a powerful development environment.

Linux has succeeded in so many areas that it would be tedious to list them. Primarily, though - Linux has succeeded far beyond anyone's wildest dreams in its original goal: to be a viable monolithic kernel for x86 systems, so that x86 users can enjoy unix.

Linux is not going away. In fact, since the day GNU/Linux has been available, it has done nothing but grow and increase in usage. And not only has it grown, it's grown wildly... from hacker OS, to mainstream OS, to a laughable nuisance to Microsoft, to a downright huge challenge to Microsoft's vitality in the server market. From where I stand, I've never even seen a dip in its growth. It's only growing more, and it will continue to grow. Linux has succeeded, and will continue to succeed.</blockquote>

I fully agree and I'll add my bit. For me, a key success of Linux is "forcing" compatibility so everybody can use whatever OS the hell they want. I'm a Linux user myself and honest to God I don't give a shit if you want to use Windows, <a href="http://blog.zarate.tv/category/incredibly-annoying-macs/">incredibly annoying Macs</a> or you connect to the Matrix via a mobile phone. But what I really care about is when I get a Word document I cannot open, a video file with a non-free codec, an audio streaming I cannot listen to. That is a problem for me, not if you use Mac or Windows.

And same as a big Firefox success is forcing all websites to follow standards, a big Linux success will be forcing standards on the desktop too: ODF, OGG, SVG, etc. File formats that anyone on any OS can read and write without patents and royalties.

Many people think that only Linux users have this problem with proprietary codecs but do you know that at least the first versions of Windows XP could <strong>NOT</strong> play DVDs? Windows Media Player gave an error and when you asked for help you were taken to a MS' website with a list of partners to <em>buy</em> a DVD player.

Anyway. The Linux year has been already. Linux will continue to grow. And that is very good news not only for Linux users but also to everybody else. Whether they know or not. Whether they care or not. Whether they acknowledge it or not.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>509</wp:post_id>
		<wp:post_date>2009-01-04 12:24:07</wp:post_date>
		<wp:post_date_gmt>2009-01-04 11:24:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-linux-year-has-been-already</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Adobe, make it easy</title>
		<link>http://blog.zarate.tv/2008/12/21/adobe-make-it-easy/</link>
		<pubDate>Sun, 21 Dec 2008 17:38:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=524</guid>
		<description></description>
		<content:encoded><![CDATA[I've always found ABSOLUTELY pointless the registration process to get one of the trials. I might be totally wrong, but I bet my ass that a huge number of registration names are:

1) kshj ksdjhflksdjhf
2) skjdf lskdjhf lksjdhf lskjdhf
3) fuck off

If you offer trials then give them away and that's it, don't force the almost certainly false registration. Why would you want a ton of bogus data in your marketing and sales database? Anyway, previously that was the <em>only</em> annoying thing.

I don't know exactly when Adobe outsourced downloads to Akamai, maybe they did it long ago, but not until recently you need to install either an ActiveX or a Java Applet to get your download. W-T-F??? 

If you want people to try your software for free so they can assess if it's worth buying, <strong>make the process as simple as possible</strong>: open an anonymous FTP account, distribute it via P2P or torrents... if you want more ideas check out any Linux distro downloads page, here's <a href="http://www.ubuntu.com/getubuntu/downloadmirrors">Ubuntu</a>'s.

You are not reducing piracy at all, just bothering legitimate users. It's the same as those stupid threatening ads before a movie when you go the cinema. Think about this: <strong>they are showing anti-piracy ads to people that have already paid</strong>. Nonsense. Plus, the guy that gets a knock off copy has a better user experience because he sees no threats.

If anything, I think Adobe should move to something like this (via <a href="http://www.crunchgear.com/2008/12/16/how-to-successfully-guilt-trip-software-pirates/">Crunchgear</a>, via <a href="http://www.webkitchen.be/2008/12/20/weekly-blend-the-one-with-the-mp4-watch-google-massive-screens-apple-netbook-pirates-and-opening-sequences/">Serge Jespers</a>):

<img alt="" src="http://img530.imageshack.us/img530/665/codersgu6cropoh6.jpg" title="Nice ant-piracy message" class="alignnone" width="559" height="367" />

When I read that <a href="http://www.mikechambers.com/blog/2008/12/04/on-changes-at-adobe/.">Adobe was firing 600 guys</a> there was this bit that caught my attention:

<blockquote>...lower than expected sales of Adobe CS4 (due to the economic situation)...</blockquote>

Ummmm, well, maybe. But where's the auto-criticism? Is it everybody else's fault and not a bit from Adobe? Because I've been reading that <a href="http://www.tink.ws/blog/cs4-trials-available/">CS4 launching campaign hasn't been the best</a>, that <a href="http://wildwinter.blogspot.com/2008/12/version-cue-woes.html">you are forced to buy a software package when you only want a tiny bit</a> and of course the all time favourite of Adobe and other big companies that is <a href="http://aralbalkan.com/918">ripping off customers outside the US</a>.

I agree Adobe can partially blame the economic situation for lower sales, but there're quite a few thing they could do to improve the customer service too.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>524</wp:post_id>
		<wp:post_date>2008-12-21 18:38:13</wp:post_date>
		<wp:post_date_gmt>2008-12-21 17:38:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adobe-make-it-easy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>focusRect, MouseEvent.CLICK and ENTER</title>
		<link>http://blog.zarate.tv/2009/01/07/focusrect-mouseeventclick-and-enter/</link>
		<pubDate>Wed, 07 Jan 2009 22:02:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=589</guid>
		<description></description>
		<content:encoded><![CDATA[I'm not sure what to think about this one. For me it looks like a bug, but maybe there's an explanation out there. Here's the deal: if you set up the <a href="http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/flash/display/InteractiveObject.html#focusRect">focusRect</a> property to null/false (or <a href="http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/flash/display/Stage.html#stageFocusRect">stageFocusRect</a> for that matter) the MouseEvent.CLICK event will <strong>not</strong> be triggered by the keyboard. Yes, that's right, I mean by the keyboard. This is the scenario:

You have an interface with buttons that are accessible via TAB + ENTER and you assign actions as usual using the click event:

[code lang="actionscript"]button.addEventListener(MouseEvent.CLICK,callback);[/code]

If you TAB and ENTER when the button has the focus it works as expected, the event is triggered. Now, the moment you set up focusRect to null, it stops working. You can TAB to the element but when you hit enter nothing happens. 

This is what I'm doing to bypass this limitation:

[code lang="actionscript"]button.addEventListener(KeyboardEvent.KEY_DOWN,callback);

private function callback(e:KeyboardEvent):void{

   if(e.keyCode != Keyboard.ENTER){ return; } // if it's not enter skip actions

   // do your stuff

}[/code]

But I'm getting away with it because my interface only needs to be accessible with the keyboard, no mouse. Should I have to react to both, I'd have to subscribe to both events with different callbacks and call a third function to do the work. Not nice.

By the way, using the FocusManager class is not an option because it belongs to the fl.* package that comes with the Flash IDE only whereas I'm compiling using the Flex SDK.

I hope I'm missing something here.

PS: Somebody, <em>anybody</em>, please, kill MySpace. Forever.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>589</wp:post_id>
		<wp:post_date>2009-01-07 23:02:05</wp:post_date>
		<wp:post_date_gmt>2009-01-07 22:02:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>focusrect-mouseeventclick-and-enter</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[Paul Davey]]></wp:comment_author>
			<wp:comment_author_email>surfmk@ukf.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.mkwindsurfing.com</wp:comment_author_url>
			<wp:comment_author_IP>80.7.21.51</wp:comment_author_IP>
			<wp:comment_date>2009-02-19 17:05:26</wp:comment_date>
			<wp:comment_date_gmt>2009-02-19 16:05:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, I'd really like to know if this problem has been solved?

I've seen an example of the FocusManager class (I'm working in Flash AS3) but it seems a hell of a lot of work to get a simple enter key to work on a button with focus (and without the yellow surround!)

I think there might not be a solution 'cos I've been Googling all day!

With thanks, 

Paul Davey]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>81.101.142.114</wp:comment_author_IP>
			<wp:comment_date>2009-02-20 16:39:49</wp:comment_date>
			<wp:comment_date_gmt>2009-02-20 15:39:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Paul,

I haven't tried anything else, so AFAIK, this is still unresolved, I'm afraid : |]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>175</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen Beattie]]></wp:comment_author>
			<wp:comment_author_email>snbeattie@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>81.98.242.189</wp:comment_author_IP>
			<wp:comment_date>2009-08-28 01:20:46</wp:comment_date>
			<wp:comment_date_gmt>2009-08-28 00:20:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is my fix for an AS1/AS2 movie.  It's a little "hacky" but it seems to do the job.

// -------------------------------------------------------------------------------
// _focusrect key press fix
// -------------------------------------------------------------------------------

keyListener = new Object();
keyListener.onKeyDown = function()
{
	var focusedObjName = Selection.getFocus();
	
	if( Key.getCode() == Key.ENTER )
	{
		var focusedObj = eval(focusedObjName);
		if( focusedObj._focusrect == false ) focusedObj.onPress();
	}
}
keyListener.onKeyUp = function()
{
	var focusedObjName = Selection.getFocus();
	
	if( Key.getCode() == Key.ENTER )
	{
		var focusedObj = eval(focusedObjName);
		if( focusedObj._focusrect == false ) focusedObj.onRelease();
	}
}
Key.addListener( keyListener );]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>614</wp:comment_id>
			<wp:comment_author><![CDATA[Bryan]]></wp:comment_author>
			<wp:comment_author_email>bgabric@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.109.93.146</wp:comment_author_IP>
			<wp:comment_date>2010-03-04 22:14:08</wp:comment_date>
			<wp:comment_date_gmt>2010-03-04 21:14:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you Stephen Beattie you are my new hero. 

Changed it a bit though
keyListener = new Object();
keyListener.onKeyDown = function(){
	if( Key.getCode() == Key.ENTER ){
		enterPressed();
	}
}

function enterPressed(){
	var focusedObjName = Selection.getFocus();
	var focusedObj = eval(focusedObjName);
	if(focusedObj.onPress){
	        focusedObj.onPress();
	}else if(focusedObj.onRelease){
		focusedObj.onRelease();
	}
}

Thanks again.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Flash questions @ StackOverflow</title>
		<link>http://blog.zarate.tv/2009/01/11/flash-questions-stackoverflow/</link>
		<pubDate>Sun, 11 Jan 2009 10:55:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=606</guid>
		<description></description>
		<content:encoded><![CDATA[For those of you that don't know about it, <a href="http://stackoverflow.com/">StackOverflow</a> is the QA (question & answer) website that Joel Spolsky and Jeff Attwood put together (well, mostly Jeff and his team). 

I haven't been very active to be honest (<a href="http://stackoverflow.com/users/5908/z225rate">here I am</a>) but mostly because there's no way I'm popping by the site everyday and not <a href="http://blog.stackoverflow.com/2008/10/tags-and-tags-or-tags/">until recently</a> the RSS feed allowed to search for several tags.

So today I finally created a combined feed for all the Flash platform questions (<a href="http://theflashblog.com/?p=627">whatever Flash platform means</a>):

<a href="http://stackoverflow.com/feeds/tag/as3%20or%20flex%20or%20actionscript%20or%20actionscript3%20or%20flash%20or%20air%20or%20flv">Flash questions @ StackOverflow</a>

If you take a look to the URL you can see the tags "as3", "flex", "actionscript", "flash", "air", "flv" and "actionscript3". You can obviously modify it for your needs.

You might be thinking why the hell do you need yet another source of questions if you already have forums, mailing lists, blogs and such. Well, the SO system has been really well thought, they <strong>do</strong> listen to users' needs and the interface is nice. Besides, there're really good questions and answers:


<a href="http://stackoverflow.com/questions/40622/is-flex-development-without-flexbuilder-realistic">Is Flex development without FlexBuilder realistic?</a>
<a href="http://stackoverflow.com/questions/430347/do-i-need-to-worry-about-concurrency-issues-in-my-flex-air-code">Do I need to worry about concurrency issues in my Flex/AIR code?</a>
<a href="http://stackoverflow.com/questions/269686/flash-and-accessability">Flash and Accessability</a>
<a href="http://stackoverflow.com/questions/427745/desktop-sharing-application-in-flex">Desktop sharing application in Flex?</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>606</wp:post_id>
		<wp:post_date>2009-01-11 11:55:08</wp:post_date>
		<wp:post_date_gmt>2009-01-11 10:55:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flash-questions-stackoverflow</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="air"><![CDATA[air]]></category>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="flash-player"><![CDATA[flash player]]></category>
		<category domain="category" nicename="flex"><![CDATA[flex]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Local variables and scope in AS3</title>
		<link>http://blog.zarate.tv/2009/01/28/local-variables-and-scope-in-as3/</link>
		<pubDate>Tue, 27 Jan 2009 23:43:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=624</guid>
		<description></description>
		<content:encoded><![CDATA[[code lang="ActionScript"]if(wadus){
   var x:int = 8;
} else {
   trace(x); // <-- 0
}[/code]

Yep, that's right. You can trace x in the else branch and you get 0 (I'd expect an error at compile time). This is obviously a simplified case but something like this just happened to me by mistake and took me a while to realize. 

Another example:

[code lang="ActionScript"]function wadus(e:Event):void{

   try{
      // something
   } catch(e:*){
      trace(e); // <- That's the exception, not the parameter!
   }

}[/code]

I'm sure MTASC didn't allow such things, and I miss it (snif, snif). You can read <a href="http://artandlogic.blogspot.com/2008/07/as3-vs-java-local-variable-scope.html">AS3 vs Java Local Variable Scope</a> for more info:

<blockquote>[...] the AS3 compiler takes all the local variables (regardless of depth) and declares that right at the beginning of the function [...] This behavior is similar to the way Flash deals with variables declared later on the timeline, you can reference them before earlier than the declaration because the compiler moves that declaration to the beginning</blockquote>

Yes, it sort of makes sense from a Flash point of view, but I don't like it ¬¬]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>624</wp:post_id>
		<wp:post_date>2009-01-28 00:43:10</wp:post_date>
		<wp:post_date_gmt>2009-01-27 23:43:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>local-variables-and-scope-in-as3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[Brett]]></wp:comment_author>
			<wp:comment_author_email>bg4shaw@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>41.174.9.189</wp:comment_author_IP>
			<wp:comment_date>2009-02-27 21:26:57</wp:comment_date>
			<wp:comment_date_gmt>2009-02-27 20:26:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi I have a problem that I am wondering if you could help with. is it possible to check or even change a variable declared on the timeline in a movie clip from outside that clip in AS3. 

i.e. changing a var declared on the timeline of a child Movie clip. 

trace(my_mc.myTimelineVariable) //null]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Little geeky orgasm</title>
		<link>http://blog.zarate.tv/2009/01/18/little-geeky-orgasm/</link>
		<pubDate>Sun, 18 Jan 2009 18:59:54 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=630</guid>
		<description></description>
		<content:encoded><![CDATA[Oh yes, I have some of those from time to time. And sometimes for the silliest reasons like this one. I needed to find the position of an element inside a Vector and just a second before writing my own routine thought about giving a go to the <a href="http://help.adobe.com/en_US/AS3LCR/Flash_10.0/index.html">reference</a>. Oh boy I'm glad I did:

<a href="http://help.adobe.com/en_US/AS3LCR/Flash_10.0/Vector.html#indexOf()">Vector.indexOf()</a> and <a href="http://help.adobe.com/en_US/AS3LCR/Flash_10.0/Vector.html#lastIndexOf()">Vector.lastIndexOf()</a>.

Whoever did this at Adobe, thank you.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>630</wp:post_id>
		<wp:post_date>2009-01-18 19:59:54</wp:post_date>
		<wp:post_date_gmt>2009-01-18 18:59:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>little-geeky-orgasm</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[TheOm3ga]]></wp:comment_author>
			<wp:comment_author_email>theom3ga@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.om3.com.es</wp:comment_author_url>
			<wp:comment_author_IP>84.122.4.188</wp:comment_author_IP>
			<wp:comment_date>2009-01-18 20:35:32</wp:comment_date>
			<wp:comment_date_gmt>2009-01-18 19:35:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Uhm, indexOf sounds really familiar to me. I'd swear AS2.0 array had a method called indexOf, but looks like it's just my imagination. Where have I used it, then? 

--- After some thinking I remembered that the class String in AS2.0 had both indexOf and lastIndexOf. I was not crazy after all.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[TheOm3ga]]></wp:comment_author>
			<wp:comment_author_email>theom3ga@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.om3.com.es</wp:comment_author_url>
			<wp:comment_author_IP>84.122.4.188</wp:comment_author_IP>
			<wp:comment_date>2009-01-18 20:39:51</wp:comment_date>
			<wp:comment_date_gmt>2009-01-18 19:39:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[By the way, in order to reintroduce myself in the flash "scene" I've just bought Moock's Essential AS 3.0 from amazon (ETA march 4th o_O), hope I read it completely, not like Moock's AS2.0 which is actually full of dust in my bookshelve lol.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The dangers of virtual machines</title>
		<link>http://blog.zarate.tv/2009/02/01/the-dangers-of-virtual-machines/</link>
		<pubDate>Sun, 01 Feb 2009 20:09:58 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=658</guid>
		<description></description>
		<content:encoded><![CDATA[Virtual machines are great, don't get me wrong. For example, I downloaded this weekend the iso of <a href="http://crunchbanglinux.org/">Crunch Bang Linux</a>, an Ubuntu based distro that looks very slick and geeky friendly and instead of installing it on an actual computer I just created a new VM on VirtualBox to get a feeling before going for the real thing. So here the VM is really good because it gives a safe environment to test without risk. (BTW, Crunch Bang might well replace Ubuntu as my main distro in the <strong>very near</strong> future).

BUT using a VM for development adds an extra layer of complexity that can cause trouble as yours truly can testify. Just to put everybody in context, I develop Flash these days on a virtual Windows XP hosted by an Ubuntu box running on an iMac. To be honest, some days I'm amazed that things run at all.

So, for the project I'm about to finish I had to detect a long key press. That's:

- Press & release ESC key: do something
- Press & hold ESC key: do something else

I thought about setting either a timer or a counter when the key goes down and check when it goes up. No rocket science here, right? Added some listeners and to my surprise the UP event was being fired just after the DOWN event even with the key pressed... Long story short: this weird thing only happens on the virtual XP. If I try the same application on the native Linux things behave as expected.

When I first encountered the problem I posted it on StackOverflow (<a href="http://stackoverflow.com/questions/433254/as3-detect-long-key-presses">AS3: Detect long key presses</a>) but couldn't come back to the problem until now. Reviewing the answers this bit put me in the road to find out the real problem:

<blockquote>I guess it's also possible, though unlikely, your keyboard's sending "up" messages to the OS when it shouldn't be</blockquote>

Unlikely as it looked, that was the problem. I'm really happy I didn't waste a lot of time figuring out what was going on, but I reckon this could have been one of those little things that holds you for hours banging your head against the wall.

So kids, be warned about the dangers of virtual machines.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>658</wp:post_id>
		<wp:post_date>2009-02-01 21:09:58</wp:post_date>
		<wp:post_date_gmt>2009-02-01 20:09:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-dangers-of-virtual-machines</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="bugs"><![CDATA[bugs]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ZAudio and ZVideo, skinless AS3 players</title>
		<link>http://blog.zarate.tv/2009/02/04/zaudio-and-zvideo-skinless-as3-players/</link>
		<pubDate>Wed, 04 Feb 2009 15:29:19 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=668</guid>
		<description></description>
		<content:encoded><![CDATA[Yes, I know there are a TON of players out there already, but every time I try to use one I find them either:

a) too complicated to use
b) too complicated to integrate
c) too complicated to skin
d) too complicated
e) any combination of the above

And because I'm a geek and I can, I've come up with ZAudio and ZVideo. What do they offer? Check it out:

- No graphic interface whatsoever. And by interface I mean controls, ZVideo only shows the video itself and ZAudio doesn't even have graphical representation (extends from EventDispatcher).
- Common and <a href="http://code.google.com/p/zcode/source/browse/trunk/as3/tv/zarate/player/iPlayer.as">simple API</a>. Basically they hide all the NetStream/NetConnection/SoundChannel complications and offer simple methods such as load(), isPlaying(), play(), pause(), and common events for loading, finished, etc.

Want to see them in action?

[code lang="ActionScript"]var player:ZVideo = new ZVideo();
player.load("your_video.flv");
addChild(player);[/code]

[UPDATE]

You can see a more real life demo in <a href="http://as3.demo.zarate.tv/players/ZVideoDemo.as">ZVideoDemo.as</a> that compiles to <a href="http://as3.demo.zarate.tv/players/bin/">this</a>. Enjoy Zidane : )

[/UPDATE]

That's it, done. And the code would be exactly the same for ZAudio (without the addChild). Then of course you have to implement your own controls and that's something that you might or might not see as an advantage. I obviously think it is because every damn project has a VERY specific design and then you are on the nightmare of skinning somebody else's code.

They are not perfect yet but I don't think the API is going to change much, maybe some of the events.

You can grab them from <a href="http://zarate.tv/projects/zcode">ZCode</a>'s <a href="http://zcode.googlecode.com/">Google Code repo</a>, package tv.zarate.player.*

Enjoy.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>668</wp:post_id>
		<wp:post_date>2009-02-04 16:29:19</wp:post_date>
		<wp:post_date_gmt>2009-02-04 15:29:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zaudio-and-zvideo-skinless-as3-players</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="zcode"><![CDATA[zcode]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[Freddie]]></wp:comment_author>
			<wp:comment_author_email>webmaster@cristalab.com</wp:comment_author_email>
			<wp:comment_author_url>http://cristalab.org/</wp:comment_author_url>
			<wp:comment_author_IP>190.253.184.80</wp:comment_author_IP>
			<wp:comment_date>2009-02-05 08:17:16</wp:comment_date>
			<wp:comment_date_gmt>2009-02-05 07:17:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A little example embedded here will really help.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>81.101.142.114</wp:comment_author_IP>
			<wp:comment_date>2009-02-05 12:36:16</wp:comment_date>
			<wp:comment_date_gmt>2009-02-05 11:36:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Freddie!

Not sure I understand. Do you mean adding to the post a SWF with the players working and full code example? It's a good idea plus I also have to start properly documenting ZCode, but as usual time is scarce :|]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; NetStream, IOErrorEvent, URLRequest and other woes]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2009/02/20/netstream-ioerrorevent-urlrequest-and-other-woes/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.37.130</wp:comment_author_IP>
			<wp:comment_date>2009-02-20 16:36:16</wp:comment_date>
			<wp:comment_date_gmt>2009-02-20 15:36:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] been adding some details to ZVideo for this tuto in Cristalab and I&#8217;ve found a couple of oddities regarding the NetStream [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Zarate goes Crunch Bang</title>
		<link>http://blog.zarate.tv/2009/02/08/zarate-goes-crunch-bang/</link>
		<pubDate>Sun, 08 Feb 2009 13:58:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=690</guid>
		<description></description>
		<content:encoded><![CDATA[No, I haven't broken my leg or anything like that, I've installed <a href="http://crunchbanglinux.org//">Crunch Bang Linux</a>. I was having some problems with my Ubuntu and because the next version is not going to be released until April I decided to go for a change. Some of the alternatives were Fedora and Debian, but both are also in Beta now.

I'm not sure where I heard about Crunch Bang but got the Live CD, tried it for 3-4 days on a VM and yesterday finally decided to give it a go. Although the change is big, is not massive because CB is based on Ubuntu. So, same package manager, same forums, things go pretty much on the same folders, etc.

What has really, really surprised me is the desktop. CB doesn't use KDE or Gnome, it uses <a href="http://icculus.org/openbox/">OpenBox</a>, a very lightweight and minimalistic window manager. Check it out:

<a href="http://img22.imageshack.us/img22/7344/zdesktopvm2.jpg"><img alt="" src="http://img22.imageshack.us/img22/7344/zdesktopvm2.jpg" title="Zarates desktop featuring Crunch Bang Linux and OpenBox" class="alignnone" width="800" height="500" /></a>

Sweeeeeeeeeet. You might be thinking though that the desktop looks very clean just because this is a fresh installation, right? Nope. It's stays like that <strong>forever</strong>. How? Simple, you can't have anything on it. I mean, the Desktop folder exists but its content is just not displayed. I have to say that I usually have a rather tidy desktop anyway, but opening up your machine and getting nothing but a beautiful picture is just relaxing. And yes, you can do that by yourself, but I don't know many people with that amount of self-discipline. So the pile of temp files and rubbish is still there, but hidden.

Next one. Do you see the start menu? Don't look for it, you can't see it. It's hidden under your right click mouse button and it looks like this:

<a href="http://img26.imageshack.us/img26/689/zdektopmenuxj8.jpg"><img alt="" src="http://img26.imageshack.us/img26/689/zdektopmenuxj8.jpg" title="OpenBoxs Start menu" class="alignnone" width="800" height="500" /></a>

You can of course edit it to your needs, something that I'm yet to do. And last but not least, have you noticed those statistics on the top-right corner? That's <a href="http://conky.sourceforge.net/">Conky</a> , a very light, very configurable system monitor. And look at those little beauties below: tons of shortcuts ready to use! If you are a shortcut-aholic like I am, you'll be delighted.

So far so good, although I'm sure it will annoy me at some point. Now I have to finish the installation (this has been a <em>full</em> re-installation, usually isn't, but I'll talk about my experience with Linux installations other day) and I also have yet to discover what I've lost during the migration. Because no matter how many systems I've reinstalled in my life, I always forget to backup something. If you hear me screaming in a month, now you know why.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>690</wp:post_id>
		<wp:post_date>2009-02-08 14:58:36</wp:post_date>
		<wp:post_date_gmt>2009-02-08 13:58:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zarate-goes-crunch-bang</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>I&#039;m not the Photoshop master</title>
		<link>http://blog.zarate.tv/2009/02/15/im-not-the-photoshop-master/</link>
		<pubDate>Sun, 15 Feb 2009 18:05:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=487</guid>
		<description></description>
		<content:encoded><![CDATA[This is a discussion I've had many times and I think I never make my point clear enough, so I'll write it down and update as necessary.

Here's the deal. If you are a developer (either Flash or backend, but specially Flash) and you are getting the design from someone else, chances are you'd get a PSD, FLA, Fireworks or an Illustrator file, depending on your designer's tool of choice. Now you have to make your magic happen and bring the project to life. You are <em>supposed</em> to slice it up and I think that's a mistake.

Who's the Photoshop <strong>master</strong>? Who spends ALL DAY with it? Who's going to be <strong>faster</strong> and <strong>better</strong> at slicing up an interface? The developer or the designer?

Sure, I know enough Photoshop to do it myself, but I think that would not make the most out of my time. My time is better spent on building the actual interface, i.e, <strong>programming</strong>. If I have to slice up an interface we win a bad <em>slicer</em> and we lose a (hopefully good) programmer.

The key to a good designer-programmer relationship is communication because creating useful assets is not difficult. Here are some of my guidelines:

<ul>
	<li>Think about liquid layout. Is it needed? Most of the times it is, so please provide a sample of the interface at both minimum and maximum size so I can see what elements are resized and how.</li>
	<li>Slice the elements that need resizing either for 9-slice or 3-slice. If not working with a FLA file, create an actual file for each slice.</li>
	<li>Create elements with exact size.</li>
	<li>Use meaningful and consistent names for elements.</li>
	<li>Provide some guidelines for real life data. For example, what happens if the text of a button doesn't fit? Do I crop and add "...", do I make it multiline or do I make it a marquee?</li>
	<li>Logos are very sensitive design elements, please provide them with what <strong>you</strong> (the designer) think it's a good balance between quality and weight.</li>
	<li>Don't forget the font files, you always do.</li>
	<li>If working with an FLA file:</li>
<ul>
	<li>Always position the elements with 0,0 on the top-left corner (unless they have to be scaled from the center)</li>
	<li>Avoid using stroke on elements that have to be resized.</li>
	<li>Position elements in exact pixels</li>
</ul>
</ul>

Now, is this asking for too much? Do you have any others? Designers, do you want to rant about developers? #1 rule for programmers is:

<strong>Follow the design to the pixel whenever possible</strong>

Which is something I always try and feel guilty about when I don't :|]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>487</wp:post_id>
		<wp:post_date>2009-02-15 19:05:33</wp:post_date>
		<wp:post_date_gmt>2009-02-15 18:05:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>im-not-the-photoshop-master</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="the-industry"><![CDATA[the industry]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[Andrés Karp]]></wp:comment_author>
			<wp:comment_author_email>andreskarp79@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.andreskarp.es</wp:comment_author_url>
			<wp:comment_author_IP>84.120.167.213</wp:comment_author_IP>
			<wp:comment_date>2009-02-15 21:42:19</wp:comment_date>
			<wp:comment_date_gmt>2009-02-15 20:42:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, I do prefer the websites with fireworks and then with a standard layout. And there just pass it to the programmer, when the graphic idea is well-defined and there are no major surprises. Sorry for my english("google translate :P ").]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[Shimoda]]></wp:comment_author>
			<wp:comment_author_email>shimoda@me.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>88.2.101.36</wp:comment_author_IP>
			<wp:comment_date>2009-02-16 09:41:38</wp:comment_date>
			<wp:comment_date_gmt>2009-02-16 08:41:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The problem is most designers don't know where and how to slice, and -what's even worse- don't have any interest in learning so. That is, they'll throw your guidelines in your face.

I guess slicing is not cool enough for designers, or at least that's my experience.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[Iván]]></wp:comment_author>
			<wp:comment_author_email>ivangajate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yporqueno.es</wp:comment_author_url>
			<wp:comment_author_IP>83.61.19.154</wp:comment_author_IP>
			<wp:comment_date>2009-02-16 12:21:47</wp:comment_date>
			<wp:comment_date_gmt>2009-02-16 11:21:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I always say: The site is finished, but you (designer) have to put some stops() into the animations you want not to animate, or some gotoAndStop() in some frame. No UH? You have not finish your work. Simply.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[eyeclipse]]></wp:comment_author>
			<wp:comment_author_email>eyegraphic@eyegraphic.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.spacecollective.org/eyeclipse</wp:comment_author_url>
			<wp:comment_author_IP>212.230.47.240</wp:comment_author_IP>
			<wp:comment_date>2009-02-17 13:10:04</wp:comment_date>
			<wp:comment_date_gmt>2009-02-17 12:10:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Flash Catalyst comes to improve this relation (I hope)
Personally, i prefer to send the fla file to the designer, where i can control the scale9 feature, animations and vector grafics (and effects).
Good post :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>3D transitions</title>
		<link>http://blog.zarate.tv/2009/02/10/3d-transitions/</link>
		<pubDate>Tue, 10 Feb 2009 10:22:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=714</guid>
		<description></description>
		<content:encoded><![CDATA[Please note that <strong>this is barely more than a proof of concept</strong>, don't copy-paste the code in a real project because I haven't tested it much, plus I have very little 3D experience. More than ever, <strong>use at your own risk!</strong>

[/LAME DISCLAIMER]

One of the benefits of being a freelance is that between projects you get some free time and once you've run out of fresh episodes of <a href="http://scrubs-tv.com/">Scrubs</a> and new entries in Google Reader, you feel guilty of being a lazy ass and then you <em>have</em> to go the computer and code stuff. This is the result.

Don't know exactly where I saw a nice 3D transition in a video and thought "<em>that looks cool, I should be able to do that using Papervision</em>". 

*** THE IDEA:

1) Create a one-line-of-code-extremely-easy-to-use library of 3D transitions for DisplayObjects (images, text, whatever). 

2) It should be pretty easy to extend so any programmer without much knowledge of 3D can create custom transitions.

*** THE PROOF OF CONCEPT:

You can see it working <a href="http://as3.demo.zarate.tv/transitions/bin/">here</a>. I've achieved #1, this is the code you need to create the transition (once the image has been loaded):

[code lang="actionscript"]Transition3D.Wadus(loader,10,10);[/code]

Simple, uh?

The big deal though is #2, make it easy to extend. You can see the initial code in the <a href="http://zcode.googlecode.com/svn/trunk/as3/tv/zarate/demo/transitions/">SVN</a>, the important stuff happens in <a href="http://zcode.googlecode.com/svn/trunk/as3/tv/zarate/transitions/Transition3D.as">Transition3D.as</a>. The code should speak for itself, but probably doesn't, so again the idea is:

1) Provide a method that you feed a DisplayObject to and returns a <a href="http://docs.pv3d.org/org/papervision3d/view/BasicView.html">BasicView</a> instance (that has embedded viewport, renderer, scene and camera) plus an array of <a href="http://docs.pv3d.org/org/papervision3d/objects/primitives/Plane.html">planes</a>, each of them with a slice of the original object.

2) Once you get the 3D scene in place and a reference to the pieces, it's your time to shine. I've done 2 very simple animations using <a href="http://www.gskinner.com/libraries/gtween/">GTween</a> just to prove the point, but you can go as wild or keep it as simple as you want or need.

-----

Now there would be a million things to do:

1) Being able to pass a BasicView instance because you don't need a new 3D scene for each image. Reusing a scene would save performance.

2) Create a ton of different transitions and be able of parametrizing them further than the number of columns and rows. Also there is no reason to keep it square, could we do awkward shapes? 

3) Make it dispatch events so you know when the transition has finished or at which point it is. Thinking about this, might be worth extending GTween directly?

4) I'm using PPV at the moment but for no particular reason, is it worth putting in place some architecture to allow other 3D engines such as <a href="http://away3d.com/">Away3D</a>?

5) Review the process from a 3D expert point of view, maybe I'm doing nonsense craziness.

From here onwards I really don't know what to do. As I say, I'm by no means a 3D guy so I'm probably not the one to move the project forwards.  Anyone interested? I'd more than happy to put the code in an independent library outside <a href="http://zarate.tv/projects/zcode">ZCode</a> if that helps.

And last but not least, thanks to both <a href="http://www.xleon.net/">XLeon</a> and <a href="http://www.ventdaval.com/">Cay</a> for helping me out : )]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>714</wp:post_id>
		<wp:post_date>2009-02-10 11:22:06</wp:post_date>
		<wp:post_date_gmt>2009-02-10 10:22:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3d-transitions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="3d"><![CDATA[3d]]></category>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="zcode"><![CDATA[zcode]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NetStream, IOErrorEvent, URLRequest and other woes</title>
		<link>http://blog.zarate.tv/2009/02/20/netstream-ioerrorevent-urlrequest-and-other-woes/</link>
		<pubDate>Fri, 20 Feb 2009 15:36:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=752</guid>
		<description></description>
		<content:encoded><![CDATA[I've been adding some details to <a href="http://blog.zarate.tv/2009/02/04/zaudio-and-zvideo-skinless-as3-players/">ZVideo</a> for <a href="http://www.cristalab.com/tips/player-de-video-y-audio-en-actionscript-3-zvideo-y-zaudio-c68917l/">this tuto in Cristalab</a> and I've found a couple of oddities regarding the NetStream object. First, mandatory link to the reference of <a href="http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/flash/net/NetStream.html#play()">NetStream.play()</a> where we can read:

<blockquote>If the video file can't be found, the netStatus event is dispatched</blockquote>

Ok, that sounds great and indeed works, but then, <strong>when and why is the IOErrorEvent dispatched</strong>? I'd have thought it would be dispatched precisely when the FLV can't be found.

Moving on. The very same method, a little below:

<blockquote>...arguments — The location of the video file to play, as a URLRequest object or a string</blockquote>

But whenever I try to use an URLRequest object instead of a simple string, nothing happens. No events fired, nothing. <a href="http://www.sidedev.net/">Joseba</a> pointed out that it might be an error on the docs, but at least Flex 3.2 compiler doesn't complain and Flash player 10 doesn't throw any exception.

More. Why do we need a <a href="http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/flash/net/NetStream.html#client">client object</a> to listen to some events (<a href="http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/flash/net/NetStream.html#event:onMetaData">onMetaData</a>) but not to others (<a href="http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/flash/net/NetStream.html#event:netStatus">netStatus</a>)?

Metadata, interesting stuff uh? Well not so much because <strong>it doesn't follow any standard</strong>. You want to know the size of your video? You wait for the metadata to come and then you realize that the information depends on the software used to encode the video. That means a video from Youtube has different metadata than a video from DailyMotion. Wouldn't be great having a standard for metadata? Couldn't Adobe force this somehow? At least width, height and duration. Then let them add anything they want, but at least that information should be always present.

<strong>Extra ball</strong>: when I was looking for open bugs related to these issues I've found this classic: <a href="https://bugs.adobe.com/jira/browse/FP-1194">NetStream / Progressive download is not resolving relative URLs in the expected way</a>:

<blockquote>When using progressive download (FLV), NetStream's .play(url) method is not resolving relative URLs in the expected way. Instead of being based off the HTML's embed location and reading the "base" param, it uses the location of the SWF file trying to load it. </blockquote>

This has happened to every Flash developer on Earth. Why paths for external assets are always relative to the HTML page BUT not for videos?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>752</wp:post_id>
		<wp:post_date>2009-02-20 16:36:11</wp:post_date>
		<wp:post_date_gmt>2009-02-20 15:36:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>netstream-ioerrorevent-urlrequest-and-other-woes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>fcsh doesn&#039;t realize an embedded css has been updated</title>
		<link>http://blog.zarate.tv/2009/02/23/fcsh-doesnt-realize-an-embedded-css-has-been-updated/</link>
		<pubDate>Mon, 23 Feb 2009 11:26:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=775</guid>
		<description></description>
		<content:encoded><![CDATA[Just found this one. If you are compiling using fcsh from Flex SDK 3.2 (read <a href="http://blog.zarate.tv/2008/12/07/theres-something-called-flex-compiler-shell/">here</a> if you are not) be warned that if you update an embedded css (passed using -defaults-css-files) fsch doesn't realize and throws:

<blockquote>Nothing has changed since the last compile. Skip...</blockquote>

To bypass this you can either a) do a dummie update to any of the as or mxml files or b) use the standard (but damn slow) mxmlc compiler that works as expected.

I've opened <a href="https://bugs.adobe.com/jira/browse/SDK-19462">a bug with the same title</a>, hopefully this will get fixed at some point in the future.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>775</wp:post_id>
		<wp:post_date>2009-02-23 12:26:28</wp:post_date>
		<wp:post_date_gmt>2009-02-23 11:26:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fcsh-doesnt-realize-an-embedded-css-has-been-updated</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="flex"><![CDATA[flex]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>HippoHX 0.5 released</title>
		<link>http://blog.zarate.tv/2009/02/24/hippohx-05-released/</link>
		<pubDate>Tue, 24 Feb 2009 20:23:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=779</guid>
		<description></description>
		<content:encoded><![CDATA[A rather painful release of <a href="http://hippohx.com/">HippoHX</a> is out there for you to enjoy. It has taken me longer than I expected, of course, but all in all, I think it's a good release. Especially because:

<ul>
	<li>The first version of the help file is in place. As I've said before, <a href="http://blog.zarate.tv/2008/10/07/documenting-sucks/">documenting takes a long time and it's not funny</a>, but as a software developer you have to go through it if you want people to try what you do. I hope it's a good starting point.</li>
	<li>I've improved quite a bit usability details on the GUI so now it's even simpler to use.</li>
	<li>Basic integration with <a href="http://www.haxevideo.com/">haXeVideo</a>. That means that you can have an application running off a CD plus no internet connection and still allow users to record themselves through webcam and mic. If this doesn't sound like a big deal to you, think for example about e-learning apps for languages. You can allow your students to record while they practice pronunciation.</li>
</ul>

Haven't decided yet what's going to make it for the next release, but I fancy giving a go to SQLite integration. However, what I'd really, really, really want to get rid of is some very tiny-but-still-annoying issues on SWHX and Systools that IMHO prevent HippoHX to be ready for the masses. The problem is my C is not up to the challenge and I'm not sure if Nicolas, Ian or Lee have time to do it. Who knows, it might be the kick in the butt that I need to learn the basics of C, stop whining and do the job myself.

Anyway, if you want to try something different from AIR, Zinc or Shu, give <a href="http://hippohx.com/">HippoHX</a> a spin. Ideas, contributors, patches and general feedback more than welcome.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>779</wp:post_id>
		<wp:post_date>2009-02-24 21:23:35</wp:post_date>
		<wp:post_date_gmt>2009-02-24 20:23:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hippohx-05-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hippohx"><![CDATA[hippohx]]></category>
		<category domain="category" nicename="open-source"><![CDATA[open source]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; Playing with Firefox&#8217;s SQLite bookmarks]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2009/03/04/playing-with-firefoxs-sqlite-bookmarks/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.37.130</wp:comment_author_IP>
			<wp:comment_date>2009-03-04 13:20:59</wp:comment_date>
			<wp:comment_date_gmt>2009-03-04 12:20:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] I said in the previous post, I wanted to add SQLite support to HippoHX. So far, so good: the AS3 client API is already on SVN [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Playing with Firefox&#039;s SQLite bookmarks</title>
		<link>http://blog.zarate.tv/2009/03/04/playing-with-firefoxs-sqlite-bookmarks/</link>
		<pubDate>Wed, 04 Mar 2009 12:20:53 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=797</guid>
		<description></description>
		<content:encoded><![CDATA[As I said in the <a href="http://blog.zarate.tv/2009/02/24/hippohx-05-released/">previous post</a>, I wanted to add SQLite support to HippoHX. So far, so good: the AS3 client API is already on SVN and working. haXe and AS2 client APIs are still to come, and so does the mandatory demo. Doing demos is similar to documenting, a pain in the butt. I never find a <em>nice</em> example and when I think of one, most of the times I don't go for it because fancy = long time.

However, still wanted to do something nice with the SQLite demo and luckily for me I remembered that since Firefox 3 bookmarks are stored using a local SQLite database. Reading your bookmarks from a Flash app sounds like a nice demo, right? <strong>¬¬</strong>

First, you have to find where the data is stored. A quick Google search comes up with the name of the file: places.sqlite. The first problem I found was that that file is stored in your profile folder, but the name of your profile folder is random for security reasons. So I either had to:

1) Find a cross-platform way of finding the folder for the current user.
2) Search for the file in the user folder.

#2 triggered an old idea: adding search capabilities to HippoHX's API. Back in September there was <a href="http://lists.motion-twin.com/pipermail/haxe/2008-September/019747.html">some discussion</a> about this in haXe's mailing list but I wasn't completely happy with Michael Oster's solution, so I've implemented my own search method based on regular expressions (File.search() is on SVN now).

Now that I can find where the file is, it's time to display its content. First problem: you cannot open the file if Firefox is opened at the same time. Sort of makes sense because at the end of the day places.sqlite is only a file, so whoever is using it needs to lock it down to guarantee consistency. Ok, so if we get an error while accessing it, let's just make a copy and access the copy instead.

Ok, we are getting somewhere. Next, what's the structure of the database? You might think that because it's an Open Source project you are going to find the schema of the database in a quick Google search right? <strong>Wrong</strong>. I still haven't been able to find it. Ok, let's just move on and finish the damn tutorial, shall we? Tell you what, let's just open the db through the command line and dump it to a text file. Here I come: fire up the console in my Linux box:

[code lang="bash"]sqlite places.sqlite
sqlite> SELECT * FROM moz_bookmarks;
sqlite> SQL error: database is locked[/code]

Shit, forgot FF is opened. Let's close FF, start again and:

[code lang="bash"]Unable to open database "places.sqlite": file is encrypted or is not a database[/code]

Say <em>what</em> now? If FF is opened I cannot access it, if FF is closed, the file is encrypted? Oh boy. Googled again until I found <a href="http://forums.mozillazine.org/viewtopic.php?t=655853">this</a>:

<blockquote>The windows version seems to work</blockquote>

Let's boot up virtual XP, install SQLite, find the file and finally I can access it on the command line! For some odd reason I still don't know, the file is encrypted on Linux but not on Windows....

Aaaaaaaaaaaaaanyway, want to get some meaningful info out of your bookmarks? Try this:

[code lang="sql"]SELECT moz_bookmarks.title,moz_places.url FROM moz_bookmarks LEFT JOIN moz_places WHERE moz_bookmarks.fk = moz_places.id AND moz_bookmarks.title != "null" AND moz_places.url LIKE "%http%";[/code]

So, what have we learnt today? <strong>Stick to the crappy tutorials!</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>797</wp:post_id>
		<wp:post_date>2009-03-04 13:20:53</wp:post_date>
		<wp:post_date_gmt>2009-03-04 12:20:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>playing-with-firefoxs-sqlite-bookmarks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="hippohx"><![CDATA[hippohx]]></category>
		<category domain="category" nicename="open-source"><![CDATA[open source]]></category>
		<category domain="category" nicename="sql"><![CDATA[sql]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[anonymous]]></wp:comment_author>
			<wp:comment_author_email>anon1124@nowhere.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.15.103.12</wp:comment_author_IP>
			<wp:comment_date>2009-03-05 18:02:59</wp:comment_date>
			<wp:comment_date_gmt>2009-03-05 17:02:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The file is not really encrypted on a Linux installation because it the data can be viewed in cleartext by "cat places.sqlite".]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57</wp:comment_id>
			<wp:comment_author><![CDATA[m00dimus]]></wp:comment_author>
			<wp:comment_author_email>m00dimus@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.dc405.org</wp:comment_author_url>
			<wp:comment_author_IP>167.161.101.101</wp:comment_author_IP>
			<wp:comment_date>2009-03-05 18:11:01</wp:comment_date>
			<wp:comment_date_gmt>2009-03-05 17:11:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[try "sudo sqlite3 places.sqlite" to troublesheet admin permissions and sqlite version issues. - m00dimus]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>81.101.142.114</wp:comment_author_IP>
			<wp:comment_date>2009-03-05 18:44:57</wp:comment_date>
			<wp:comment_date_gmt>2009-03-05 17:44:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi to both : )

If the file is not really encrypted, then I understand even less the error.

And thanks m00dimus, might be a good idea for the *nix demo.

Thanks!

J]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67</wp:comment_id>
			<wp:comment_author><![CDATA[neal_s]]></wp:comment_author>
			<wp:comment_author_email>neal.a.m.stewart@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>142.167.194.74</wp:comment_author_IP>
			<wp:comment_date>2009-03-18 20:13:28</wp:comment_date>
			<wp:comment_date_gmt>2009-03-18 19:13:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://www.forensicswiki.org/index.php?title=Mozilla_Firefox_3_History_File_Format

Here you go. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[anonymous]]></wp:comment_author>
			<wp:comment_author_email>erlkonig@talisman.org</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>192.188.253.3</wp:comment_author_IP>
			<wp:comment_date>2009-03-21 10:50:26</wp:comment_date>
			<wp:comment_date_gmt>2009-03-21 09:50:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You need to copy the database before opening it, although be aware that the reason it isn't letting you open it is that some write operation may be incomplete.  Using root access get into it is major overkill.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[anonymous]]></wp:comment_author>
			<wp:comment_author_email>erlkonig@talisman.org</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>192.188.253.3</wp:comment_author_IP>
			<wp:comment_date>2009-03-21 11:29:27</wp:comment_date>
			<wp:comment_date_gmt>2009-03-21 10:29:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&gt;&gt; Unable to open database “places.sqlite”: file is encrypted or is not a database 

Try using sqlite3 - using an older version of sqlite on a database from a more recent one can cause that error.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[anonymous]]></wp:comment_author>
			<wp:comment_author_email>erlkonig@talisman.org</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>192.188.253.3</wp:comment_author_IP>
			<wp:comment_date>2009-03-21 11:30:42</wp:comment_date>
			<wp:comment_date_gmt>2009-03-21 10:30:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm finding this SQL handy for script input:

sqlite3 'SELECT (SELECT title FROM moz_bookmarks as other WHERE id = moz_bookmarks.parent) AS folder, moz_places.url, moz_bookmarks.title, (SELECT content FROM moz_items_annos WHERE item_id = moz_bookmarks.id) AS note FROM moz_bookmarks, moz_places WHERE moz_bookmarks.fk = moz_places.id ORDER by url;']]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11348</wp:comment_id>
			<wp:comment_author><![CDATA[Phil]]></wp:comment_author>
			<wp:comment_author_email>postmaster@localhost.localdomain</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.75.24.12</wp:comment_author_IP>
			<wp:comment_date>2011-05-10 08:27:43</wp:comment_date>
			<wp:comment_date_gmt>2011-05-10 07:27:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[On a Mac, using /usr/bin/sqlite3 gives the same error message, but it works fine with sqlite3 from MacPorts.  3.6.12 vs 3.7.6.

So this is just a misleading error message from version incompatibilies.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305012464.6919";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:67:{s:15:"comment_post_ID";s:3:"797";s:14:"comment_author";s:4:"Phil";s:20:"comment_author_email";s:32:"postmaster@localhost.localdomain";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:202:"On a Mac, using /usr/bin/sqlite3 gives the same error message, but it works fine with sqlite3 from MacPorts.  3.6.12 vs 3.7.6.

So this is just a misleading error message from version incompatibilies.";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:12:"173.75.24.12";s:10:"user_agent";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_7) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.30 Safari/534.30";s:8:"referrer";s:72:"http://blog.zarate.tv/2009/03/04/playing-with-firefoxs-sqlite-bookmarks/";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:72:"http://blog.zarate.tv/2009/03/04/playing-with-firefoxs-sqlite-bookmarks/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:4:"Phil";s:10:"POST_email";s:32:"postmaster@localhost.localdomain";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:202:"On a Mac, using /usr/bin/sqlite3 gives the same error message, but it works fine with sqlite3 from MacPorts.  3.6.12 vs 3.7.6.

So this is just a misleading error message from version incompatibilies.";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"797";s:26:"POST_akismet_comment_nonce";s:10:"9892d64e9f";s:18:"POST_bb2_screener_";s:23:"1305012342 173.75.24.12";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"Tcjo70WjtW4AAAwsDR4AAAAD";s:10:"SCRIPT_URL";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:42:"http://blog.zarate.tv/wp-comments-post.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:15:"HTTP_CONNECTION";s:5:"close";s:12:"HTTP_REFERER";s:72:"http://blog.zarate.tv/2009/03/04/playing-with-firefoxs-sqlite-bookmarks/";s:14:"CONTENT_LENGTH";s:3:"399";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:21:"http://blog.zarate.tv";s:15:"HTTP_USER_AGENT";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_7) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.30 Safari/534.30";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:26:"en-GB,en-US;q=0.8,en;q=0.6";s:19:"HTTP_ACCEPT_CHARSET";s:13:"UTF-8,*;q=0.5";s:11:"HTTP_COOKIE";s:0:"";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:12:"173.75.24.12";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:48:"/home/zarate/blog.zarate.tv/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"39992";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1305012463";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305014251.6603";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Error - Success</title>
		<link>http://blog.zarate.tv/2009/03/10/error-success/</link>
		<pubDate>Tue, 10 Mar 2009 07:08:57 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=814</guid>
		<description></description>
		<content:encoded><![CDATA[Right straight to my top 3 most useless GUI errors ever, ladies and gentlemen, Open Box's <em>Error - Success</em>:

<img alt="" src="http://img7.imageshack.us/img7/9533/errorsuccess.png" title="Error - Success" class="alignnone" width="334" height="344" />

I was trying to duplicate a folder in the folder where it already is via Copy & Paste. In most systems you get a "file (copy)" duplicate and that's the case with files in Open Box, but not with folders where you get an error. So I tried to rename it first using the F2 short cut. After some attempts I got the fascinating <em>Error - Success</em> error.

BTW, I'm assuming it's Open Box's fault, but I might be wrong, sorry in advanced if that's the case!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>814</wp:post_id>
		<wp:post_date>2009-03-10 08:08:57</wp:post_date>
		<wp:post_date_gmt>2009-03-10 07:08:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>error-success</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="usability"><![CDATA[usability]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>60</wp:comment_id>
			<wp:comment_author><![CDATA[Cay]]></wp:comment_author>
			<wp:comment_author_email>ventdaval@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.126.108.139</wp:comment_author_IP>
			<wp:comment_date>2009-03-10 10:45:14</wp:comment_date>
			<wp:comment_date_gmt>2009-03-10 09:45:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No eres el unico ^^
http://failblog.org/2008/09/07/error-fail/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The incredibly annoying Flash IDE</title>
		<link>http://blog.zarate.tv/2009/03/15/the-incredibly-annoying-flash-ide/</link>
		<pubDate>Sun, 15 Mar 2009 13:24:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=825</guid>
		<description></description>
		<content:encoded><![CDATA[(A little deviation from the <a href="http://blog.zarate.tv/category/incredibly-annoying-macs/">incredible annoying Mac series</a>)

When I came to the UK in 2006 I was lucky enough to meet a Flash dev who was <em>not</em> using the Flash IDE and was using MTASC + SWFMill + Flash Develop instead. During the last 3 years I've managed to spend 95% of my time using those tools (plus Flex SDK) and use the IDE only to double check a library item, a timeline based animation or some little thing like that. Lucky me.

I'm at the moment helping out the nice guys at <a href="http://www.ustwo.co.uk/">UsTwo</a> with a very nice project and, long story short, had to leave Eclipse for a second and use the IDE again. <em>Brand-new-super-duper</em> Flash CS4 that, if we believe the <em>busy</em> marketing guys at Adobe, <a href="http://www.adobe.com/products/flash/">is</a>:

<blockquote>the industry-leading authoring environment for creating engaging interactive experiences</blockquote>

Well, I have 2 comments for the <em>industry-leading authoring environment</em>:

a) Navigating through the library sets the fla as "not saved".

This has happened for ages. You open a fla file, double click on any of the items on the library and the Flash IDE sets its state to "not saved". This was only a little annoyance when Flash devs were not using source control systems but these days is a killer. You do nothing to the file and if you save it gets marked with a local difference.

I guess this <em>feature</em> was thought as: "we will remember your exact position in the library". <strong>Good idea, bad implementation</strong>. If I open a Word document I can browse it to any page, close, open again and Open Office starts exactly where I left. Please note that <strong>I haven't saved the document</strong> but my editor stills <em>magically</em> knows where I was. The state of the file gets saved probably somewhere on my disk instead of in the file itself. <strong>Good idea, good implementation</strong>. I have not modified the document, I've only browsed it.

And to make things worst, if you are using CS4 to edit a CS3 file you have to use "Save as" to keep the CS3 format and doing so takes you to the stage of your file no matter where you were before. So you have to click on the library to go back where you were and... "not saved". The loop starts again.

b) ActionScript panel gets collapsed if the IDE loses the focus.

This is uber-annoying. Open a fla file, pick up an empty frame, press good'ol F9 for the AS panel, type anything you want, ALT + TAB out, ALT + TAB in back and, <strong>BAM!</strong> when you come back the AS panel is collapsed.

Back in the days I remember this happening but slightly differently: the panel just didn't get the focus instead of being closed. So it was there with all your code, but you had to leave the keyboard, grab the mouse and click on it to keep on with your task.

And it gets worst, you don't even need to TAB out the IDE. Do the same but instead CTRL + ENTER to test your movie and when you close the test movie window, your AS panel is collapsed. <strong>Why, oh thy Lord, why?</strong> It's OK if Adobe doesn't want to fit Eclipse inside the IDE, but this is just too bad.

- - - - - - - 

Things like these, or the other <a href="http://blogs.adobe.com/rgalvan/2009/01/concerns_and_issues_with_flash.html">ton of bugs reported</a>, or <a href="http://www.tink.ws/blog/cross-platform-request-nightmare/">the pain to swap your Win version for a Mac version</a>, or <a href="http://blog.zarate.tv/2008/12/21/adobe-make-it-easy/">the pain of getting a trial</a>, etc. they all add up to lower CS4 sales, not only the credit crunch (although it obviously doesn't help).

Adobe, <em>please</em>, put yourself together and release a rock solid IDE. We all need it!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>825</wp:post_id>
		<wp:post_date>2009-03-15 14:24:48</wp:post_date>
		<wp:post_date_gmt>2009-03-15 13:24:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-incredibly-annoying-flash-ide</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<category domain="category" nicename="bugs"><![CDATA[bugs]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[Shimoda]]></wp:comment_author>
			<wp:comment_author_email>shimoda@me.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.45.247.106</wp:comment_author_IP>
			<wp:comment_date>2009-03-15 21:01:05</wp:comment_date>
			<wp:comment_date_gmt>2009-03-15 20:01:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[So true it hurts.
You could definitely write another rant on how CS4 sucks even more on Macs, and so fulfilling your two posting passions :D

But yeah... Adobe should really do something, or include the spinning rainbow ball as a feature.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>63</wp:comment_id>
			<wp:comment_author><![CDATA[Cay]]></wp:comment_author>
			<wp:comment_author_email>ventdaval@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.126.108.139</wp:comment_author_IP>
			<wp:comment_date>2009-03-16 11:25:05</wp:comment_date>
			<wp:comment_date_gmt>2009-03-16 10:25:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm not in defence of Flash IDE, since I probably hate it more than you do (60% of the time I work within the IDE), but:
1.- I kinda like that those preferences get saved in the file, and not in some hidden place in the HD. I frecuently work in several computers for the same project, and it's quite nice to start right where you left. While I understand the annoyance to get a "not saved" state while just looking at the library, you can always close it without saving ;)
2.- This only happens with "floating" panels... they collapse as soon as they lose focus. If you anchor the action panel, for instance to the bottom of the screen, it will stay there until any of its "sister" panels get focus (don't ever group the action panel with either the "output" or "compiler error" panel). The real annoyance is the focus-after-"test movie" problem, which is not yet fixed (5 years?).

I think the biggest problem of Flash IDE is that its developers don't use it :(]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>HippoHX from sources</title>
		<link>http://blog.zarate.tv/2009/03/23/hippohx-from-sources/</link>
		<pubDate>Mon, 23 Mar 2009 09:26:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=852</guid>
		<description></description>
		<content:encoded><![CDATA[After adding SQLite support on the repo, I realized that it wasn't that easy to create an HippoHX release from sources. Maybe I'm not organizing the repo as I should, but creating a new release is not just checking out the trunk and good to go. I've been using a script to export the trunk to a local folder, compile the demos and make 2 zips, one for Mac one for Win and I wanted to use it as a base, but that script was also tagging the repo (if you had the password, of course) so I had to modify it. Now getting HippoHX from sources is much simpler (get the script, run it, done), but even so, I've added this tuto to the Wiki:

<a href="http://wiki.hippohx.com/HippoHX_from_sources">HippoHX from sources</a>

If you need something that is in the repo only, you download the script, execute it and after a ton of bla, bla, bla on the command line, you get a fresh HippoHX from the repo. Currently it only works on Macs, but I'll try to make a Win version.

Sometime ago I thought about having a proper HippoHX installer but the more I think about it, the less I think it's a good idea. Why do we need software installers in the first place, anyway? Ok, there're several "good" reasons such as finding out previous versions installed, when the software was installed (for trials), finding out if system requirements are met, etc.

Fair enough, but none of those reasons apply to HippoHX. At the moment it's a pretty well self-contained application in a folder and actually I'm going to try to keep it like that for as long as I can. Remember when Firefox (Firebird at that time) was a zip only application? I do and I also know that the last Firefox release on a zip was 0.7. I know that because back in 2004 I used to download it in internet cafes that had Explorer only and I was afraid were full of viruses and crapware. So I always downloaded FF 0.7, unzip and browse (with tabs!) as safe as you could in an internet cafe. 

So here it comes my Obama promise of the day (drumroll, please):

<blockquote>I'll try to keep the installation as a zip only file and as simple as possible. No installer should be ever required by this or any future HippoHX release.</blockquote>

Now of course one thing is what I promise and a different one what I do, but hey, if politicians get away with it, why can't I?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>852</wp:post_id>
		<wp:post_date>2009-03-23 10:26:35</wp:post_date>
		<wp:post_date_gmt>2009-03-23 09:26:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hippohx-from-sources</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hippohx"><![CDATA[hippohx]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Part time cuddler</title>
		<link>http://blog.zarate.tv/2009/03/26/part-time-cuddler/</link>
		<pubDate>Wed, 25 Mar 2009 23:03:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=856</guid>
		<description></description>
		<content:encoded><![CDATA[I usually cuddle in my code, my opening "{" is always in the same line. This is not a trivial decision: Linux vs Windows, Vi vs Emacs, you know, the <a href="http://www.secretgeek.net/age_old_resolved.asp">Holy Wars of the geeks</a>. Choose one side and <a href="http://www.gskinner.com/blog/archives/2008/11/curly_braces_to.html">fight for it till your last drop of Coke</a>.

But it turns that when you are a freelance chances are you are going to find a company that does the opposite as you do. If you cuddle, they don't. If you leave spaces around ifs, fors and parameters, they don't. If you organize your classes like <em>public vars+private vars+public methods+private methods</em>, they organize them like <em>getters/setters+public methods+private methods+private vars+public vars</em>. If you use FlashDevelop, they use TextMate (why would anybody want to use TextMate? Yes, another <a href="http://blog.zarate.tv/category/incredibly-annoying-macs/">Mac phobia</a>).

Now you are in trouble. You want to keep your coding standards because you love them very much. Not only that, you've been <a href="http://www.dandolachapa.com/2006/11/21/mini-as2-coding-hysteria/">bitching about them and you know you are RIGHT</a>. On the other hand, however, you are a freelance (in the company for a short time), <em>they</em> are paying you and, specially, you have to respect the <em>elders</em>.

Luckily for me, I'm the Groucho Marx of the coding standards: <em>these are my principles, and if you don't like them... I have others</em>. You cuddle? I cuddle. You leave spaces around ifs? I leave spaces around ifs. You use TextMate? Whatever, I'll use TextMate. It really isn't such a big deal for me. It takes me around 1 day  to start feeling comfortable so the adopted standards somehow flow. Heck, I even use several standards in the same day: one in the office (the adopted) and another one in the train while coming back home doing my own stuff.

On top of that I use several keyboard layouts. Now in the office I use an English Mac keyboard on a Windows machine. On the train I use a Spanish Dell laptop keyboard and at home I use a Spanish Mac keyboard on a Linux machine. Despite the occasional mistake, I type relatively fast without looking too much. Is the brain flexible or what?

Anyway, coming back to the coding standards, there're only 2 things I can't stand:

1) The lack of free space. For the love of GOD, leave at least one blank line between functions. Remember: <a href="http://blog.zarate.tv/2008/11/27/blank-lines-are-free/">blank lines are free</a>.

2) Inconsistent tabulation. <em>You kidding me?</em> You want to me understand *that* thing you call code? That's not spaghetti code, that's just a bloody mess of instructions to the compiler, I'm surprised any human being or machine makes sense of that.

Anything else I can deal with, but those 2 are my kryptonite, I feel dizzy and weak around them.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>856</wp:post_id>
		<wp:post_date>2009-03-26 00:03:05</wp:post_date>
		<wp:post_date_gmt>2009-03-25 23:03:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>part-time-cuddler</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[code]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Don&#039;t store my password in plain text</title>
		<link>http://blog.zarate.tv/2009/04/01/dont-store-my-password-in-plain-text/</link>
		<pubDate>Wed, 01 Apr 2009 21:18:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=871</guid>
		<description></description>
		<content:encoded><![CDATA[I recently changed my password to access my Dreamhost account panel. Not that I needed to, but it's important enough to change it regularly. Then I didn't log in for 2 months, and just last week I had to but couldn't remember the <em>exact</em> one. Went through the forgot password process, waited for the email and then I went 1/3 puzzled, 1/3 freaked out, 1/3 angry.

There it was my password. My *exact* password. Just as I typed it. Couldn't believe it. Dreamhost, top 10 in hosting companies in the world, is storing plain passwords (or storing them with a 2 way algorithm, which is pretty much the same). Oh boy.

That is just plain wrong. No amount of stupid calls to support saying "I can't get my new password to work" justify something like this. I know we all trade security for comfort here and there, but this is over the line. It really is.

Why would I trust DH employees? There are corrupt policemen, corrupt judges, corrupt school teachers,... do you think the companies you work with are the exception? Somewhere, sometime, you are going to find an incompetent or a bastard. I only use that password for that panel, but tons of people don't, they use the same one everywhere. Guess what? <a href="http://www.google.co.uk/search?q=dreamhost+cracked&ie=utf-8&oe=utf-8&aq=t&rls=com.ubuntu:en-GB:unofficial&client=firefox-a">DH got cracked</a> and bad people got  access to users' passwords. Once you get them, go to the email provider, login with the password and <strong>BAM!</strong> you are in control of somebody else's life. It happened to <a href="http://getsatisfaction.com/godaddy/topics/return_stolen_domains_to_christian_van_der_henst_maestrosdelweb_com_and_forosdelweb_com">Christian van der Henst</a>, he lost control over his GMail account and spent a couple of funny weeks to say the least.

If you are a developer, store the passwords encrypted salting them with a long-fat key. Do you really want the responsibility of keeping that information safe FOREVER? When you backup your server, do you keep that data safe? How safe? Where? In an external drive? CDs? Are you telling me that you are OK storing the email + plain password of your users knowing that the information you keep could cause A LOT of trouble in the wrong hands? <a href="http://www.planetaki.com/">Planetaki</a>, I'm looking at you!

This is my preferred method:

* Click on lost password. Enter email. Click Send.
* Email arrives with link to special page where you can set up a new password. <strong>Please note that the password hasn't changed yet</strong>. The user must have the option to ignore the email in case someone has been messing around with the system. <a href="http://vi.vu">vi.vu</a>, I'm looking at you now!
* User follows link and lands in a form to set up the new password. Previous special link is not valid any more.
* End of story.

If that's the case, I'm not worried as a user because I know that if they make a security mistake or get cracked by whatever the reason, no information is compromised. Likewise, I'm not worried as a developer because I'm not putting anybody at risk.

Recommended lecture: <a href="http://www.codinghorror.com/blog/archives/000953.html">You're Probably Storing Passwords Incorrectly</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>871</wp:post_id>
		<wp:post_date>2009-04-01 22:18:00</wp:post_date>
		<wp:post_date_gmt>2009-04-01 21:18:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dont-store-my-password-in-plain-text</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="security"><![CDATA[security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SVN diff with external tools</title>
		<link>http://blog.zarate.tv/2009/04/12/svn-diff-with-external-tools/</link>
		<pubDate>Sun, 12 Apr 2009 09:25:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=889</guid>
		<description></description>
		<content:encoded><![CDATA[This is pretty much a note to self, but here it goes anyway. I'm comfortable 99% of the time using command line SVN when I'm on Linux, but there's one thing that I really missed and that was using a GUI to diff files, it makes the work soooo much easier.

Since my <a href="http://www.scootersoftware.com/">favorite diff tool</a> has now a Linux version I thought it was about time. It didn't take me long to find out <a href="http://www.scootersoftware.com/vbulletin/showthread.php?t=4152">this post</a>. 

#1 Install Beyond Compare for Linux

#2 Create this script and save into /usr/bin:

[code lang="bash"]#!/bin/bash
/usr/bin/bcompare $6 $7 &
exit 0[/code]

#3  Edit ~/.subversion/config adding this <strong>into the Helpers section</strong> (not at the end of the file):

[code lang="bash"]diff-cmd=/usr/bin/bcompare_svn[/code]

#4 Done. Now when you type svn diff /path/to/file it launches Beyond Compare.

Sweet.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>889</wp:post_id>
		<wp:post_date>2009-04-12 10:25:06</wp:post_date>
		<wp:post_date_gmt>2009-04-12 09:25:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>svn-diff-with-external-tools</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<category domain="category" nicename="source-control"><![CDATA[source control]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The AS3 to AS2 painful comeback</title>
		<link>http://blog.zarate.tv/2009/04/20/the-as3-to-as2-painful-comeback/</link>
		<pubDate>Mon, 20 Apr 2009 15:52:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=895</guid>
		<description></description>
		<content:encoded><![CDATA[Just hit last Friday the first deadline of an AS2 project I've been working on with the guys at <a href="http://ustwo.co.uk/">ustwo</a>. Can't say much about the project (hasn't been released + NDAs) but I can say it was AS2. And it was AS2 because it's FlashLite for a "mobile device" that wasn't a phone.

Having moved to AS3, the comeback is painful. Even though I was using FDT (still not liking it), even though we were using PureMVC, even though we were using MTASC + SWFMill, even though we were using Ant, even though I've been working with really talented people, the comeback to AS2 is still painful. <em>createEmptyMovieClip</em>, <em>attachMovie</em>, no built-in EventDispatcher, no complains at runtime if you pass the wrong parameters to a function... But the one mistake I've made the most is delegates. You remember them? If you don't, I'm sure you aren't doing AS2 any more.

This is what I did at least 3 times in 7 weeks:

[code lang="actionscript"]myButton.onPress = myFunction;[/code]

But what I really <em>wanted</em> to do was:

[code lang="actionscript"]myButton.onPress = Delegate.create(this,myFunction);[/code]

Problem is you don't get an error at compile time (or at runtime for that matter), you just lose the scope and get weird results. Depending on how awake you are at that time of the day it might take you a little longer to realize, swear, fix your bug and move on.

I've heard a lot of developers saying that they wouldn't come back to AS2 for all the money in the world, and I understand that feeling. But there're a TON of opportunities in FlashLite projects already, let alone when <a href="http://slashdot.org/article.pl?sid=09/04/20/1221251">the Open Screen Project starts to pay off</a>. And because I don't see Adobe releasing an AS3 FlashLite player any time soon, we need to suck it up and do AS2.

At least this one was for a good project.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>895</wp:post_id>
		<wp:post_date>2009-04-20 16:52:03</wp:post_date>
		<wp:post_date_gmt>2009-04-20 15:52:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-as3-to-as2-painful-comeback</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as2"><![CDATA[as2]]></category>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Flash Catalyst, what is it for? I mean, really.</title>
		<link>http://blog.zarate.tv/2009/04/27/flash-catalyst-what-is-it-for-i-mean-really/</link>
		<pubDate>Mon, 27 Apr 2009 15:30:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=908</guid>
		<description></description>
		<content:encoded><![CDATA[Almost a month ago Mike Chambers posted a <a href="http://www.mikechambers.com/blog/2009/04/03/kevin-lynchs-web-20-keynote-flash-catalyst-demo/">video featuring Kevin Lynch doing a demo of the coming Flash Catalyst</a>. In roughly 7 minutes he goes from Illustrator to a working Flash application that uses Facebook API to bring some data and display it (including tweens) without a single line of code. Not bad at all for 7 minutes.

So, you can quickly bring to life Illustrator or PSD mock ups using a nice GUI. <a href="http://labs.adobe.com/technologies/flashcatalyst/">Marketing says</a>:

<blockquote>Catalyst is a professional interaction design tool for rapidly creating application interfaces and interactive content without coding</blockquote>

If you see the video, Catalyst also generates MXML files that you can fine-tune in Flex Builder. So a GUI that generates code that you can modify later on. Where I've seen that before? Dreamweaver maybe?

Don't get me wrong, I know you can build good HTML apps using DW but you need to be a <strong>good</strong> developer for that, there is no magic behind the scenes. Good developer, good app. Bad developer, bad app. Tools are just that, tools.

The problem I see with Catalyst or DW is that they make some people <strong>believe</strong> they can create good applications without the knowledge. Not only that, they can create them "rapid" and "without coding". Sounds like marketing BS to me.

I'd like to know what is Adobe expecting people to do with Catalyst, who are they targeting.

** Designers so they can create real life apps without devs? 
** UX guys to create interactive prototypes? 
** Is this suppose to ease the work-flow between designers and developers? I'll quote <a href="http://jessewarden.com/2009/02/working-with-dean-flex-designer-developer-workflow.html">Jesse Warden</a>:

<blockquote>Like in Flash, Designers created MovieClips without a care in the world about how’d you actually code that stuff.  Sometimes, MovieClips weren’t the best way to go about it.  They shouldn’t care, either.  They should be able to design their vision how they see it.  It’s then up to us engineers to code it.  If we need to compromise and iterate, so be it, that’s how it works.</blockquote>

Couldn't agree more. Although projects start at UX/design level, the "real thing", what it is actually going to be compiled, starts from a developer. <strong>I've never, ever used a FLA file from a designer straight away</strong>, I use it to pick up what I need and then paste it into my own FLA (put aside I hate FLA files, but you know what I mean).

So, if you cannot enable someone without knowledge to create something really good (and you cannot), if most likely it doesn't fit into more professional workflows (as Jesse points out) the only thing you have left is interactive UX prototypes, but there're another thousand apps for that already....

I don't know, I might be wrong, but I don't see a great market for Catalyst unless they do something <em>extremely</em> good. Not sure how much is Adobe going to charge for it, maybe nothing and it will be part of the bundles? Does anybody see it as part of their daily routine or has another target that I'm missing?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>908</wp:post_id>
		<wp:post_date>2009-04-27 16:30:48</wp:post_date>
		<wp:post_date_gmt>2009-04-27 15:30:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flash-catalyst-what-is-it-for-i-mean-really</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>96</wp:comment_id>
			<wp:comment_author><![CDATA[eyeclipse]]></wp:comment_author>
			<wp:comment_author_email>eyegraphic@eyegraphic.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.eyegraphic.net</wp:comment_author_url>
			<wp:comment_author_IP>212.230.47.240</wp:comment_author_IP>
			<wp:comment_date>2009-05-04 09:51:39</wp:comment_date>
			<wp:comment_date_gmt>2009-05-04 08:51:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Juan, good doubts :)
From my interaction designer view, actually there are a little group of designer that can skin a developer project, and as 90's, designers are very important to promote de Flash developments to a great audience. I think Catalist is here to solve this issue (don't think designers could do aplications without coding)

For me, Catalyst was a surprise too, but my doubts are focused on the parallel workflow, thing that Catalyst don't solve, I supouse; I mean designer have to prepare UI before the developer puts the behaviours, and after that, it's imposible to turn back to create more graphic assets.

Personally, I believe that Adobe must have an official Flex/Flash skinning aplication lined up with his range of products, and Catalyst should be a good first step.

Cheers from Barcelona!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>No Flex Builder for Linux just yet</title>
		<link>http://blog.zarate.tv/2009/05/03/no-flex-builder-for-linux-just-yet/</link>
		<pubDate>Sun, 03 May 2009 09:13:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=927</guid>
		<description></description>
		<content:encoded><![CDATA[It seems that Ben Forta confirmed 2 weeks ago that <a href="http://gruchalski.com/2009/04/22/flex-builder-3-for-linux-on-hold/">Adobe has stopped the development of Flex Builder for Linux</a>, apparently "there's not enough requisition for the product to continue its development". Bummer.

Asses the demand of Linux versions of different pieces of software is tricky and a chicken 'n' egg situation. <em>There's no Linux version because there're no users or there're no users because there's no Linux version?</em> A mix of both, but FB being based on Eclipse and Eclipse being already crossplatform, what's actually stopping Adobe from doing the port? Could it be that they are not ready to give customer support to Linux users?

Being a Flash developer on Linux is not easy, I can tell you that. But I think the biggest deal at the moment is NOT the lack of an IDE, it's the FLA format. I already have a compiler (Flex SDK) and I already have another IDEs (FDT, even Scite) but when I get a FLA file from a designer I'm screwed, there's <strong>nothing</strong> on Linux to handle it.

I'd rather have Adobe investing time on the <a href="http://www.moock.org/blog/archives/000269.html">XFL format</a> (ZIP & XML based, easier to edit from any platform) rather than investing on Flex Builder for Linux. If there's an open format that the super-geeks can play with, I'm sure sooner or later they will come up with an editor for Linux. See gTalk for example, no Mac or Linux official client (boooo), but there are a ton of Jabber clients already (yay!), so no big deal. [Talking about formats, <a href="http://tech.slashdot.org/article.pl?sid=09/05/02/199203&from=rss">Office 2007 SP2 implements ODF support</a> and even allows to set it up as its default format. Great. News. Indeed.]

Anyway, if this is a big deal for you and you want to be heard, there's a <a href="http://bugs.adobe.com/jira/browse/FB-19053">bug</a> opened, vote for it.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>927</wp:post_id>
		<wp:post_date>2009-05-03 10:13:24</wp:post_date>
		<wp:post_date_gmt>2009-05-03 09:13:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>no-flex-builder-for-linux-just-yet</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<category domain="category" nicename="flex"><![CDATA[flex]]></category>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The HTC Magic disappointment</title>
		<link>http://blog.zarate.tv/2009/05/07/the-htc-magic-disappointment/</link>
		<pubDate>Thu, 07 May 2009 10:31:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=938</guid>
		<description></description>
		<content:encoded><![CDATA[Mobile-wise, I'm from the past. Is not that my Nokia is 3 years old, has no colours, no camera, no browser, no WiFi, no nothing, the problem is that it has dust between the screen and the plastic cover and it plain sucks.

I've been waiting for quite a long time for an all-in-one device that should enable me to browse, email, listen to music and take some pictures of my drunk friends, no rocket science required. The obvious choice would be the iPhone, but I'm so sick of Apple's closeness that I just can't think about it (<a href="http://www.macnn.com/articles/09/05/04/app.store.rules.to.change/">rejecting an app on the AppStore because a top-less in page 3</a>, WTF?).

So, I've been waiting for the HTC Magic, also known as the G2, an Android-based device that promised a lot. Today I popped by my local Vodafone store to see it in action and left happy. It's slim, light, the screen is responsive and the Internet plan is <em>only</em> 30 quid a month with enough texts and minutes.

Came back home and started looking for comments on the Internet, and that's when the disappointment began. Being based on Linux, you would've thought that it would come with software for synchronizing it in Linux, right? <strong>WRONG</strong>. The <a href="http://www.htc.com/www/product/magic/specification.html">HTC Sync software requirements</a> are:

<blockquote>** Microsoft Windows XP Service Pack 2 (SP2) or higher or Microsoft Windows Vista
** Microsoft Office Outlook 2000/2002/2003/2007, Windows Address Book (Outlook Express), or Windows Contacts</blockquote>

Not even Macs for fuck sakes. The alternative for Linux is <a href="http://www.synce.org">SynCE</a>, but I just don't fancy expending hours reading blogs and forums to try to make it work.

Let's move on, what about the music? What capacity does it have? Answer: <strong>512mb</strong>. Yeah, that's right, you read it correctly: 512mb. You can, however, expand the memory by using microSD cards. Ok, not nice but not a huge deal, I can buy a 16gb card anywhere for 40 pounds. But, oh, wait, what about the headphones?

<blockquote>HTC ExtUSB™ (11-pin mini-USB 2.0 and audio jack in one)</blockquote>

That means no standard 3.5mm jack, you have to buy from HTC yet another stupid cable when you have another thousand headphones already.

I don't know, maybe these issues are not as big as they look now, but while I was coming back from the shop I was a happy geek thinking "I could buy it tomorrow" whereas now I might wait until June when new Android devices are expected from other manufacturers.

I hate companies.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>938</wp:post_id>
		<wp:post_date>2009-05-07 11:31:34</wp:post_date>
		<wp:post_date_gmt>2009-05-07 10:31:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-htc-magic-disappointment</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[android]]></category>
		<category domain="category" nicename="hardware"><![CDATA[hardware]]></category>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>99</wp:comment_id>
			<wp:comment_author><![CDATA[Randall Stross]]></wp:comment_author>
			<wp:comment_author_email>randall-stross@enhilex.com</wp:comment_author_email>
			<wp:comment_author_url>http://enhilex.com</wp:comment_author_url>
			<wp:comment_author_IP>203.217.72.251</wp:comment_author_IP>
			<wp:comment_date>2009-05-08 01:46:29</wp:comment_date>
			<wp:comment_date_gmt>2009-05-08 00:46:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[SynCE is not that hard to make work :) But I agree, the new Android devices would be good...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>103</wp:comment_id>
			<wp:comment_author><![CDATA[Manannan]]></wp:comment_author>
			<wp:comment_author_email>mnu@manuelalvarez.es</wp:comment_author_email>
			<wp:comment_author_url>http://manuelalvarez.es</wp:comment_author_url>
			<wp:comment_author_IP>80.24.192.181</wp:comment_author_IP>
			<wp:comment_date>2009-05-12 15:06:55</wp:comment_date>
			<wp:comment_date_gmt>2009-05-12 14:06:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sorry, for Spanish newbie... what's "30 quid"?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>102</wp:comment_id>
			<wp:comment_author><![CDATA[Mr.doob]]></wp:comment_author>
			<wp:comment_author_email>info@mrdoob.com</wp:comment_author_email>
			<wp:comment_author_url>http://mrdoob.com</wp:comment_author_url>
			<wp:comment_author_IP>78.86.226.53</wp:comment_author_IP>
			<wp:comment_date>2009-05-10 06:11:48</wp:comment_date>
			<wp:comment_date_gmt>2009-05-10 05:11:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Doh! I was also quite excited about this device. Didn't even thought about sync, but now you say it it's quite a turn down. I guess it will still take a while until companies spend money on a small % like we are.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>104</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>81.101.142.114</wp:comment_author_IP>
			<wp:comment_date>2009-05-12 15:10:32</wp:comment_date>
			<wp:comment_date_gmt>2009-05-12 14:10:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[30 quid = 30 English pounds : )

And note that "quid" is always singular!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>138</wp:comment_id>
			<wp:comment_author><![CDATA[Ricardo]]></wp:comment_author>
			<wp:comment_author_email>timmy.jf@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.107.29.111</wp:comment_author_IP>
			<wp:comment_date>2009-07-02 01:38:45</wp:comment_date>
			<wp:comment_date_gmt>2009-07-02 00:38:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you so much about your post. I've made some little research about Smartphones and was thinking about iPhone (plus my mobile company "iPhone plans" are really expansive for me) and one with Android. Since my mobile company will bring the HTC Magic this month, I thought it was worth checking it. 

Now I see is better wait. 

Some mobiles from Huwei will arrive this year - but I hate the Huwei modem my ISP provides. I hope their mobiles are waaaaaay better. And with decent apps to sync. And no fancy phone plugs.


Cheers!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>156</wp:comment_id>
			<wp:comment_author><![CDATA[Yuen-Chi Lian]]></wp:comment_author>
			<wp:comment_author_email>me+blog@yclian.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.yclian.com</wp:comment_author_url>
			<wp:comment_author_IP>219.95.197.122</wp:comment_author_IP>
			<wp:comment_date>2009-07-29 16:56:32</wp:comment_date>
			<wp:comment_date_gmt>2009-07-29 15:56:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I just got one yesterday - without really doing any online research. I knew iPhone would be a better one for the price I could pay, and though I fancy Steve Jobs, I'm just not a Mac fanboy (and I dislike having something too common). I was also looking at E91.

Anyway, getting SynCE to work is not that hard, but the important question to make is, do you need to sync your stuff (contacts/calendar/mails) to your machine when the point of having an Android is to sync them up to Google's services? 

Yes, I don't quite like the idea that HTC doesn't have a client program for us on our Linux machine. I also hate the proprietary micro USB port. Otherwise, I'm quite satisfied with what the phone is giving me thus far.

I will be hacking the phone when I have some free time, soon. :)

yc]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>157</wp:comment_id>
			<wp:comment_author><![CDATA[Yuen-Chi Lian]]></wp:comment_author>
			<wp:comment_author_email>me+blog@yclian.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.yclian.com</wp:comment_author_url>
			<wp:comment_author_IP>219.95.197.122</wp:comment_author_IP>
			<wp:comment_date>2009-07-29 17:01:04</wp:comment_date>
			<wp:comment_date_gmt>2009-07-29 16:01:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Oh, to put it with today's buzzword - Android store things into the Cloud.

yc]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; Got my Hero!]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2009/08/16/got-my-hero/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.37.130</wp:comment_author_IP>
			<wp:comment_date>2009-08-16 15:50:22</wp:comment_date>
			<wp:comment_date_gmt>2009-08-16 14:50:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] things I don&#8217;t like so much are: proprietary mini-USB connector. As opposed to the Magic, this one has a standard 3.5mm jack but still the USB connector is HTC only. This is so bloody [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>hxGaia is waiting for you</title>
		<link>http://blog.zarate.tv/2009/05/11/hxgaia-is-waiting-for-you/</link>
		<pubDate>Mon, 11 May 2009 08:50:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=959</guid>
		<description></description>
		<content:encoded><![CDATA[How cool is that?!

Unless you've been living under a HUGE rock you should know by now what <a href="http://www.gaiaflashframework.com/">GAIA</a> is. Either that or you are not a Flash dev so here it goes anyway: GAIA is a Flash framework that is meant to greatly speed up your development workflow. It automatically gives you scaffolding, SWFAddress, SWFObject, transitions between pages, etc. And as with any other frameworks, it makes bringing new people to the team much more easier because it's known and documented. The problem for Linux peeps was that it requires the Flash IDE. Well, not any more!

<a href="http://www.designrealm.co.uk/">Lee McColl</a> (one of the guys behind the <a href="http://www.amazon.co.uk/gp/product/0470122137?ie=UTF8&tag=designrealm-21&linkCode=as2&camp=1634&creative=6738&creativeASIN=0470122137">haXe book</a>) has ported it to haXe. This is just version 0.1 and there're still some wrinkles here and there, so some more testing is required. Read the <a href="http://lists.motion-twin.com/pipermail/haxe/2009-May/025063.html">announce on the mailing list</a> for more info.

This is another great addition to haXe after PHP and soon-to-be-released C++ backends. Whatever your dev background is, I think haXe is well worth looking at, you can start by the brand new <a href="http://haxe.org/manual/1_intro">haXe introduction</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>959</wp:post_id>
		<wp:post_date>2009-05-11 09:50:13</wp:post_date>
		<wp:post_date_gmt>2009-05-11 08:50:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hxgaia-is-waiting-for-you</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="haxe"><![CDATA[haxe]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Adobe forces DMCA to take down OS project</title>
		<link>http://blog.zarate.tv/2009/05/24/adobe-forces-dmca-to-take-down-os-project/</link>
		<pubDate>Sun, 24 May 2009 09:14:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=982</guid>
		<description></description>
		<content:encoded><![CDATA[A couple of days ago I read on Slashdot that Adobe was using the <a href="http://en.wikipedia.org/wiki/DMCA">DMCA</a> to <a href="http://yro.slashdot.org/article.pl?sid=09/05/22/1254246">take down a project on SourceForge that had reversed engineered the "secure" RTMP<strong>E</strong> protocol</a>. That final "E" is important, it means "encrypted". And as <a href="http://ncannasse.fr/blog/rtmpe_and_dmca">Nicolas points out</a>, it's the piece of marketing bullshit that allows Adobe to go and sell its technology as "secure" to operators such as <a href="http://www.channel4.com/">Channel 4</a>.

It didn't take long to the geeks to reverse engineer that <em>E</em> and allow anyone to access copyrighted material. And that's another key thing. Adobe is not claiming the Open Source project is breaking Adobe's patents, what the DMCA is about is:

<blockquote>It criminalizes production and dissemination of technology, devices, or services intended to circumvent measures (commonly known as Digital Rights Management or DRM) that control access to copyrighted works and it also criminalizes the act of circumventing an access control, whether or not there is actual infringement of copyright itself.</blockquote>

So, because the project allows bypassing the DRM and SourceForge is based on the US (the only country where the DMCA applies), SourceForge had to take it down. Fair enough. 

Now, what has Adobe achieved?

Two days after the news broke on Slashdot, the source code, the keys to encrypt/decrypt and a <a href="http://tech.slashdot.org/article.pl?sid=09/05/23/2017218">clean room specification of the protocol</a> are already being shared and hosted all over the internet in servers outside the US. So it seems that if Adobe was trying to avoid the "secret source code" to spread, mission failed, right? Well, I don't think so.

Adobe guys and lawyers are not that stupid, they of course knew this would happen so, why go after an Open Source project and get some bad PR from the community in the first place? Again, marketing bullshit. Adobe publicly has to do as much as they can to protect the content of their clients/partners, even if they know the effort is rather pointless.

This is only a battle of the much bigger war going on between <del datetime="2009-05-24T08:53:19+00:00">content creators</del> copyright holders and users. Technology has changed very much how music, movies, books, etc are being consumed and copyright holders see how the extremely tight control they once had over their content is now slipping away through their fingers. And they see coming the day that they won't be able to make the obscene amount of money they make at the moment. And they feel threatened. And <a href="http://bentekalsnes.wordpress.com/2009/04/23/european-parliament-music-copyright-extended-to-70-years/">they fight back</a>.

I'll leave that for another post.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>982</wp:post_id>
		<wp:post_date>2009-05-24 10:14:52</wp:post_date>
		<wp:post_date_gmt>2009-05-24 09:14:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adobe-forces-dmca-to-take-down-os-project</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<category domain="category" nicename="copyright"><![CDATA[copyright]]></category>
		<category domain="category" nicename="patents"><![CDATA[patents]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>111</wp:comment_id>
			<wp:comment_author><![CDATA[TheOm3ga]]></wp:comment_author>
			<wp:comment_author_email>theom3ga@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.om3.com.es</wp:comment_author_url>
			<wp:comment_author_IP>84.122.4.188</wp:comment_author_IP>
			<wp:comment_date>2009-05-24 20:47:39</wp:comment_date>
			<wp:comment_date_gmt>2009-05-24 19:47:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Something like a forced <a href="http://en.wikipedia.org/wiki/Streissand_effect" rel="nofollow">Streisand effect</a>, isn't it?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adobe vs skinning components</title>
		<link>http://blog.zarate.tv/2009/06/04/adobe-vs-skinning-components/</link>
		<pubDate>Thu, 04 Jun 2009 07:42:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1032</guid>
		<description></description>
		<content:encoded><![CDATA[Honest to God, this subject is embarrassing. Adobe just cannot pull off a set of components easy to skin, simple as that. They keep swinging from one method to another, only to go back to the previous one.

Now that Flash Builder 4 is in public beta and Flex 4 is on its way, guess one of the selling points? Skinning components. <strong><em>AGAIN?</em></strong> Yes, <a href="http://theflashblog.com/?p=1063">again</a>:

<blockquote>I’ve spent the last couple of days getting up to speed with skinning in Flex 4. All I can say is that it is much easier than it was before</blockquote>

I'm not picking on Lee Brimelow (bless him, I think he's one of the best evangelists Adobe has), it's just that every time there's a new release of the components I hear someone from Adobe saying "<em>this release is fantastic, everything is much simpler, previous version was rubbish</em>". But I can't get bothered. Then, after 6 months you go to a Flash meeting where there's ALWAYS a session about skinning components and whoever is speaking always goes:

<blockquote>Yeah, version X was crap, this one is much better. Although.. you know... sometimes in Macs there's this weird thing, and also you have to first import this SWC, then deselect this option here and then compile. Sometimes you have to compile twice because the first one doesn't work.</blockquote>

There. You always have to do something weird, always something not quite working, always the speaker is not sure why something happens. And just for the record, I'm not talking about speakers that don't know shit, I'm talking about speakers at <a href="http://www.flashonthebeach.com/">FOTB</a> (btw, I'm in for this year). Plus, if they were <em>actually</em> that simple to skin we wouldn't need sessions about it on every single Flash conference.

Besides, for me, Adobe is getting this all wrong. <a href="http://www.dandolachapa.com/2007/05/23/una-de-componentes/">I've said this</a> a million times but because I'm obviously no Colin Moock (<a href="http://www.moock.org/blog/archives/000010.html">petition for a loader API in April</a> > <a href="http://www.moock.org/blog/archives/000060.html">MovieClipLoader in October</a>) nobody listens to me: 

<strong>The components should be compiled in the player</strong>

Have you ever heard a HTML or JS developer even <strong>think</strong> about radio buttons, check boxes or combos available on the browser...? Nope, they simply assume they are there and that's it.

Skinning? Why would you want to do that? Modifying the look and feel of the controls in HTML is probably <strong>against</strong> usability and accessibility. Most likely you are going to overwrite user preferences just because you fancy.

I have to admit, though, that I always find <a href="http://www.joangarnet.com/blog/">people</a> reluctant to embed the components in the player. For at least these 2 reasons:

- <em>Weight. They will add up to the weight of the player</em>. Ummm, ok, but how much? 200kb? Ok, fair enough but those 200kb on the runtime would save <strong>gazillions</strong> of kb that every Flash app with components sends to our browsers, I much rather get those 200kb only once.

- <em>Maintainability. If components are embedded on the player, fixing bugs or improving them would be more difficult</em>. This one annoys me very much. You are telling me that MS, Mozilla, Opera and Webkit are capable of delivering a bug free set of components and Adobe cannot?

The thing is that, same as in HTML, embedding the components on the player will <em>not</em> force people to use them, you could always roll your own if your project required it.

Anyway, don't know why I bother, I'm no Colin Moock!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1032</wp:post_id>
		<wp:post_date>2009-06-04 08:42:59</wp:post_date>
		<wp:post_date_gmt>2009-06-04 07:42:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adobe-vs-skinning-components</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<category domain="category" nicename="flex"><![CDATA[flex]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>120</wp:comment_id>
			<wp:comment_author><![CDATA[TheOm3ga]]></wp:comment_author>
			<wp:comment_author_email>theom3ga@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.om3.com.es</wp:comment_author_url>
			<wp:comment_author_IP>84.122.4.188</wp:comment_author_IP>
			<wp:comment_date>2009-06-04 14:39:00</wp:comment_date>
			<wp:comment_date_gmt>2009-06-04 13:39:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[They could be called... Weirdobe!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1697</wp:comment_id>
			<wp:comment_author><![CDATA[Benny]]></wp:comment_author>
			<wp:comment_author_email>b.vluggen@hccnet.nl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>94.214.70.169</wp:comment_author_IP>
			<wp:comment_date>2010-07-14 11:47:23</wp:comment_date>
			<wp:comment_date_gmt>2010-07-14 10:47:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I also think it's preferable to increase the download size of the player in favor of a smaller download size per (mobile!) Flash site. It would be great if there was a core set of platform consistent UI components, including auto skinning based on the platform but with option to override any part of the skin and of course one should always be able to extend native components and add new ones. 

If Adobe still decides to keep the components outside the Player they should consider to include them into the player cache. 

In (air/web) applications custom skinning should be avoided but for websites I think it makes sense and should always be an option. By default though skinning should adopt the native style of the platform.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Chrome on Linux, first impressions</title>
		<link>http://blog.zarate.tv/2009/06/08/chrome-on-linux-first-impressions/</link>
		<pubDate>Mon, 08 Jun 2009 19:05:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1048</guid>
		<description></description>
		<content:encoded><![CDATA[The Chrome team <a href="http://blog.chromium.org/2009/06/danger-mac-and-linux-builds-available.html">announced the early versions of Chrome for Mac and Linux</a>, you can get them from the <a href="http://dev.chromium.org/getting-involved/dev-channel">dev channel</a>.

Although it feels much faster than Firefox (specially with GMail and Google Reader, no surprise here) it's not meant to be your main browser just yet. There are a <a href="http://tech.slashdot.org/story/09/06/05/0517231/Google-Announces-Chrome-For-Mac-and-Linux-Dev-Builds">ton of features still missing</a> or bugs such as <a href="http://code.google.com/p/chromium/issues/detail?id=11226">not being able to accent letters</a>, but I've been using it for the weekend and I like it.

I'm loving the minimalistic interface which leaves more room for the content because, who on Earth needs a Home button?! On a second thought, I bet a trillion people use it, I just don't know why. There are, though, still some things that I don't quite get yet. Like the <em>superbar</em> where you type whatever you like and brings either the URL or a Google search for the term. I don't know, I think it's doing weird stuff, but might be the incomplete Linux version.

And it's interesting coming back to the Internet with ads and without Flash. Boy, that's odd. At the moment Chrome for Mac and Linux lacks extensions (although apparently <a href="http://www.adsweep.org/">some are on their way</a>) and also 3rd party plugins, so I'm realizing these 2 things:

** I feel much less guilty of using AdBlock on FF. Honestly, banners SUCK SO BADLY that blocking them is pretty much a self-defense action. Let alone the ones you see on Chrome are GIFs, not Flash. On a related note, lately I'm white-listing some websites I visit often IF they run Adwords or a similar sort of thing, but I digress.

** Devs using Flash out there: You must provide at least <em>some</em> alternative content. Cannot believe there're still websites relying <strong>only</strong> on Flash for navigation or important content.

And to wrap up, a little note about Open Source. Still amazes me that you can actually download and study the code, how amazing is that? Don't understand V8? No worries, <a href="http://code.google.com/apis/v8/intro.html">here's how it works</a>. Personally I don't get half of the explanations, but from time to time I <del datetime="2009-06-05T12:39:26+00:00">waste my time</del> get inspired reading stuff like that.

Some people moan about the fact that Chrome is going to hurt more FF than IE, but I say screw you and thanks Google for Chrome. What it's going to be interesting is what happens to FF because Google is who pays the bills atm. But although it seems Google is investing in 2 different browsers, that's not the point. The point is Google needs web standards. Google needs IE under 40% usage, it doesn't really matter for them what browser people use as long it's not IE.

Luckily for all of us the internet is moving towards that. And we are lucky because the amount of people <em>not</em> using IE is so big that you can't ignore them any more. No one on their right mind would create an IE-only site these days. 

Well, in their right mind, you know.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1048</wp:post_id>
		<wp:post_date>2009-06-08 20:05:18</wp:post_date>
		<wp:post_date_gmt>2009-06-08 19:05:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>chrome-on-linux-first-impressions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="google"><![CDATA[google]]></category>
		<category domain="category" nicename="open-source"><![CDATA[open source]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>122</wp:comment_id>
			<wp:comment_author><![CDATA[Mr.doob]]></wp:comment_author>
			<wp:comment_author_email>info@mrdoob.com</wp:comment_author_email>
			<wp:comment_author_url>http://mrdoob.com</wp:comment_author_url>
			<wp:comment_author_IP>78.86.226.53</wp:comment_author_IP>
			<wp:comment_date>2009-06-09 01:07:45</wp:comment_date>
			<wp:comment_date_gmt>2009-06-09 00:07:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have a tiny different view. Chrome was done to push Firefox/Safari/Opera development. Google Wave, in the other hand, iss the one that has been (indirectly) done to steal IE %.

I think that's the real Google move here. For many years people have complained about IE, doing anti-IE websites. We all know how effective complaining usually is. Google had the power to do it the other way. Develop a new product that is attractive, needed (we'll see that), and at the same time uses the standards at their full glory, letting IE on the side (unless they decide that following the standards is not a bad idea after all).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>StackOverflow DevDays and Subflash 09</title>
		<link>http://blog.zarate.tv/2009/06/20/stackoverflow-devdays-and-subflash-09/</link>
		<pubDate>Sat, 20 Jun 2009 17:26:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1093</guid>
		<description></description>
		<content:encoded><![CDATA[As another trillion devs out there, I've been a fan of both Jeff Attwood and Joel Spolsky for very long time. I've linked to <a href="http://www.codinghorror.com/blog/">Coding Horror</a> countless times and read <a href="http://www.amazon.co.uk/User-Interface-Design-Programmers-Spolsky/dp/1893115941/ref=sr_1_1?ie=UTF8&s=books&qid=1245518144&sr=1-1">User Interface Design for Programmers</a> quite a few years ago.

So it was a no-brainer following them to <a href="http://stackoverflow.com/">StackOverflow</a> when they released it, and it was also a no-brainer picking up a ticket for the <a href="http://stackoverflow.carsonified.com/">StackOverflow DevDays</a> when they announced it.

The fun thing is that I got my ticket for London and a week later they announced they are coming to Cambridge as well. Now I'm not sure if I should stick to my London ticket or try to exchange it for one to Cambridge. It came up on our local <a href="http://www.refreshcambridge.org/">Refresh</a> mailing list and I think this is interesting:

<blockquote>I thought about that and went for Cambridge. London is going to be 800 people I think. It's going to be a big event, not too dissimilar to FOWA I would wager when it's been in Kensington. Cambridge is going to be much smaller, which means it should be more personal.</blockquote>

<blockquote>... and lacking the exciting London startups/people.</blockquote>

<blockquote>True, but in amongst 800 people it's harder to meet them. I've nearly always found (and been guilty of) meeting up with people I know at such massive events</blockquote>

So, what do you prefer, big or small conferences?

It turns out the guys at <a href="http://www.subflash.com/">Subflash</a> just announced this year's location, no more and no less than sunny Alicante during the last weekend of August. Although I've only been to Subflash once I remember it as one of the coolest Flash conferences that I've ever been to. Specially because it's small enough so you get to know and talk to <strong>everybody</strong>. It's around 50 Flash geeks together during 3 days, everybody goes for lunch at the same time, to the same pub at the same time, to the beach at the same time... It's a family conference : )

Plus, <a href="http://www.q-interactiva.com/">Marcos</a> is always such a nice host taking very good care of everybody, another reason of Subflash' success all these years.

Sadly I won't be able to make it this time, I'm going to FOTB not long afterwards plus I already had <a href="http://www.southwestfour.com/">big plans for that weekend</a>, but if you have no plans go and treat yourself to the <em>real</em> Flash on the beach, you won't regret it.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1093</wp:post_id>
		<wp:post_date>2009-06-20 18:26:27</wp:post_date>
		<wp:post_date_gmt>2009-06-20 17:26:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stackoverflow-devdays-and-subflash-09</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="events"><![CDATA[events]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>128</wp:comment_id>
			<wp:comment_author><![CDATA[Marcos]]></wp:comment_author>
			<wp:comment_author_email>marcos@q-interactiva.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.q-interactiva.com</wp:comment_author_url>
			<wp:comment_author_IP>88.1.63.99</wp:comment_author_IP>
			<wp:comment_date>2009-06-20 18:48:19</wp:comment_date>
			<wp:comment_date_gmt>2009-06-20 17:48:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Juan!

Hope to see you soon, it's a pity you can not come! Your plans for FOTB were great, but I'm too busy to go there, enjoy it!

Marcos.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Presenting LameScripts</title>
		<link>http://blog.zarate.tv/2009/07/02/presenting-lamescripts/</link>
		<pubDate>Thu, 02 Jul 2009 19:13:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1131</guid>
		<description></description>
		<content:encoded><![CDATA[As you grow from <em>absolutely clueless</em> to <em>shameless newbie</em> as a Linux user you start to feel more comfortable with the command line. This is something that I value very much because now when I have to go to the server and do dirty stuff through SSH I feel I'm not going to screw things up the second I hit <em>ENTER</em>.

Another nice side effect of that is that you start writing your own scripts for your daily tasks. Time ago I wrote one to which you could feed a folder and would recursively look for images and create thumbnails. This was very handy after taking pics to be able to send some by email to friends and stuff (doing this CLI because as far as I know, there's no way to do it in the GIMP, is that so?). Sadly, I lost it in one of the reinstallations. Well, not again.

I've just commited to the <a href="http://zarate.tv/projects/zcode">ZCode</a> repo my <a href="http://code.google.com/p/zcode/source/browse/#svn/trunk/lamescripts">LameScripts</a> folder. So far it only contains 2 super-lame scripts to use my beloved <a href="http://www.scootersoftware.com/">Beyond Compare</a> as a external diff tool for GIT and SVN.

If you are crazy enough to use them, just check them out somewhere in your home folder. Then edit your .bashrc file and add at the end:

[code lang="bash"]PATH=$PATH:/path/to/lamescripts[/code]

Now you can call them anywhere you are on the console. Each script should have basic instructions if they need any. Needless to say:

<strong>USE AT YOUR OWN RISK!</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1131</wp:post_id>
		<wp:post_date>2009-07-02 20:13:18</wp:post_date>
		<wp:post_date_gmt>2009-07-02 19:13:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>presenting-lamescripts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<category domain="category" nicename="zcode"><![CDATA[zcode]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>KuneriLite ActionScript API</title>
		<link>http://blog.zarate.tv/2009/07/11/kunerilite-actionscript-api/</link>
		<pubDate>Sat, 11 Jul 2009 18:58:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1149</guid>
		<description></description>
		<content:encoded><![CDATA[I'm building a little app for Nokia S60s that has to talk to the GPS, and <a href="http://ustwo.co.uk/">we</a> decided to use <a href="http://www.kunerilite.net/">KuneriLite</a>, the Flash-on-steroids wrapper for mobile devices that cool kids in town use these days. Because of <a href="http://hippohx.com/">HippoHX</a> now every time I see/use a Flash wrapper can't help to compare with it, but I'll leave that for the end of the post.

Setting up Kuneri is a little bit messy. There's a nice list of very specific requirements, so my advice if you want to give it a go is:

1) Get Kuneri, install and open the requirements wizard.
2) Install the requirements the wizard tells you about in the same order and the same versions, <strong>use the links they provide</strong>. I specially got problems with S60 SDK because I got a wrong version. With Java I saw the <a href="http://www.dandolachapa.com/2008/05/12/flex-3-sdk-msvcr71dll-not-found/">missing DLL error</a>. 

[BTW, to download the S60 SDK you have to register with Nokia, what a nice way to annoy your developers. I'd like to know the % of real data they get. So well done Adobe for not requiring this annoying step to get Flex SDK]

3) Until you can't compile the test application, you will not be good to go.

Once you are all set up, you can start using Kuneri. Create a new project, add the plugins you want to use, compile, install and live happy ever after.

<strong><em>Where's my API dude?</em></strong>

It turns out Kuneri is a tiny webserver on the phone, thus you communicate doing http requests and parsing the results you get. Somehow weird, but whatever, I'll play along. What I was <strong>really</strong> surprised about is that there's no official higher ActionScript API. I mean, if you want to talk to the GPS, the <a href="http://wiki.kunerilite.net/index.php?title=GPS_plugin">documentation</a> tells you to do something like this:

[code lang="actionscript"]loadVariables("http://127.0.0.1:1001/Basic/GPS?klCommand=read","");[/code]

loadVariables? Sorry, <em>are you from the past?</em> Apparently they are not, they recommend loadVariables to be compatible with FlashLite 1.1. But because of that you also have to use a MovieClip and an interval to receive the answer from the server. A graphical element to receive the answer from a network call, that's good ol'Flash in all its glory!

The point is KuneriLite doesn't provide at the moment a clean ActionScript API to use their plugins, they only document how you should make the requests and what you should expect as their response. No way in hell I'm going through that so I'm presenting (drum roll, please):

<a href="http://code.google.com/p/kuneri-api/">Kuneri ActionScript API</a>

Check it out:

[code lang="actionscript"]var gps : GPS = new GPS();
gps.read(Delegate.create(this, handler));

function handler(response : GPSResponse) : Void
{
  trace(response.latitude + ", " + response.longitude);
}[/code]

That's much better. Not only you hide all the crap of calling the server, you also get a strictly typed response. Sweet. ATM I've only created the API for the GPS because that's what I need now, and also the Camera for the sake of it, really. I'm not sure if I'm going complete it and I'm almost sure I'm not going to keep up in sync with Kuneri development, so if anyone is interested, please contact me, I'll gladly handover the project.

Special thanks to mr <a href="http://www.elecash.org/blog/">Elecash</a> for explaining to me the <em>why-the-hell-they-use-loadVariables</em> mystery and for pointing out <a href="http://forum.kuneri.net/index.php/topic,184.0.html">this nice bug</a> that, thanks to him, nobody else has to suffer. Plus, he's always available on IM for my silly FlashLite doubts. Yo! Thanks mate :)

<strong><em>Extra ball: KuneriLite vs HippoHX</em></strong>

As I said at the beginning, can't help but compare Kuneri with HippoHX. Here we go:

- Both are based on somebody else's codebase (SWHX and S60 SDK), but because SWHX is Open Source I can redistribute it myself saving the hassle to my final user, something that Kuneri can't with Nokia's SDK. Another nice side effect is that if a new version of SWHX breaks HippoHX for some reason, I can hold the HippoHX release till I fix the problem.

- HippoHX GUI is only that, a GUI to the CLI packager, so you can integrate it with your compilation scripts. I have the feeling that Kuneri GUI is the same, but haven't seen the documentation.

- HippoHX GUI doesn't use the installation folder to store its data, it uses user's space for that. See <a href="http://stackoverflow.com/questions/57019/where-should-cross-platform-apps-keep-their-data">Where should cross-platform apps keep their data?</a> to know why.

- SWHX and HippoHX are for Win and Mac and Kuneri is Windows only. Might be because of the dependencies, but I'm not sure.

- I can't find a download for the documentation, it seems to be on-line only.

Some of these are bigger deals than others, and I'm sure the Kuneri team will fix them in the future, but being a commercial app, I feel most of them could/should have been fixed already.

Anyway, will add a link to the OVI store (Nokia's copycat of the Apple store) once the app is finished and ready to download. It's a little silly app, but, hey, I coded it!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1149</wp:post_id>
		<wp:post_date>2009-07-11 19:58:29</wp:post_date>
		<wp:post_date_gmt>2009-07-11 18:58:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>kunerilite-actionscript-api</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as2"><![CDATA[as2]]></category>
		<category domain="category" nicename="mobile"><![CDATA[mobile]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>146</wp:comment_id>
			<wp:comment_author><![CDATA[Marcos]]></wp:comment_author>
			<wp:comment_author_email>marcos@q-interactiva.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.q-interactiva.com</wp:comment_author_url>
			<wp:comment_author_IP>83.61.94.6</wp:comment_author_IP>
			<wp:comment_date>2009-07-13 12:53:23</wp:comment_date>
			<wp:comment_date_gmt>2009-07-13 11:53:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[He he, as Blade said in his last film... The world is not friendly. The mobile world... even more.

Here is an interesting resource talking about using KuneriLite GPS Plugin.
http://wiki.forum.nokia.com/index.php/Displaying_GPS_position_using_Google_Maps_images_in_Flash_Lite


The Nokia API Services is not a big improvement related the points you talk about, it improves the "abstraction" when calling the services, but it's a nightmare when you have to solve errors. Here is an example showing how to get the location from the GPS with Nokia API Services (S60 5th Edition).
http://wiki.forum.nokia.com/index.php/CS001289_-_Obtaining_location_information_in_Flash_Lite

Great to see you working with Flash Lite... again :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>152</wp:comment_id>
			<wp:comment_author><![CDATA[API en ActionScript para KuneriLite | BlocketPc :: Flash Lite y Mobile Web]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blocketpc.com/2009/07/21/api-en-actionscript-para-kunerilite/</wp:comment_author_url>
			<wp:comment_author_IP>212.36.74.235</wp:comment_author_IP>
			<wp:comment_date>2009-07-21 20:36:56</wp:comment_date>
			<wp:comment_date_gmt>2009-07-21 19:36:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] algo más de un par de horas, pero la API de KuneriLite está subida en Google Code de la mano de Zárate, así que toca ponerse manos a la obra y [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Nuf already with the IE6 in the business crap</title>
		<link>http://blog.zarate.tv/2009/07/18/nuf-already-with-the-ie6-in-the-business-crap/</link>
		<pubDate>Sat, 18 Jul 2009 14:47:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1178</guid>
		<description></description>
		<content:encoded><![CDATA[You've probably heard already that both <a href="http://www.techcrunch.com/2009/07/14/youtube-will-be-next-to-kiss-ie6-support-goodbye/">Digg and Youtube plan to gradually stop supporting sodding IE6</a>. About time. 

But Digg run a poll about why people kept using it and a fair amount of them said that they cannot update because they are in the office without admin rights. And their IT departments say they cannot upgrade because they have intranets or applications that only run on IE6. Ok, let's just fix that Zárate style:

1) Write a wrapper on C++/C#/whatever around a standalone version of IE6. Name it <em>my-crappy-app-from-the-past.exe</em> and install it on the machines of your oompa-loompas. Tweak it so it can only navigate to your crappy intranet, no where else to go.

2) Upgrade all the machines to IE8.

3) DONE!

Honestly, is this not a valid solution? I wonder why MS doesn't offer it themselves, I think it's in everybody's interest.

And MOVE ON!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1178</wp:post_id>
		<wp:post_date>2009-07-18 15:47:12</wp:post_date>
		<wp:post_date_gmt>2009-07-18 14:47:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nuf-already-with-the-ie6-in-the-business-crap</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="microsoft"><![CDATA[microsoft]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>150</wp:comment_id>
			<wp:comment_author><![CDATA[Freddie]]></wp:comment_author>
			<wp:comment_author_email>webmaster@cristalab.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.cristalab.org/</wp:comment_author_url>
			<wp:comment_author_IP>190.253.253.74</wp:comment_author_IP>
			<wp:comment_date>2009-07-19 02:44:36</wp:comment_date>
			<wp:comment_date_gmt>2009-07-19 01:44:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you have IE8 and try do do the ActiveX wrapper of the IE6 trident engine, the render will work but you won't be able to write on any textfield.

Don't know why, but that's what happens to me on several PCs]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Got my Hero!</title>
		<link>http://blog.zarate.tv/2009/08/16/got-my-hero/</link>
		<pubDate>Sun, 16 Aug 2009 14:50:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1192</guid>
		<description></description>
		<content:encoded><![CDATA[Not <a href="http://www.youtube.com/watch?v=7f_HsjpSVaI">this hero</a>, <a href="http://www.htc.com/www/product/hero/">this Hero</a>!

Couldn't help myself. One of my workmates bought it so I had the chance to see it in real action. After that, couldn't help myself.

I spent some time crunching numbers about what should I do. Buy it unlocked or get a deal with a carrier? If so, contract or pay as you go? Which company? I think for the first time in my LIFE I created a spreadsheet. Put nice rows detailing contracts, pay as you go, companies, initial payment, minutes, texts, internet... Very boring indeed.

I finally decided to buy it unlocked from HTC (well, a <a href="http://www.devicewire.co.uk/">distributor</a>, 390 quid, sent in 2 days) and get a "Solo 30 days" contract with T-Mobile. Basically for 20 pounds a month I have more minutes and texts that I can ever use plus 1GB of internet on the phone, which was the important bit. Also this is not a long contract, I can go somewhere else only after 30 days. 

It finally came on Friday and I've been playing with it since. Overall impression is that it's REALLY good. Interface is second to none. Is fast, slick, responsive... integration with Google services is almost flawless (little bit scary privacy-wise, to be honest), GPS on Google Maps is really good, you can customize whatever you want, etc.

The things I don't like so much are: proprietary mini-USB connector. As <a href="http://blog.zarate.tv/2009/05/07/the-htc-magic-disappointment/">opposed to the Magic</a>, this one has a standard 3.5mm jack but still the USB connector is HTC only. This is so bloody annoying and I hope the <a href="http://online.wsj.com/article/SB124628607855768227.html">EU law to force a standard charger kicks in once and for all</a> (NOTE: the USB port and charger is the same). I also don't find very useful the button that opens a search box and takes you to Google straight away. I find difficult to believe that Google has forced HTC to put it there, but who knows. Whatever the reason, to me is a <em>hardware</em> button that I don't need and I can't remove.

An interesting spin from the Hero is it turns out Linux IS very ready and capable for the GUI/desktop space. So why don't we see an interface as polished as the Hero's on Linux desktops? Well, when you design for <strong>one and only one device</strong> it's so much easier to get it right. Your testing efforts, UI design, drivers... all of them target and focus a single piece of hardware. And if you get 80-90% of the job done from Google already, you "only" need to put the cherry on top.

Android is lowering A LOT the the threshold to become a mobile manufacturer, you only need to put the hardware and testing instead of having to <em>also</em> build the underlying OS. I could be pretty wrong, but I think Android is going to be the base for a ton of devices in the near-ish future.

--

To wrap up, who said <a href="http://www.google.co.uk/search?q=watered+down+site+for+mobile+devices&ie=utf-8&oe=utf-8&aq=t&rls=com.ubuntu:en-GB:unofficial&client=firefox-a">websites should not offer a "watered down" version for mobile devices</a>? Fuck that! I'm loving the mobile version of these sites:

<ul>
	<li><a href="http://mobile.wikipedia.org/">Wikipedia</a></li>
	<li><a href="http://bbc.co.uk/mobile">BBC</a></li>
	<li><a href="http://m.google.com/reader">Google Reader</a></li>
	<li><a href="http://m.marca.com">Marca</a></li>
</ul>

They are the non-fatty versions of their big brothers, load very fast and most of them don't even have ads, so you get what you are looking for <em>quickly</em>. And when you are out and about on a not-so-fast mobile connection you really appreciate <strong>succinctness</strong>.  I'm all up for adding the extra value mobiles could bring to those sites (GPS location, for example, but there're privacy issues as well), but please keep the mobile versions, thanks.

PS: Yes, it comes with a Flash Player installed. Which one? I don't know. The beta of the Flash player 10 for mobile devices is supposed to come out late this year, and I don't think this one plays AVM2 swfs. It <em>does</em> play Flash fullscreen (including YouTube), but I haven't run any tests just yet. Will keep you posted if/when I do.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1192</wp:post_id>
		<wp:post_date>2009-08-16 15:50:15</wp:post_date>
		<wp:post_date_gmt>2009-08-16 14:50:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>got-my-hero</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[android]]></category>
		<category domain="category" nicename="google"><![CDATA[google]]></category>
		<category domain="category" nicename="hardware"><![CDATA[hardware]]></category>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<category domain="category" nicename="mobile"><![CDATA[mobile]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>174</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen Beattie]]></wp:comment_author>
			<wp:comment_author_email>snbeattie@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>81.98.242.189</wp:comment_author_IP>
			<wp:comment_date>2009-08-27 23:16:06</wp:comment_date>
			<wp:comment_date_gmt>2009-08-27 22:16:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Juan, 

I ended up on here searching for a solution to the _focusrect / keypress issue and I got distracted by your Android post - lol.  I'm hoping to get the Samsung Galaxy (i7500) when it eventually comes out on o2). Looking forward to developing some apps too.

The Flash Player on the Hero is reportedly Flash (Lite) 9.  I think it's a weird version that HTC baked into the ROM which is why it works in the browser.  Full Flash 10 is coming though so it should be available in a few months (maybe end of the year?).

Anyway, hope you're well dude.  Will try to get down to Refresh soon for a pint.

Stephen]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>176</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>81.101.142.114</wp:comment_author_IP>
			<wp:comment_date>2009-08-28 07:51:04</wp:comment_date>
			<wp:comment_date_gmt>2009-08-28 06:51:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey man : )

Yeah, all good and well here. Now spending half a life in the commute to London, as I've gone permanent with a studio there.

We need to catch up!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>180</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen Beattie]]></wp:comment_author>
			<wp:comment_author_email>snbeattie@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>81.98.242.189</wp:comment_author_IP>
			<wp:comment_date>2009-09-04 01:29:38</wp:comment_date>
			<wp:comment_date_gmt>2009-09-04 00:29:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I ended up going for a HTC Hero too (on orange) as the Samsung Galaxy was waaay to expensive on o2.  It's waiting for me in the Post Office to collect tomorrow - can't wait!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>184</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; Running Flash apps on Android/HTC Hero]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2009/09/13/running-flash-apps-on-androidhtc-hero/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.37.130</wp:comment_author_IP>
			<wp:comment_date>2009-09-13 19:30:01</wp:comment_date>
			<wp:comment_date_gmt>2009-09-13 18:30:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] I got my Hero I&#8217;ve been meaning to do some Flash testing on [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>SWFMill development coming back to life</title>
		<link>http://blog.zarate.tv/2009/08/30/swfmill-development-coming-back-to-life/</link>
		<pubDate>Sun, 30 Aug 2009 14:51:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1213</guid>
		<description></description>
		<content:encoded><![CDATA[Luckily for OS Flash peeps, SWFMill is almost under new management. If you are a SWFMill user you probably know there hasn't been an update for a really long time. If you are also on the mailing list, then you also probably know that there are quite a few patches flying around that have never been applied consistently, let alone included in an official release.

Good news is Daniel Cassidy has picked up the challenge of being the official maintainer and he's now on the steering wheel. Code has been moved to Launchpad and most of those patches integrated in the trunk. Good work!

Still, it seems that Daniel's push for SWFMill comes a little bit late for some people. <a href="http://www.mindless-labs.com/trac/samhaxe/">SamHaxe</a> has been announced last week. As per the announcement:

<blockquote>it's a haXe/neko based flash resource assembly tool used for collecting various assets(images, sounds, movie clips, fonts, etc.) into a single SWF file</blockquote>

So, a SWFMill "competitor". Can't blame the authors for giving it a go, although I'd like to know why they are starting from scratch instead of fixing what needs to be fixed in SWFMill and building a GUI on top of it. I did ask on the mailing list, but didn't get an answer. Anyway, having several options is a good thing most of the times.

Regarding the SWF library generation without the Flash IDE I for one can't wait for Adobe to fully support and integrate the XFL format once and for all. A zip file with assets and and xml manifesto to describe the whole thing, no more closed-non-backwards compatible FLA files, thank you very much.

--

Last week SWFMill started to have BIG crashes on my Ubuntu box when importing a font, so I tried once again to compile SWFMill from sources myself. This is a self note if I ever need to do this again.

* Install Bazaar because that's what the new repo uses. For those who don't know, Bazaar is Canonical's distributed SCM.

* Check out <a href="https://code.launchpad.net/~djcsdy/swfmill/trunk">trunk</a>.

* In an Ubuntu 9.04 clean installation you would need: automake, libtool, build-essential, libxml2-dev, libxslt1-dev, libfreetype6-dev and libpng12-dev. As usual YMMV, you might need some other libraries, but depends on your system.

* Run ./autogen.sh && ./configure && make && sudo make install. If you still have some libraries missing you will be told when running configure. 

* After successfully compiling SWFMill, move it from /usr/local/bin/swfmill to /usr/bin. Try running it now, I was getting this error:

<blockquote>error while loading shared libraries: libswft.so.0: cannot open shared object file: No such file or directory</blockquote>

Which I had to Google for and solved following <a href="http://www.burobjorn.nl/blog/2008/04/07/install-swfmill-on-ubuntu-710/">this tip</a>:

[code lang="bash"]sudo /sbin/ldconfig -v[/code]

All clear now : )]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1213</wp:post_id>
		<wp:post_date>2009-08-30 15:51:04</wp:post_date>
		<wp:post_date_gmt>2009-08-30 14:51:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>swfmill-development-coming-back-to-life</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="flash"><![CDATA[flash]]></category>
		<category domain="category" nicename="open-source"><![CDATA[open source]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Running Flash apps on Android/HTC Hero</title>
		<link>http://blog.zarate.tv/2009/09/13/running-flash-apps-on-androidhtc-hero/</link>
		<pubDate>Sun, 13 Sep 2009 18:29:54 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1225</guid>
		<description></description>
		<content:encoded><![CDATA[Since I got <a href="http://blog.zarate.tv/2009/08/16/got-my-hero/">my Hero</a> I've been meaning to do some Flash testing on it.

So I downloaded the <a href="http://developer.android.com/sdk/">Android SDK</a>, installed <a href="http://developer.android.com/guide/developing/tools/adt.html">ADT</a> (plugin for Eclipse), briefly read the docs, compiled a couple of Hello World apps and I was finally all up and ready for some <em>serious business</em>.

Or so I thought.

Testing Flash apps on the Hero is not that easy and information is <strong>very</strong> scarce. I've asked in a <a href="http://groups.google.com/group/android-developers/msg/13d5ed412c4415e6">couple</a> of <a href="http://and.roid.es/foro/viewtopic.php?f=22&t=325">places</a> and heard nothing back.

To begin with, you can't test Flash apps on ADT's emulator. This is most likely because the Flash player that the Hero runs is <em>not</em> part of Android, is a propietary HTC application.

Then, I haven't been able to launch the Flash player on the phone directly. You can see it when you list the applications (Settings > Applications > Manage applications > HTC Flash player) but there's no human way to launch it.

Also it doesn't seem possible to open a SWF on the SD card with the player. NOTE: if you are missing a file manager on the Hero, welcome to the club. I had to install <a href="http://www.androidapps.com/t/astro">ASTRO</a>, it seems to do the job.

Opening a HTML page on the SD card with a SWF embedded doesn't work either, it seems <strong>plugins on local pages have been disabled</strong>.

Luckily for me several of my Google Reader contacts shared a post by Mark Doherty about <a href="http://www.flashmobileblog.com/2009/08/12/flash-development-with-android-sdk-1-5/">Flash development with Android SDK</a> where he explains how to create an Android app that will launch the Flash player. And so I did. I've added it to my <a href="http://code.google.com/p/zcode/source/browse/trunk/android/swfplayer/">ZCode repo</a> in case you might need it (<a href="http://code.google.com/p/zcode/source/browse/trunk/android/swfplayer/apk/SWFPlayer_signed.apk">direct download</a>). <strong>Please note that the Android app runs on landscape only</strong>. I think the app simply not listens to the orientation change event and thus is locked in landscape. I have to look into this.

So, what we have left? Oh yes, the best method so far which is connecting your Hero to the same network as your main computer via WiFi, run a local web server and access the content from the Hero's browser itself. You don't even need a HTML page, you can point the browser directly to a SWF file and it will play it full screen straight away. <em>Now</em> we can do the serious testing:

* As opposed to when run inside the Android app, when run from the browser the SWF plays normally in both portrait and landscape. You can set yourself as a listener to the Stage and implement the onResize method as usual. The Hero reports 314x480px in portrait and 474x320px on landscape (although is running fullscreen all the time and there's no apparent size difference).

* A home made FPS meter returns a steady 31fps rate for an empty movie.

* <strong>There is no drag support</strong>. I think this is very bad news and something I'm sure Adobe/HTC are going to fix soon. The problem is that when you touch and hold your finger the player completely stops. I realized this because I had an onEnterFrame updating a clip's x,y values based on the cursor position and the trace just stopped when I left my finger on the screen trying to drag the clip around. No code was being executed. This means at the moment you can't build an IPhone like touch & drag interface.

Now I want to test performance tweening clips all over the interface, some real world apps and most interestingly how could a Flash app embedded in an Android app talk to it. Yes, the idea is allowing Flash apps access the same APIs as native apps.

That'd be cool : )]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1225</wp:post_id>
		<wp:post_date>2009-09-13 19:29:54</wp:post_date>
		<wp:post_date_gmt>2009-09-13 18:29:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>running-flash-apps-on-androidhtc-hero</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[android]]></category>
		<category domain="category" nicename="flash"><![CDATA[flash]]></category>
		<category domain="category" nicename="flash-player"><![CDATA[flash player]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>186</wp:comment_id>
			<wp:comment_author><![CDATA[Dmitry]]></wp:comment_author>
			<wp:comment_author_email>mail@mail.mail.mail</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>213.228.66.190</wp:comment_author_IP>
			<wp:comment_date>2009-09-14 09:18:31</wp:comment_date>
			<wp:comment_date_gmt>2009-09-14 08:18:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Could you test Box2D performance please?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>187</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>81.107.39.218</wp:comment_author_IP>
			<wp:comment_date>2009-09-14 21:45:13</wp:comment_date>
			<wp:comment_date_gmt>2009-09-14 20:45:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Dmitry, which port of Box2D you want me to test? I can't find an AS2 port, you want me to try the haXe port?

Cheers,

Juan]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>188</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>81.107.39.218</wp:comment_author_IP>
			<wp:comment_date>2009-09-14 21:47:15</wp:comment_date>
			<wp:comment_date_gmt>2009-09-14 20:47:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just realized the Physaxe is player +9, so not sure what I can test :|]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>613</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>78.105.2.37</wp:comment_author_IP>
			<wp:comment_date>2010-03-04 17:39:02</wp:comment_date>
			<wp:comment_date_gmt>2010-03-04 16:39:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I highly doubt it would run any Flex app until FP 10.1 is ready :/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>612</wp:comment_id>
			<wp:comment_author><![CDATA[Juergen]]></wp:comment_author>
			<wp:comment_author_email>vlad.tepes@doc-spider.de</wp:comment_author_email>
			<wp:comment_author_url>http://joschi.bplaced.de</wp:comment_author_url>
			<wp:comment_author_IP>84.59.179.39</wp:comment_author_IP>
			<wp:comment_date>2010-03-04 17:27:48</wp:comment_date>
			<wp:comment_date_gmt>2010-03-04 16:27:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tried with my flex app on :
http://joschi.bplaced.de/ampel/ampel.swf
but it does not work. any idea ?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9884</wp:comment_id>
			<wp:comment_author><![CDATA[Yogesh]]></wp:comment_author>
			<wp:comment_author_email>yogidk@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>212.77.163.106</wp:comment_author_IP>
			<wp:comment_date>2011-04-15 11:39:14</wp:comment_date>
			<wp:comment_date_gmt>2011-04-15 10:39:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello !,

I have android 2.2. I need to develop an application by which I can play .swf and .flv files stored on SD card. 
Currently I am using SDK to develop application. Could you please let me know the API's I need to use to play,pause and stop the .swf / .flv files. Also what necessary libraries I need to import for the same ?

Thanks in advance.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:69:{s:15:"comment_post_ID";s:4:"1225";s:14:"comment_author";s:6:"Yogesh";s:20:"comment_author_email";s:16:"yogidk@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:357:"Hello !,

I have android 2.2. I need to develop an application by which I can play .swf and .flv files stored on SD card. 
Currently I am using SDK to develop application. Could you please let me know the API's I need to use to play,pause and stop the .swf / .flv files. Also what necessary libraries I need to import for the same ?

Thanks in advance.";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"212.77.163.106";s:10:"user_agent";s:145:"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; InfoPath.2)";s:8:"referrer";s:71:"http://blog.zarate.tv/2009/09/13/running-flash-apps-on-androidhtc-hero/";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:71:"http://blog.zarate.tv/2009/09/13/running-flash-apps-on-androidhtc-hero/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:7:" Yogesh";s:10:"POST_email";s:16:"yogidk@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:357:"Hello !,

I have android 2.2. I need to develop an application by which I can play .swf and .flv files stored on SD card. 
Currently I am using SDK to develop application. Could you please let me know the API's I need to use to play,pause and stop the .swf / .flv files. Also what necessary libraries I need to import for the same ?

Thanks in advance.";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1225";s:26:"POST_akismet_comment_nonce";s:10:"0bb34defdf";s:18:"POST_bb2_screener_";s:42:"1302863506 212.77.163.106 unknown, unknown";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"TaggUUWjtW4AABdoDhYAAAAH";s:10:"SCRIPT_URL";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:42:"http://blog.zarate.tv/wp-comments-post.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:11:"HTTP_ACCEPT";s:271:"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/x-shockwave-flash, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*";s:12:"HTTP_REFERER";s:71:"http://blog.zarate.tv/2009/09/13/running-flash-apps-on-androidhtc-hero/";s:20:"HTTP_ACCEPT_LANGUAGE";s:5:"en-us";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_UA_CPU";s:3:"x86";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:15:"HTTP_USER_AGENT";s:145:"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; InfoPath.2)";s:14:"CONTENT_LENGTH";s:3:"575";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:11:"HTTP_PRAGMA";s:8:"no-cache";s:11:"HTTP_COOKIE";s:0:"";s:8:"HTTP_VIA";s:41:"1.1 proxy14.rb.de.conti.de (squid/3.1.11)";s:20:"HTTP_X_FORWARDED_FOR";s:7:"unknown";s:18:"HTTP_CACHE_CONTROL";s:14:"max-age=259200";s:15:"HTTP_CONNECTION";s:5:"close";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"212.77.163.106";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:48:"/home/zarate/blog.zarate.tv/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"22662";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1302863953";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302863954.4544";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1304842584.2821";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Joa Ebert on the beach</title>
		<link>http://blog.zarate.tv/2009/09/29/joa-ebert-on-the-beach/</link>
		<pubDate>Tue, 29 Sep 2009 21:22:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1247</guid>
		<description></description>
		<content:encoded><![CDATA[FOTB tickets: 150 pounds.
Crappy hotel by the beach: 147 pounds.
<a href="http://iwannagothere.com/gb/brighton/eating-drinking/destination-100">Coffee + incredibly moist chocolate cake for breakfast</a>: 2.5 pounds.
Watching a guy embarrass a multi-billion company in 1 hour: <strong>so very fucking priceless</strong>.

This year's FOTB will be remembered as "<em>yes, the year that Joa Ebert...</em>" FOTB. His session was without a doubt the best of the 3 days and if you feel bad for not going, imagine the people that did go to FOTB but didn't go to the session.

Because it's taken me a week to write this post (went to Spain after FOTB, came back yesterday, waking up today at 6am wasn't funny), I'm not going to talk much about every single thing that went on like <a href="http://www.bigroom.co.uk/blog/application-frameworks-at-fotb">Richard Lord and frameworks</a>, <a href="http://www.flashonthebeach.com/sessions/index.php?pageid=2125">Mike Jones and Flex 4</a>, Colin Moock doesn't read books when he gets into new things (funny!), <a href="http://www.mikechambers.com/blog/2009/09/22/fotb-slides-advanced-desktop-development-with-adobe-air/">AIR 2.0 improvements</a>, etc. and will only talk about this:

<strong>++ Joa Ebert</strong>

<a href="http://blog.joa-ebert.com/2009/09/28/fotb-recordings/">His session</a> was on Tuesday 22nd September, let's see how long does it take Adobe to put his optimizations into the nightly builds of the Flex SDK compiler. Because fair enough if your compiler can be improved, but there will be NO EXCUSE to not use Joa's code. Luckily for us, it seems <a href="http://theflashblog.com/?p=1416">Adobe is taking it the good way</a>. 

The bright side of things is that, without refactoring any code, current applications can improve performance just by running his optimizations. Or from another angle: the AVM2 is faster than we all thought. Can't wait to hear from all the people squeezing the ass of the player: Papervision and all the 3D engines to begin with, but also image encoders/decoders and other CPU intensive tasks.

<strong>++ Open Source rocks</strong>

I was very, very happy to see how almost all the big names were finishing their presentations saying: "<em>... and yeah, all these amazing things I do you can download already from this URL...</em>".

Specially remarkable was <a href="http://www.joelgethinlewis.com/">Joel Gethin Lewis</a> that said, and I quote:

<blockquote><strong>I think that selling software is immoral</strong></blockquote> 

How cool :) 

If you are of those who think that he's a communist and his approach is taking Open Source too far, then at least check out this other quote: 

<blockquote>All my work is released as Open Source and I don't give a shit about people ripping it. I've done it, had fun with it and made my money already. I'm not interested any more in the things I've done, go and get them. I'm interested in the next thing I'm going to build.</blockquote>

Awesome mindset. And he's not kidding, here's <a href="http://code.google.com/p/joelgethinlewis/">his repo</a>.

We are not talking about a nerd in his apartment, we are talking about very successful people working for very big companies. They know their work would be 10x harder without the gazillion OS libraries out there and they think it's only fair to contribute back as payment. So do I. Let alone the practical point of view of getting other people "to work for you". Ask Carlos Ulloa what Papervision was before releasing it. It was re-written and ported to AS3 in the first 3 months. And you cannot do that alone. Neither PPV nor Carlos would be anywhere near successful as they are now if Carlos would have kept it for himself only.

<a href="http://www.openframeworks.cc/">Open Frameworks</a>, <a href="http://www.merapiproject.net/">Merapi</a>, <a href="http://code.google.com/p/apparat/">Apparat</a>, <a href="http://code.google.com/p/asaxb/">ASAXB</a> (<strong>do NOT miss out the TV ad</strong>)... So if you think your code is so valuable that has to be kept locked, <em>think again</em>. Unless you are doing cooler things than these guys your code is not worth keeping closed (and probably not even then). And yes, I know that telling clients that you are going to release their sources sounds like utopia, we had a long chat about that, but I'll leave that discussion for another post.

--

And that's it. For me it's been the best FOTB so far, if only for the people there! Cay, <a href="http://www.thelirios.com/">Diego</a>, <a href="http://www.xleon.net/">Diego</a>, Carlos, the rest of the UsTwo crew and some of the guys of the haXe list made the 4 days very geeky and fun.

Already waiting for FOTB 2010  : )]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1247</wp:post_id>
		<wp:post_date>2009-09-29 22:22:47</wp:post_date>
		<wp:post_date_gmt>2009-09-29 21:22:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>joa-ebert-on-the-beach</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="events"><![CDATA[events]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>201</wp:comment_id>
			<wp:comment_author><![CDATA[Héctor]]></wp:comment_author>
			<wp:comment_author_email>neverbirth@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>212.183.203.197</wp:comment_author_IP>
			<wp:comment_date>2009-09-30 08:48:04</wp:comment_date>
			<wp:comment_date_gmt>2009-09-30 07:48:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Selling software immoral? sorry, but I don't agree at all... of course there is software that isn't worth what it costs, or that has been made stealing others' code, but that's another thing. I wonder what the guy thinks when he pays for clothes, food, the rent, electricity, etc.

PS: Change the damn background XD.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>202</wp:comment_id>
			<wp:comment_author><![CDATA[diego]]></wp:comment_author>
			<wp:comment_author_email>dondiegote@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.thelirios.com</wp:comment_author_url>
			<wp:comment_author_IP>85.94.164.92</wp:comment_author_IP>
			<wp:comment_date>2009-09-30 09:30:27</wp:comment_date>
			<wp:comment_date_gmt>2009-09-30 08:30:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pints: x*ni pounds

:P]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>203</wp:comment_id>
			<wp:comment_author><![CDATA[Cay]]></wp:comment_author>
			<wp:comment_author_email>ventdaval@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.126.108.139</wp:comment_author_IP>
			<wp:comment_date>2009-09-30 10:22:50</wp:comment_date>
			<wp:comment_date_gmt>2009-09-30 09:22:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Héctor the main argument is for things that can be endlessly replicated without an inherent cost, and I think the actual quote from JGL made that distiction. I myself kind of agree with the whole mindset, but I'm still not sure what are the boundaries...
And I completely agree about the background ^^]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Dad&#039;s cab hits 45k downloads mark</title>
		<link>http://blog.zarate.tv/2009/10/15/dads-cab-hits-45k-downloads-mark/</link>
		<pubDate>Thu, 15 Oct 2009 19:12:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1268</guid>
		<description></description>
		<content:encoded><![CDATA[Remember <a href="http://blog.zarate.tv/2009/07/11/kunerilite-actionscript-api/">this post</a> where I was talking about an app <a href="http://ustwo.co.uk/">we</a> were doing for Nokia and was the reason why I had to delve into Kuneri? Well, it's <a href="http://store.ovi.com/content/73305479AC93C8F2E040050A85323F8C?clickSource=related%2Bcontent&link=ovi_apps_dads_cab_brandhome_teaser5_download&page=1">up and running</a>:

<blockquote>Kids treat you like a taxi service? Now you can act like one with this GPS enabled taximeter application on your mobile. It even includes additional annoyance tolls and children-friendly payment options.</blockquote>

It's a simple <em>looking</em> app but it does indeed use the GPS and the calculation of the fare is done following London's official taxi rules. It also takes into account if for whatever reason you lose connection with the satellites. Well, not so simple after all!

But I cannot take full credit, fellow ustwobie <a href="http://twitter.com/daaain">Dain Demmel</a> did a big part of the app (if not the biggest), plus we teamed up with <a href="http://www.work-club.com/">WorkClub</a> for art direction.

Anyway, very happy to release an app that people actually use and are happy about.

[UPDATE] Here's a <a href="http://www.youtube.com/watch?v=WhZ4SzcB8vg">video demo of the app</a>. [/UPDATE]

And lately we've been releasing quite a few apps at UsTwo:

** <a href="http://tinyurl.com/ylra8cy">Ben 10 MouthOff</a> in partnership with Turner.
** <a href="http://link.ustwo.co.uk/dot">.™</a>, brutally addictive first release of the 48hours app series (watch the <a href="http://8bitfeed.com/2009/10/mills-ustwo-interview/">interview with Mills</a> if you want to know more about the concept). 
** <a href="http://itunes.apple.com/WebObjects/MZStore.woa/wa/viewSoftware?id=306588353&mt=8">Hell-oween MouthOff</a> special.
** And the soon to be released <a href="http://ustwo.tumblr.com/tagged/inkstrumental">inkstrumental</a> in collaboration with <a href="http://www.jonburgerman.com/">Jon Burgerman</a>.

We don't stop : )]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1268</wp:post_id>
		<wp:post_date>2009-10-15 20:12:30</wp:post_date>
		<wp:post_date_gmt>2009-10-15 19:12:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dads-cab-hits-45k-downloads-mark</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="category" nicename="ustwo"><![CDATA[ustwo]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DevDays London</title>
		<link>http://blog.zarate.tv/2009/10/29/devdays-london/</link>
		<pubDate>Thu, 29 Oct 2009 09:34:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1289</guid>
		<description></description>
		<content:encoded><![CDATA[[Sorry for those who got an incomplete post, hit Publish <strong>again</strong> when I was meaning to save]

So, yesterday went to <a href="http://stackoverflow.carsonified.com/events/london/">StackOverflow DevDays</a> in London. I'll start with the bad part:

Organization: Massive queues to pick up food or coffee. FAIL. No 10 minutes break between speakers. FAIL. Mics failing. FAIL. The chairs EPIC FAIL.

The content: I understand that FogCreek is putting some money to sponsor the events but Joel run 2 completely sales focused sessions, one about FogBugz, the other one about FogCreek. Didn't enjoy either. Please remember that this is not a free conference. Fair enough, it's not pricey either (£85) and I'm not sure if they cover expenses with tickets only, but it just felt too much advertising. I'm not alone, <a href="http://twitter.com/aral/status/5234936652">read</a> <a href="http://twitter.com/dvdsmpsn/status/5235102023">the</a> <a href="http://twitter.com/rbriank/status/5100636330">twits</a>. BTW, I wonder if they got similar feeback in the US.

That's it for the bad part, now the good part.

<strong>Joel</strong>: when not doing a sales pitch, he is very funny and a great speaker. The intro video with Jeff was a lot of fun.

<strong>Jeff</strong>: the same. It was like a live Coding Horror post, always very inspiring.

Now the GREAT part:

<a href="http://stackoverflow.com/users/22656/jon-skeet">Jon Skeet</a>: really funny, probably the best speaker and that I didn't see coming. Put in perspective that Jon Skeet is the SO user with highest reputation and such a badass that he has earned <a href="http://meta.stackoverflow.com/questions/9134/jon-skeet-facts">his own facts</a>, much like Chuck Norris! I would love to see him again, FOTB next year? People loved him. He talked about the absolutely mess that is working with dates, strings and numbers in computers due to so many different standards. All this with a sock puppet in his right hand.

Things like <a href="http://momento24.com/en/2009/10/16/there-will-be-no-daylight-saving-time-this-summer-in-argentina/">Argentina decided this year NOT to follow daylight savings and warned the world only 11 days before hand</a>. Well done you guys!

<a href="http://icant.co.uk/">Christian Heilmann</a>: another very good speaker. He's a Yahoo! evangelist and I can see why. He demoed <a href="http://developer.yahoo.com/yql/">YQL</a> and I I had a question banging in my head all the time: <strong>Why nobody told me about this before?!?!?!</strong> It's a Yahoo! service to mashup open APIs and it looks REALLY powerful and something I'd definitely look into. Not sure for what yet, but looked very, very cool.

<strong>Pekka Kosonen</strong>: He works for Nokia and gave a talk about <a href="http://qt.nokia.com/">Qt</a> (since when Qt has been pronounced "<em>cute</em>"?!?!?!) that, for those who don't know, is the framework Nokia finally bought not long ago for building cross-platform *<strong>native</strong>* applications (including phones and all major desktop OSs). Well he was VERY honest about Nokia. I mean, very, very honest saying things like "<em>we used to suck a lot, now we are getting our act together</em>". He was very funny, the sort of speaker that doesn't laugh his own jokes, even when they are good. The honesty was very refreshing after the sales-oriented talks. Again, I wonder what would a US company do should an employee speak *<strong>the truth</strong>* that about them. Wonder what Joel was thinking (something along the lines "<em>I would SO fire this guy as soon as he's off the stage</em>").

Some pearls to put in t-shirts:

Joel: "The mother of all options is giving the user a compiler"
Jeff: "Don't be afraid of failing publicly "
Pekka Kosonen: "Light at the end of the tunnel, this time hopefully not a train"
Pekka Kosonen: " I wrote a Java book but was only for the money"
Phil Nash: "<a href="http://img202.yfrog.com/i/kc2x.jpg/">Objective C is like Marmite</a>: LOVE it or HATE it" *
<a href="http://twitter.com/jMarkP/status/5232897171">J Mark Pimp about Obj-C</a>: "80s called, they want their memory manager back" // <-- HILARIOUS

There were other speakes as well, they did a decent job. There was a nice intro to iPhone development, a nice intro to Android development, a nice intro to jQuery, a rather dry talk about compilers and a rather drier talk abut Python. Not bad for a single day.

Would I come back next year? I'll have to think about it.

* For probably anyone outside of the UK: <a href="http://en.wikipedia.org/wiki/Marmite">Marmite</a> is a cream that literally people either love or hate, they even say it in <a href="http://www.youtube.com/watch?v=dMg5mJUr8dU">their adds</a>. Me? Haven't tried it!
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1289</wp:post_id>
		<wp:post_date>2009-10-29 10:34:37</wp:post_date>
		<wp:post_date_gmt>2009-10-29 09:34:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>devdays-london</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="events"><![CDATA[events]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Show hidden files in OSX</title>
		<link>http://blog.zarate.tv/2009/11/09/show-hidden-files-in-osx/</link>
		<pubDate>Mon, 09 Nov 2009 20:57:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1299</guid>
		<description></description>
		<content:encoded><![CDATA[** Mac (open terminal): 

[code lang="bash"]defaults write com.apple.finder AppleShowAllFiles TRUE
killall Finder[/code]

** Ubuntu (on any window):

CTRL + H (toggles on/off hidden files).

OS X, the paradigm of usability <strong>MY ARSE</strong>.

(<em>And please don't embarras yourself saying that Mac users don't need to know about hidden files</em>)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1299</wp:post_id>
		<wp:post_date>2009-11-09 21:57:48</wp:post_date>
		<wp:post_date_gmt>2009-11-09 20:57:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>show-hidden-files-in-osx</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="incredibly-annoying-macs"><![CDATA[incredibly annoying macs]]></category>
		<category domain="category" nicename="usability"><![CDATA[usability]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>232</wp:comment_id>
			<wp:comment_author><![CDATA[Rafael]]></wp:comment_author>
			<wp:comment_author_email>rafaelrebolleda@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://rafaelrebolleda.com</wp:comment_author_url>
			<wp:comment_author_IP>89.141.103.164</wp:comment_author_IP>
			<wp:comment_date>2009-11-10 21:08:16</wp:comment_date>
			<wp:comment_date_gmt>2009-11-10 20:08:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Command + Shift + . will do the trick on any open/save/etc. dialog sheet, which I find pretty elegant. It's not as powerful as browsing while seeing all hidden files, but I don't find myself needing to do that more often than accessing them from any particular program.

I agree OS X is not the paradigm of usability for the average Joe, but I think it's great for power users with aesthetic needs who are willing to learn all the hidden tricks. And there are a lot.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>233</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>81.107.39.218</wp:comment_author_IP>
			<wp:comment_date>2009-11-10 22:37:36</wp:comment_date>
			<wp:comment_date_gmt>2009-11-10 21:37:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice trick, thanks Rafael : )

"I agree OS X is not the paradigm of usability for the average Joe"

First time I hear that! Honestly, sometimes I think I'm the only one looking Macs with a different eye.

And I agree that there are nice touches in OSX, but the fanboyism of Mac usability and "just works" is *beyond me*.

Nice blog btw.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>240</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; VirtualBox VM launcher in OSX]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2009/11/20/virtualbox-vm-launcher-in-osx/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.2.138</wp:comment_author_IP>
			<wp:comment_date>2009-11-20 22:48:54</wp:comment_date>
			<wp:comment_date_gmt>2009-11-20 21:48:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] think Linux/Ubuntu is yet again more easy to use than OSX, but I don&#8217;t even feel like bitching today. Here it [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>ustwo™ is looking for Flash devs</title>
		<link>http://blog.zarate.tv/2010/02/01/ustwo%e2%84%a2-is-looking-for-flash-devs/</link>
		<pubDate>Mon, 01 Feb 2010 21:33:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1302</guid>
		<description></description>
		<content:encoded><![CDATA[We are looking for a in-house permanent Flash dev to join the team! You don't need to be a senior, but definitely you need to be more from the programmer side of things.

Our tools set is pretty standard: FDT, MTASC, SWFMill, PureMVC, Ant, <a href="http://blog.zarate.tv/2010/01/21/make-your-console-fly-with-parallel-processing/">command line</a> <a href="http://blog.zarate.tv/2009/12/12/counting-your-lines-of-actionscript/">scripts</a>, haXe...

<strong>WARNING</strong>: You MUST be willing to do AS2. We know it's a pain in the neck (tell us about it) but until FP 10.1 / FashLite 4 is a reality on mobile devices we are stuck with crappy AS2. Believe me, we would LOVE to ditch it, but that's just not a possibility at the moment.

As for the things we do at ustwo™: a ton of Flash stuff for mobile devices, also quite a few iPhone apps, we were part of the private beta team that tested the Flash to iPhone CS5 exporter, we work with some big names, some not so well known names, we do Android apps... Check out the <a href="http://blog.ustwo.co.uk/">blog</a> for latest info.

ustwo™ London is based in Shoreditch and we also have offices in Malmo (Sweden). We are a bunch of nice people, we put music for the whole studio (despite the occasional cheese shite played by <a href="http://twitter.com/millsustwo">Mills</a> we have good music on), we play footy once a week, we have a beer fridge... but we also work our asses off and push to keep delivering awesome stuff.

So, check out <a href="http://www.ustwo.co.uk/">ustwo™'s website</a> and if you feel like it, <a href="mailto:jobs@ustwo.co.uk">get in touch</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1302</wp:post_id>
		<wp:post_date>2010-02-01 22:33:34</wp:post_date>
		<wp:post_date_gmt>2010-02-01 21:33:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ustwo%e2%84%a2-is-looking-for-flash-devs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ustwo"><![CDATA[ustwo]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>431</wp:comment_id>
			<wp:comment_author><![CDATA[Simon Richardson]]></wp:comment_author>
			<wp:comment_author_email>simon@ustwo.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.simonrichardson.info</wp:comment_author_url>
			<wp:comment_author_IP>95.146.201.7</wp:comment_author_IP>
			<wp:comment_date>2010-02-01 22:47:52</wp:comment_date>
			<wp:comment_date_gmt>2010-02-01 21:47:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You forgot to mention that we use neko ;-) Also anybody with haXe experience is a massive plus!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>435</wp:comment_id>
			<wp:comment_author><![CDATA[David Revilla]]></wp:comment_author>
			<wp:comment_author_email>david@puntoque.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.puntoque.net</wp:comment_author_url>
			<wp:comment_author_IP>87.219.224.63</wp:comment_author_IP>
			<wp:comment_date>2010-02-02 09:38:33</wp:comment_date>
			<wp:comment_date_gmt>2010-02-02 08:38:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[¿Don't need any animator? www.puntoque.net/flash, i'm freelance.
regards,
D.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>VirtualBox VM launcher in OSX</title>
		<link>http://blog.zarate.tv/2009/11/20/virtualbox-vm-launcher-in-osx/</link>
		<pubDate>Fri, 20 Nov 2009 21:48:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1387</guid>
		<description></description>
		<content:encoded><![CDATA[I think Linux/Ubuntu is <a href="http://blog.zarate.tv/2008/11/11/incredibly-annoying-macs-take-1/">yet</a> <a href="http://blog.zarate.tv/2009/11/09/show-hidden-files-in-osx/">again</a> more easy to use than OSX, but I don't even feel like bitching today. Here it goes:

++ Open Script Editor and type this updating the name of the VM you want to launch:

[code lang="bash"]do shell script "/Applications/VirtualBox.App/Contents/MacOS/VBoxManage startvm your_vm_name"[/code]

++ Save as <em>Application Bundle</em> and check <em>Run Only</em>.

Off you go.

<a href="http://forum.scummvm.org/viewtopic.php?t=4993">Thanks</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1387</wp:post_id>
		<wp:post_date>2009-11-20 22:48:48</wp:post_date>
		<wp:post_date_gmt>2009-11-20 21:48:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>virtualbox-vm-launcher-in-osx</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mac"><![CDATA[mac]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Counting your lines of ActionScript</title>
		<link>http://blog.zarate.tv/2009/12/12/counting-your-lines-of-actionscript/</link>
		<pubDate>Sat, 12 Dec 2009 16:38:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1394</guid>
		<description></description>
		<content:encoded><![CDATA[Have you ever been curious about how many lines of AS a project had? To be honest, I couldn't care less but hey, there're clients out there with pretty good reasons for it.

So, <a href="http://www.google.co.uk/search?sourceid=chrome&ie=UTF-8&q=count+lines+of+code">Google</a> a little bit, first result takes me to <a href="http://cloc.sourceforge.net/">CLOC</a>.

In theory you should be able to restrict CLOC to a language only but most likely due to my incompetence with regular expressions I couldn't get it to work the way I liked it. So doing a little bit of command line trickery, I had to create a text file containing the path of the AS files I wanted to parse and then feed that to CLOC. This is how it looks:

[code lang="bash"]find dir -type f -iname *.as > asfiles.txt[/code]

Then send that to CLOC:

[code lang="bash"]perl cloc --list-file=asfiles.txt --quiet --report=module_report.txt --no3 --strip-comments=nc --original-dir[/code]

That would be the simpler option. But because my project is made of modules (it's a multicore <a href="http://puremvc.org/">PureMVC</a> app) and the client wanted <em>both</em> stats per-module <em>and</em> global, I had to push it a little bit further. Basically create a stats file per module and then merge them together. Piece of cake:

[code lang="bash"]perl cloc --no3 --sum-reports --report_file=overall moduleReport1 moduleReport2 moduleReportN[/code]

Where "overall" is the name of the final output file (actually, 2 files are created, one per file, other per language) and "moduleReportX" files are the partial report created before for each module.

Another good thing about CLOC is that it runs in both OSX and Ubuntu at least pretty much out of the box because both come with Perl installed. However, had a little problem in Ubuntu but contacted Al Danial (the author) and he fixed it right away. If you are running Perl 5.10, go to the line 1038 of CLOC and replace "%" by "@".

Good to go!

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1394</wp:post_id>
		<wp:post_date>2009-12-12 17:38:00</wp:post_date>
		<wp:post_date_gmt>2009-12-12 16:38:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>counting-your-lines-of-actionscript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as2"><![CDATA[as2]]></category>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="code"><![CDATA[code]]></category>
		<category domain="category" nicename="development"><![CDATA[development]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Coders at work</title>
		<link>http://blog.zarate.tv/2010/01/19/coders-at-work/</link>
		<pubDate>Tue, 19 Jan 2010 10:53:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1412</guid>
		<description></description>
		<content:encoded><![CDATA[I've just finished reading <a href="http://www.codersatwork.com/">Coders at Work</a>, and it's a really good book for developers. <a href="http://www.gigamonkeys.com/">Peter Seibel</a> interviews 15 very successful programmers about how did they start programming, what changes they've seen in the industry over the last decades, what they look for when hiring new people, how do they debug, etc. I also quite like the tone of the book because it is a laid back conversation between peers, to the point and no bullshit.

Keep in mind that these guys are responsible for quite a few things that today we take for granted such us memcached, Unix, JS, Internet, Java, Firefox, etc.

One common thought is that back in the days they used to know in and out every line of code that run on their machines. Most of them spent quite a few years programming assembly and "close to the metal" (aka, the hardware), but today's programmers "<em>don't know the whole thing</em>". 

Well, they are right.

I for one have no idea of assembly, machine code or even C. Now, is that good or bad? Granted, the more you know, the better, but most of them also agree that with the level of abstractions that we programmers "enjoy" these days this doesn't sound possible any more.

For example, think about the abstractions of the typical Flash movie:

Hardware > OS > browser > Flash player > framework of choice > your app here

Now, that's obviously a gross overview, since we could break OS in (that I can think of, not even sure it's the right order):

kernel > drivers > window system > graphic card

The thing is, even if you had access to ALL the code running (which most likely you don't), who has the time and skills to look at it _and_ get  job done?

With all those abstractions in place, when something fails good luck trying to figure out where the problem is. Can you be sure? Because even when we find a bug in the player, is that Adobe's fault? Mozilla? Explorer? Linux? A combination? Very hard to tell, more so when a few of those elements are black boxes (proprietary software, you don't have access to the code).

Most of those guys wonder about what are the best skills for programmers nowadays. When they started coding, it was a must having very good math skills because of the lack of HW power. They needed to squeeze every single CPU cycle and memory position. Either that or your program wouldn't go anywhere. We all know that's not true any more. Is this bad? I say it depends on your work. 

If you are building compilers, 3D engines or drivers, then by all means you need to focus on performance and have those skills. But if you are doing user interfaces I bet your users appreciate a hand for design and usability. So, completely different skills needed. The fact that HW has gotten so powerful has lowered the barrier for being a programmer so people with very different skills can afford it now, and I think that's good. The fact that a designer (and probably even the most advanced Flash "programmer" looks like a designer to them) can build an interface without having to worry about HW, graphic cards and code optimizations is pushing computers to different areas.

Even for developers, the skills you need now are not the skills you needed 40 years ago. They think most developers these days "<em>play Lego</em>". They mean we build blocks with the frameworks or libraries available, but don't do any "real" programming. They have a point. But again, is that good or bad? This is classic DRY stuff. Why would I want to code a SHA1 library if there are quite a few there already? Heck, doing so would not only be a waste of time, it'd probably be a security hole as most likely I wouldn't get it right.  Why would I want to roll my own PHP framework if there are a myriad of choices offering DB abstraction and XSS and CSRF protection out of the box?

See, I think what's important is having the skills to roll your own code when needed and use somebody else's when it makes sense. And that requires some skills as well. First, you need to be able to identify what's core for you and disregard coding everything else. Then you need to be able to start using somebody else's code without having to understand it all, many times only looking at some (often incomplete) docs or API. That require skills. A different type, but skills nonetheless. 

Also, <strong>obviously with all due respect</strong>, I think they miss an important thing. They didn't start from scratch either. Nobody does. 

<strong>Standing in the shoulders of giants</strong>

For example, very, very, very few physicists question the thermodynamics laws. Very, very, very few mathematicians question Pythagoras. They take them for granted. They've been proved. They use them as a base to build on top. Yet, there're those very, very, very few that do indeed question the core laws that everyone else just "use". It's their job challenging those laws, otherwise completely accepted, and put them to the limit and analyze them with modern eyes.

Why we don't have similar laws or universal truths in computing? Well, for starters computers are what, 50 years old? 70 years old? 80? Physics and maths have been around thousands of years. Even if you could compare both worlds, the rules of the "computing universe" have been created by human beings whereas the rules of the Earth just <em>are</em>. Those rules haven't changed since the Big Bang, what changes is our understanding of them (call it physics math. chemistry, whatever).

As I was saying, quite an interesting book. One of those you can re-read in 2, 3 or 5 years, still enjoy it and still learn from it. Go read it!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1412</wp:post_id>
		<wp:post_date>2010-01-19 11:53:21</wp:post_date>
		<wp:post_date_gmt>2010-01-19 10:53:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>coders-at-work</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="books"><![CDATA[books]]></category>
		<category domain="category" nicename="code"><![CDATA[code]]></category>
		<category domain="category" nicename="the-industry"><![CDATA[the industry]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Make your console fly with Parallel Processing</title>
		<link>http://blog.zarate.tv/2010/01/21/make-your-console-fly-with-parallel-processing/</link>
		<pubDate>Thu, 21 Jan 2010 09:12:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1431</guid>
		<description></description>
		<content:encoded><![CDATA[I reckon this is kind of a niche thing, but interesting nonetheless. 

Our current project at ustwo™ is a PureMVC-multicore application. Sounds really fancy, but it's only a SWF loading SWFs.

To compile those SWFs we have some scripts using Ant, MTASC, SWFMill, Rhino and other tools. Updating from SVN and compiling 18 modules was taking around 90-100 seconds (that's updating and compiling the whole project, you can compile single modules much faster).

Keep in mind that our compilation process is a little bit more than calling MTASC. We are running some pre-processing, generating exclude files and some other trickery to gain extra performance (we target mobile devices).

Anyway. Got a hint from one of our developers so I did some research to find a way to speed up compilation time. Since most of us have now dual-core machines we should be able to parallelize some of the work, right? Indeed we can.

Finding <a href="http://code.google.com/p/ppss/">PPSS</a> was quite easy but understanding how it to works was a little bit more complicated. I'm not going to bore you to death with the nitty-gritty, so this is the flow that adapted better to us:

* In bash parse the list of module folders and create a txt file containing the path to a script passing to it the path of the module as a parameter. One line per module:

[code lang="bash"]/path/to/script.sh path/to/module0
/path/to/script.sh path/to/module1
/path/to/script.sh path/to/module2
...[/code]

* Feed that txt file to PPSS like this:

[code lang="bash"]ppss -f moduleList.txt -c 'bash $ITEM'[/code]

That's where the magic happens.  PPSS parallelizes each call to the compilation script using both CPUs. When you run it you can see they go all the way up to 80-90% usage, which is kind of the point.

We took some metrics and found a 40% speed improvement, sometimes even more. If you are a compulsive compiler like yours truly, this saves you quite some time.

Going from the serial approach to the parallel approach wasn't straight forward. Mostly because I had to split the main script into several scripts and that caused some issues due to my bash programming limitations. This is what I learnt:

* If you execute a script from another, the child doesn't have access to the variables defined by the parent unless you export them...
* ... but arrays don't get exported.
* Also, you can't "escalate" exported vars from children to parents. The trick only goes from parent to children (security, I guess).

Anyway. Some more command line black magic under my belt, which is great. The console is a very, very powerful tool that can simplify and standardize daily tasks, which is a must when you are on a team of 10 devs. Not that it is the nicest programming language (actually, it's pretty ugly), but its ubiquity makes learning it worthwhile.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1431</wp:post_id>
		<wp:post_date>2010-01-21 10:12:51</wp:post_date>
		<wp:post_date_gmt>2010-01-21 09:12:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>make-your-console-fly-with-parallel-processing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[development]]></category>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<category domain="category" nicename="mac"><![CDATA[mac]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>407</wp:comment_id>
			<wp:comment_author><![CDATA[Louwrentius]]></wp:comment_author>
			<wp:comment_author_email>louwrentius@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://louwrentius.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>84.105.153.230</wp:comment_author_IP>
			<wp:comment_date>2010-01-27 21:56:29</wp:comment_date>
			<wp:comment_date_gmt>2010-01-27 20:56:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there, 

Nice to hear you've found some use in PPSS. Tip:

You could also fill 'modulelist.txt' with this"

path/to/module0

And then execute

[code lang="bash"]ppss.sh -f modulelist.txt -c './path/to/script.sh '[/code] 

or

[code lang="bash"]ppss.sh -f modulelist.txt -c './path/to/script.sh "$ITEM"'[/code]

Cheers!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Build tools with haXe</title>
		<link>http://blog.zarate.tv/2010/02/08/build-tools-with-haxe/</link>
		<pubDate>Mon, 08 Feb 2010 21:40:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1451</guid>
		<description></description>
		<content:encoded><![CDATA[Remember how I've been lately pestering about how cool is learning to program in Bash? Well, I'm not retracting, but last couple of days I've been doing the same thing but using <a href="http://haxe.org/">haXe</a> + <a href="http://nekovm.org/">Neko</a> + <a href="http://code.google.com/p/xcross/">Xcross</a>. And I like it better.

<strong>How is this better than the others?</strong>

I think it's better than Bash because haXe is an OO language and it's fully crossplatform (no bash in Win unless you use <a href="http://www.cygwin.com/">Cygwin</a>). I also think it's better than <a href="http://ant.apache.org/">Ant</a> because you get rid of bloody-fatty Java as a dependency. 

<strong>How is this done</strong>

In a nutshell: you program in haXe, compile to Neko and then pack to a native app using Xcross. Piece of cake! 

Let's say you need to read some config file, compile your AS using MTASC and copy the output file to several places.  Let's assume a simple config file like this:

[code]tv.zarate.wadus.Main.hx
wadus.swf[/code]

And that we pass it to our tool like this:

[code lang="bash"]tool config.cfg[/code]

Now the pseudo-code:

[code lang="actionscript"]// Get application args, and use the first one
var args : Array<String> = xa.Application.getArgs();
var configPath : String = args[0];

// Read the content of the config file and parse it
var content : String = xa.File.read(configPath);
var lines : Array<String> = content.split("\n");
var class : String = lines[0];
var swf : String = lines[1];

// Call MTASC passing the output swf and the class read from the config file
var args = ["-swf", swf, "-main", class];
var p = new xa.Process(mtascPath, args);
var output = p.getOutput();
var error = p.getError();
var exitCode = p.exitCode();

// Check MTASC exit code, if not 0, something went wrong
if(exitCode != 0)
{
   xa.Utils.print(error);
}
else
{
   xa.Utils.print(output);
}
[/code]

And now compiling:

[code lang="bash"]haxe -neko wadus.n -main Wadus.hx
haxelib run xcross builder.n[/code]

That should be it; we've read and parsed a config file passed as a parameter and then called MTASC handling the result. Then compiled to native Win, Mac and Linux apps. 

As I said, that's pseudo code, on a real life app you would definitely need more error handling or might have a more complex config file (maybe xml, try parsing xml in Bash!), etc., but since haXe is a really similar to Flash or JS, it feels very natural to me. Granted, you can do the same in Bash, but to my eyes is much more complicated.

Some more notes:

<ul>
	<li>From a Neko app you can call any other tool on your system. That includes SVN, Ant, GIT, grep... Whatever is there, you can call it.</li>
	<li>Apps created with Xcross embed the Neko VM so they have zero dependencies (unless you use any of the tools described above, of course).</li>
</ul>

We are investigating this route instead of Ant for our build scripts. You might think it's kind of reinventing the Ant wheel, but we have the feeling that this is going to be <strong>much</strong> faster and flexible to our needs. 

We'll see : )

PS: I've used the xa.* package in the code, that's a little project I'm working on to provide a simpler haXe API for backends. This is a spin-off of HippoHX and it's not ready yet, but if you are interested you can follow the development in <a href="http://github.com/zarate/xapi">GitHub</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1451</wp:post_id>
		<wp:post_date>2010-02-08 22:40:21</wp:post_date>
		<wp:post_date_gmt>2010-02-08 21:40:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>build-tools-with-haxe</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[development]]></category>
		<category domain="category" nicename="haxe"><![CDATA[haxe]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1459</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; A folder is not a file]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2010/06/19/a-folder-is-not-a-file/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.2.138</wp:comment_author_IP>
			<wp:comment_date>2010-06-19 17:23:54</wp:comment_date>
			<wp:comment_date_gmt>2010-06-19 16:23:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] original implementation (differences due to platform limitations), so if you are up to developing build tools using haXe the jump would be much simpler cause you would be using the same [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>XAPI</title>
		<link>http://blog.zarate.tv/2010/02/23/xapi/</link>
		<pubDate>Tue, 23 Feb 2010 13:53:23 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1467</guid>
		<description></description>
		<content:encoded><![CDATA[As I said in the last post regarding <a href="http://blog.zarate.tv/2010/02/08/build-tools-with-haxe/">build tools in haXe</a>, I've been working in <a href="http://github.com/zarate/xapi">XAPI</a>. 

To put it simply, XAPI (Ximple API, the "<em>x</em>" is mandatory on haXe projects, you know?!) is a higher level API for haXe backends. Tu put it even simpler, that means doing more with less lines of code.

<strong>So, what can it do?</strong>

<ul>
	<li>Read / write / manage files and folders.</li>
	<li>Get information about your system (OS, where's the temp or the user folder, etc.).</li>
	<li>Interact with other tools in your system (Git, SVN, MTASC, SWfMill, etc.).</li>
	<li>Search for files and folders.</li>
	<li>And other smaller bits and pieces.</li>
</ul>

You can do all this already with "plain" haXe, XAPI only simplifies how you do it. Sometimes it also prevents developers for making mistakes. Two quick samples:

Writing content to a text file using XAPI:

[code lang="actionscript"]xa.File.write('myFile.txt', 'haXe rocks');[/code] 

Using plain haXe:

[code lang="actionscript"]var f = neko.io.File.write('myFile.txt', false);
f.writeString('haXe rocks');
f.close();[/code]

[<em>BTW, the opposite is not true, there's neko.io.File.getContent() which I didn't know about and used to use for this example. And also, turns out the PHP package has php.io.File. putContent()</em>]

Checking if a file exists using XAPI:

[code lang="actionscript"]var exists = xa.File.isFile(null);[/code]

Using plain haXe:

[code lang="actionscript"]var exists = !neko.FileSystem.isFolder(null);[/code]

So, there's no "isFile()" call in the API, plus using haXe alone you would get an exception because you are passing null (in real world you would never pass null on purpose, but it happens that you pass a variable that is), whereas in XAPI I check for null and, if it is, it just returns false. I think that's how it should work and I <a href="http://code.google.com/p/haxe/issues/detail?id=67">reported it as a bug</a>, but it won't get fixed :/

Those are the little and not so little additions that XAPI provides to the Std API. To get full details, just install and check out the docs. Simplest option is installing via haxelib (<em>haxelib install xapi</em>), but you can read <a href="http://wiki.github.com/zarate/xapi/installation">installation instructions</a> on the wiki.  

HippoHX's API is the mother of XAPI. That's when I first decided that I was going to expose a slightly different API that **I** thought it was simpler. See those stars around "I"? They are important. You see, this business of building APIs is very, very subjective.  I honestly think it's much like designing. You need to know your target audience, one size doesn't fit all, and there's a great deal of taste involved.

XAPI is an API for developers like me, with the same needs I have, etc., etc. I'm fine with that, I have no plan to dominate the world (yet), and I've built XAPI to help me on my own projects. I open it to the world so hopefully a) other devs will benefit and b) people will help me fix bugs.

<strong>What the future is? </strong>

Turns out XAPI is almost feature complete because I want to keep it simple. I want it to be easy to use and I don't want to target every single project out there, because that's what the Std API is for. When we were discussing on the list about what XAPI could do,<a href="http://jdegoes.squarespace.com/">Jonh de Goes</a> came up with an interesting idea about building some kind of "general file system wrapper" API where each "node" could be a file on your system, in the cloud or somewhere else (read it <a href="http://lists.motion-twin.com/pipermail/haxe/2010-January/033324.html">here</a>). Well, that sounds like an awesome project, but out of the scope of XAPI. 

On what can only be described as sweet irony, he also was the person who convinced me <strong>NOT</strong> to do it when I read his series of posts about writing Good APIs (<a href="http://jdegoes.squarespace.com/journal/2009/5/2/good-api-design-part-1.html">1</a>, <a href="http://jdegoes.squarespace.com/journal/2009/5/6/good-api-design-part-2.html">2</a>, <a href="http://jdegoes.squarespace.com/journal/2009/5/11/good-api-design-part-3.html">3</a>, <a href="http://jdegoes.squarespace.com/journal/2009/9/28/good-api-design-part-4.html">4</a>. Extra Ball, also read his post about <a href="http://jdegoes.squarespace.com/journal/2009/1/3/dispersed-development.html">Dispersed Development</a>).

<em>Sweet Spot Saturation Rule</em>

<blockquote>"By letting go of the power users, they achieve high usability (this is not always an inevitable tradeoff, but at the very least, simpler applications are easier to make usable than more complex applications"</blockquote>

And that's exactly what I'm planning to do. By not implementing the general file system wrapper he proposes I'm going to let go power-users like him on behalf of mid-users like myself. I hope it pays off resulting in a very simple to use API. Time will tell.

One thing that I'm thinking about is custom exceptions, though. At the moment if the Neko VM finds a problem it raises an exception which I'm not sure we know the type of. So catching them in XAPI and raising new ones to which we know the type I think would help a lot. Ideas welcome, btw. 

<strong>Is XAPI for you?</strong>  

Well, depends on the type of projects you face and the kind of developer you are. 

If you build for backends (php, cpp, neko), it might interest you.
If you are rather new to haXe, it might interest you.
If you develop build tools, it might interest you.
If you are wiling to sacrifice some flexibility to gain simplicity, it might interest you.

And to wrap up, thanks to <a href="http://www.wildwinter.net/">Ian Thomas</a>, he was the first one <a href="http://groups.google.com/group/hippohx/msg/4044af472b8aab4b">suggesting such a project more than a year ago</a>. I might need some time, but I do deliver : )
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1467</wp:post_id>
		<wp:post_date>2010-02-23 14:53:23</wp:post_date>
		<wp:post_date_gmt>2010-02-23 13:53:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xapi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[code]]></category>
		<category domain="category" nicename="haxe"><![CDATA[haxe]]></category>
		<category domain="category" nicename="open-source"><![CDATA[open source]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1331</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>81.107.39.218</wp:comment_author_IP>
			<wp:comment_date>2010-06-08 08:10:34</wp:comment_date>
			<wp:comment_date_gmt>2010-06-08 07:10:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As a matter of fact, I now think Nicolas is right. XAPI shouldn't try to protect the developer from those mistakes as null is just not a valid path as he says on the bug.

And you are also right, the docs are lacking information, but also there's no exception package, everything is thrown are strings, as far as i know. Wondering if I should try to roll my own, but that would require XAPI wrapping up every single call to Neko in try{}catch{} statements and throwing custom exceptions. BIG task :/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1324</wp:comment_id>
			<wp:comment_author><![CDATA[Simon Richardson]]></wp:comment_author>
			<wp:comment_author_email>me@simonrichardson.info</wp:comment_author_email>
			<wp:comment_author_url>http://www.simonrichardson.info</wp:comment_author_url>
			<wp:comment_author_IP>95.146.199.242</wp:comment_author_IP>
			<wp:comment_date>2010-06-07 21:56:19</wp:comment_date>
			<wp:comment_date_gmt>2010-06-07 20:56:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think the idea behind not passing null to methods, is to use try {...}catch(e){...}, but then it might help if the documentation had a java-doc @throws argument. This would help and reduce time when developing with this sort of thing.

Documentation in haXe would help so much here.

si]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Broken windows</title>
		<link>http://blog.zarate.tv/2010/03/22/broken-windows/</link>
		<pubDate>Mon, 22 Mar 2010 20:12:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1478</guid>
		<description></description>
		<content:encoded><![CDATA[Re-reading technical books always makes sense. Usually I don't remember anything I read on them once I finish, but while I'm reading I get all sorts of epiphanies, mostly related to the project I'm working on at that point in time. Basically, when you read a book, any book, you are a different person so you pay attention and make connections to different things. 

I'm reading now <a href="http://www.pragprog.com/">The Pragmatic Programmer</a>, an all time classic for programmers. For starters, they seem to be the people who coined the term <a href="http://en.wikipedia.org/wiki/Don%27t_repeat_yourself">DRY</a>, <em>Don't Repeat Yourself</em>. Might sound like a minor achievement, but being able to <strong>create</strong> new words and terms that allow people to communicate faster and better is a big deal. See, now when you hear someone talking about making apps more "web 2.0" or "harness the power of social media" the bullshit alarm in your brain automatically goes off and you get a quick idea of who you are talking to. Very useful.

<strong>The building with the broken window</strong>

Very early on the book they talk about something that is very true both in programming and real life. Researchers found that in a building, once a window breaks and it's not fixed in a reasonable amount of time, the state of said building declines very, very fast. We see this all the time. Whenever something is clean, everyone follows and tries to keep it clean. But as soon as the garbage is left out for too long, people start letting themselves go. Very, very soon, the mindset goes from "wow, can't leave that rubbish there" to "fuck it, everything looks shit".

In software projects at the beginning everyone is happy and the rainbow is high up in the sky, but soon enough someone <em>breaks a window</em>. It might be using a literal here cause you don't have time now to get hold of the config object or making a method public cause it simplifies so much getting the data out of the component, even if that breaks encapsulation. 

<strong>How to tackle the problem</strong>

Fire the developer that breaks the window and doesn't fix it in time? Too harsh? Is breaking windows a necessary evil from time to time? It really isn't, but, for the sake of the pragmatic people (tight deadline, client wants this, today I was tired, etc), let's assume breaking windows in inevitable. I can live with that. But we shouldn't live with the broken window for too long or devs will start not caring very fast. What once was a nice and clean system can turn very quickly into a mess nobody wants to touch.

If threatening to fire developers might not go down well, what about threatening them with superstition? 

<strong>Exodus 23:10</strong>

<blockquote>And six years thou shalt sow thy land, and shalt gather in the fruits thereof: But the seventh year thou shalt let it rest and lie still</blockquote>

This I think I picked up from Chris Heilmann at <a href="http://blog.zarate.tv/2009/10/29/devdays-london/">StackOverflow DevDays</a>. They say it in the sense that every 7th iteration (whatever long that is in your project), stop coding and clean up. I like it cause I think it brings a good balance between fast coding (I can hack this little thing now, code cleaning comes in 2 iterations) and keeping quality reasonable high.  

Also this goes by hand with the idea of the <a href="http://www.codinghorror.com/blog/2009/02/paying-down-your-technical-debt.html">technical debt</a>:

<blockquote>Doing things the quick and dirty way sets us up with a technical debt, which is similar to a financial debt. Like the financial debt, the technical debt incurs interest payments, which come in the form of extra effort that we have to do in the future development because the quick and dirty design choice. We can choose to continue paying interest, or we can pay down the principal by refactoring into a better design. Although it costs to pay down the principal, we gain by reduced interest payments in the future.</blockquote>

It's ok to incur in some "debt" when you kick off the project, same as businesses incur in some real debt when they start. But at some point devs need to start paying back some of that debt or the interest (time wasted dealing with crappy code) grows exponentially.

Bottom line: it's ok to break a window from time to time, but it's not ok letting it broken forever. It will haunt you down : )]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1478</wp:post_id>
		<wp:post_date>2010-03-22 21:12:27</wp:post_date>
		<wp:post_date_gmt>2010-03-22 20:12:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>broken-windows</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="books"><![CDATA[books]]></category>
		<category domain="category" nicename="code"><![CDATA[code]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>9736</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; Cliente centred development]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2011/04/13/cliente-centred-development/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.2.138</wp:comment_author_IP>
			<wp:comment_date>2011-04-13 08:50:01</wp:comment_date>
			<wp:comment_date_gmt>2011-04-13 07:50:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] you start dropping quality you start accumulating technical debt and enter the risky territory of buildings with broken windows. Damn, you can easily arrive to a point where devs feel it&#8217;s ok to copy and paste code all [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302681780.0145";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302681002.0205";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:48:{s:15:"comment_post_ID";s:4:"1478";s:14:"comment_author";s:41:"ZBlog &raquo; Cliente centred development";s:18:"comment_author_url";s:61:"http://blog.zarate.tv/2011/04/13/cliente-centred-development/";s:15:"comment_content";s:236:"[...] you start dropping quality you start accumulating technical debt and enter the risky territory of buildings with broken windows. Damn, you can easily arrive to a point where devs feel it&#8217;s ok to copy and paste code all [...]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:12:"67.205.2.138";s:10:"user_agent";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.0.4";s:8:"referrer";s:0:"";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:48:"http://blog.zarate.tv/2010/03/22/broken-windows/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:11:"/xmlrpc.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"TaVVpkWjtW4AADZZIfsAAAAH";s:10:"SCRIPT_URL";s:11:"/xmlrpc.php";s:10:"SCRIPT_URI";s:32:"http://blog.zarate.tv/xmlrpc.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:12:"CONTENT_TYPE";s:8:"text/xml";s:15:"HTTP_USER_AGENT";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.0.4";s:14:"CONTENT_LENGTH";s:3:"310";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:12:"67.205.2.138";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:38:"/home/zarate/blog.zarate.tv/xmlrpc.php";s:11:"REMOTE_PORT";s:5:"47477";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:11:"/xmlrpc.php";s:15:"HTTP_CONNECTION";s:5:"close";s:8:"PHP_SELF";s:11:"/xmlrpc.php";s:12:"REQUEST_TIME";s:10:"1302680998";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Giving a go to haxIgniter</title>
		<link>http://blog.zarate.tv/2010/04/05/giving-a-go-to-haxigniter/</link>
		<pubDate>Mon, 05 Apr 2010 10:48:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1486</guid>
		<description></description>
		<content:encoded><![CDATA[Every time I come back to PHP I miss a compiler to save me from my stupid silly mistakes. Also, I have to say that after years of AS2, AS3 and haXe, PHP's syntax feels odd. And basically that's the excuse to try <a href="http://wiki.github.com/ciscoheat/haxigniter/">haxIginiter</a>, a web framework for haXe targeting PHP and Neko.

[<em>Warning, haxeIgniter is not a port of <a href="http://codeigniter.com/">CodeIgniter</a>, the PHP framework. Sure, ideas are pretty similar, but it's not a direct port</em>]

As a rule of thumb, I like it. Although docs and code need further improvement, it seems easy enough to get your head around. Let alone it brings a compiler and friendly haXe syntax to the server. If you want to try it yourself, read the docs, starting at the <a href="http://wiki.github.com/ciscoheat/haxigniter/">intro</a> and follow links from there.

I'll list some things that got me and might save you some time.

<strong>By default only works in the root of your server</strong>

In theory you should be able to make it work in any folder by tweaking Config.hx, but I got it working in the root and didn't try again.

<strong>Needs write permission on www/runtime folder</strong>

When I started testing on OSX under XAMPP I wasn't getting anything on the screen or Apache logs, for some reason. Finally tried in Ubuntu and got to the problem, you need write access folders in www/runtime. 

<strong>Custom router</strong>

The router is the piece of code that decides the "translation" between URL and controllers. There're 2 by default, Basic and RESTful. Basic translates URLs to classes like this:

site.com/class/method/param1/param2

The RESTful follows the <a href="http://wiki.github.com/ciscoheat/haxigniter/rest-reference">REST approach</a> where:

site.com/controller/id > show(id, ?args)
site.com/controller/new > make(?args)
...

Ok, but what if you need more control than that? Well, for the time being you just have to roll your own. Create a MyRouter class implementing Router, add it to your Config.hx (about line 259 in 0.9.2) and you have full control over mapping URLs to controllers. See DefaultRouter.hx in haxigniter.server.routing for sample (as any other library, haxIgniter is installed in haxelib's path, find it running <em>haxelib path</em> or <em>haxelib setup</em>).

<strong>No obvious way of creating common + content views</strong>

haxeIgniter offers 3 different template systems. <a href="http://haxe.org/doc/cross/template">haxe.Template</a> (default), <a href="http://haxe.org/com/libs/templo">Templo</a> and good ol' <a href="http://www.smarty.net/">Smarty</a>. I'm not so sure that <em>more is more</em> in this case, especially since there's a low common denominator interface to deal with all of them, but anyway.

If you want to create a common + content view (common being html header, title, css and js links and content being each page's specific markup) you need to render templates inside templates:

[code lang="actionscript"]// Create content template and assign some sample value
var contentTemplate = new haxigniter.server.views.HaxeTemplate(this.config);
contentTemplate.assign('project', 'Wadus');

// Render content template and assign output to content var
// in main template. Main template needs ::content:: variable!
view.assign('content', contentTemplate.render('page.mtt'));

// Display main template
view.display('common.mtt');[/code]

<strong>No helper for linking assets into views</strong>

By default there's no helper to include assets in your view (js, css, images, etc). Something like:

[code lang="actionscript"]html.image('foo.png');[/code] 

In theory, inside a view, that code would create a img tag with the right path to the foo image, working out what the application path is inside the server, etc. At the moment there's nothing like that, but you can set the <a href="http://www.w3schools.com/TAGS/tag_base.asp">base path</a> in your html and then use absolute paths. Something like:

[code lang="actionscript"]// In your controller. Needs ::baseUrl:: in the template
var url = new haxigniter.server.libraries.Url(this.config);
view.assign('baseUrl', url.linkUrl() + '/');[/code]

[code lang="html"]<!-- In your view ->
<img src='/foo.png' />[/code]

--

So, there're a few gotchas and probably haxeIgniter is not ready for mass consumption yet, but I think it's a good start. I'm using it for building the next version of my website, so you will be able to look at "real" code soon. I'm using quotes here because the next version of my site is going to be <strong>very, very simple</strong>, so probably not the most complete haxeIgniter sample, but sample code nonetheless : )]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1486</wp:post_id>
		<wp:post_date>2010-04-05 11:48:00</wp:post_date>
		<wp:post_date_gmt>2010-04-05 10:48:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>giving-a-go-to-haxigniter</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="haxe"><![CDATA[haxe]]></category>
		<category domain="category" nicename="php"><![CDATA[php]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1013</wp:comment_id>
			<wp:comment_author><![CDATA[Andreas]]></wp:comment_author>
			<wp:comment_author_email>ciscoheat@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.183.242.246</wp:comment_author_IP>
			<wp:comment_date>2010-05-06 23:15:58</wp:comment_date>
			<wp:comment_date_gmt>2010-05-06 22:15:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for trying out haxigniter and writing about it. :) I'll be considering everything for the next release. Development has been a bit slow lately but I'm picking it up again!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>TedXCam Hackathon</title>
		<link>http://blog.zarate.tv/2010/04/11/tedxcam-hackathon/</link>
		<pubDate>Sun, 11 Apr 2010 17:53:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1512</guid>
		<description></description>
		<content:encoded><![CDATA[Is over! The <a href="http://www.tedxcam.com/hackathon/">Hackathon</a> is over and boy, did it fly. 

This hackathon was about messing around with a <strong>fixed</strong> set of open APIs and come up with a good app. We got together into teams and TED + <a href="http://www.red-gate.com/">Red Gate</a> put the WiFi, the space, the food and the beer (which I had to miss).

I'm reasonably happy with our outcome, because for the time given you can't really expect much more. Only finding out what was available in those APIs and agree between <strong>7 people</strong> what to do took us 40% of the time. Once we knew what to do, the coding fun began. 

What we came up with was a very simple way of putting in perspective what very little it takes to help developing countries. Or what could've been done with the staggering amounts of money companies in developed countries raise. For example, Spinvox's first round of funding could've funded over 100,000 health related businesses in Sierra Leone through <a href="http://www.kiva.org/">Kiva</a>. Awesome. 

Couple of guys putting together a Ruby backend for the API (including caching requests, as most APIs are limited to a certain amount of request per IP), couple of guys putting together HTML + Ajax to read the data and pass it to Flash and I did a little Flash widget to display the data. Fairly simple, but we got it working.

[UPDATE] We <a href="http://www.tedxcam.com/hackathon-results/">won</a> : ) <a href="http://ventropy.org/">Ventropy</a> is up and running! [/UPDATE]

Interesting to see what other people did. We were very, very pragmatic. Thought about using SVN or GIT, but settled for using Dropbox and worked really well. We got something working as soon as we could and added small improvements till the deadline. Should we take the project to the real life, I very much doubt we would keep anything we coded, though. Other people went for a complete setup (source control, a website, DB abstraction) and I think that time could've been better used in something else, but I'm not part of the jury : )

The day was totally worth it, but to me it felt like a sprint more than a marathon. 3 years ago, <a href="http://www.dandolachapa.com/2007/06/17/hackday-2007-london/">Yahoo's Hackday</a> in London was a full weekend of coding. Much more time to code, learn, develop ideas and network. Sure, the time pressure was a funny incentive, but i like more the <em>"what can you do in 48hrs?</em>" thing. Still, thanks to the organizers and the sponsors.

Sadly I had to leave just after the last presentation and to top it up I'm also going to miss the main <a href="http://www.tedxcam.com/">TEDXCam conference</a> next weekend. Why would I miss such an event, specially when we got free tickets for participating in the Hackathon? 

Well, next weekend is the <strong>Xtreme Geek Weekend - Barcelona Edition</strong>.

Stay tuned!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1512</wp:post_id>
		<wp:post_date>2010-04-11 18:53:56</wp:post_date>
		<wp:post_date_gmt>2010-04-11 17:53:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tedxcam-hackathon</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[code]]></category>
		<category domain="category" nicename="events"><![CDATA[events]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>XFL. Finally.</title>
		<link>http://blog.zarate.tv/2010/04/18/xfl-finally/</link>
		<pubDate>Sun, 18 Apr 2010 12:38:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1531</guid>
		<description></description>
		<content:encoded><![CDATA[Obviously, the Flash to iPhone cross-compiler mayhem has gotten all the attention of the CS5 release, but as Kevin Lynch pointed out, there're another 250 reasons to update to CS5. Well, I very much doubt there're 250, but there's one I'm very happy about: CS5 not only imports XFL files, it also <strong>exports</strong> them.

For those who don't know, XFL is an <strong>open</strong> format based on zip+xml+assets used also in other products of the suite such as After Effects. The idea is great, storing the information needed in a simple format makes certain things easier:

<strong>File diffs</strong>. Now that source control is much more spread in the Flash world (sadly, not standard yet) how nice would be comparing two XFL files same as you compare two AS files?

<strong>Corruption recovery</strong>. How many FLA files have gone down the crapper for no apparent reason? How many FLA files grow in size disproportionally? Well, what do you think is easier, getting meaningful information out of a closed-binary file or out of a zip with xmls and assets? 

<strong>3rd party tools</strong>. A Flash IDE for Linux!! There's probably no business case for Adobe in porting and maintaining a Linux version of the Flash IDE, but with an open format such as XFL is only a matter of time till someone comes up with an IDE-like software for Linux. I'm almost sure it won't be as feature rich as the official IDE (takes time), but doesn't need to be. It needs to allow *me* to work in Linux while designers work in Macs.  

It also opens up a new scenario for <a href="http://swfmill.org/">SWFMill</a> or <a href="http://www.mindless-labs.com/trac/samhaxe/">SamHaxe</a>. Wondering if they are thinking already about adding XFL support (being able to compile a XFL in SWFMill, for example).

Since I think XFL is the next best thing after bread, there're a couple of things I don't fully understand:

<strong>Two formats</strong>

Why keep the FLA? If you can effectively store in XFL the same information that you can in FLA, why does Adobe maintain the 2 formats? Why don't they fully move to XFL and remove complexity from the IDE?

<strong>XFL is not the default</strong> 

Assuming for some reason that there's an actual need to keep the 2 formats, why is XFL not the default? Again, since it offers so many advantages over the FLA, why is not the default format? 

--

One problem at the moment is that <a href="http://www.flashmobileblog.com/2010/04/14/device-central-cs5-multitouch-and-debugger/comment-page-1/#comment-6374">it seems</a> the XFL specs haven't been released yet. Kind of sad, to be honest. Reverse engineer a XFL file is not a piece of cake and you can never be sure you are doing it 100% right. Also, it prevents people without CS5 to start investigating, and CS5 launch is still due in mid May.

From the tests I've been doing, it seems fairly clean and well thought through, but difficult to say due to the complexity involved. Sorry for not uploading a sample file, but since CS5 is not out yet, not sure I wouldn't get into trouble :/

Anyway, even if not perfect, I'm very happy about XFL, now need to find out about those other 249 reasons : )]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1531</wp:post_id>
		<wp:post_date>2010-04-18 13:38:11</wp:post_date>
		<wp:post_date_gmt>2010-04-18 12:38:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xfl-finally</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<category domain="category" nicename="flash"><![CDATA[flash]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Running Flash apps 24/7</title>
		<link>http://blog.zarate.tv/2010/05/03/running-flash-apps-247/</link>
		<pubDate>Mon, 03 May 2010 14:40:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1546</guid>
		<description></description>
		<content:encoded><![CDATA[[<em>UPDATE: I presented this alongside with <a href="http://www.mattpollitt.co.uk/">Matt Pollitt</a> at the <a href="http://www.lfpug.com/27th-may-2010-27052010/">London Flash Platform User Group</a>, thanks to everyone that came down to the talk.  So sorry that I couldn't stay for longer, but had a train to catch. If you have any doubts or want to say something, just leave a comment and I'll get in touch. <a href="http://www.lfpug.com/developing-flash-apps-to-run-247/">Video is now available</a>, go check it out if you missed it.</em>]

We are developing at <a href="http://ustwo.co.uk/">ustwo</a> a very interesting internal little project that needs to run 24/7. By default developers should always be very careful with memory leaks and hogging resources, but with an AIR/Flash app running non-stop every detail counts.

To top it up, the app must handle images, SWFs (AS2, AS3) and videos <strong>without going through developers</strong>. That means marketing can contact one of the designers, ask s/he to produce someething and put it to display without developer approval. Oh, and all assets are in the network, not in the machine. Scary. 

Preliminary tests show we are doing OK, we've been running the app non-stop for 4 days without a crash or needing it to reboot. The player takes and releases memory when it needs to, transitions and animations look as smooth as the first day, etc.

Check out below some of our thoughts.

<strong>FAIL, FAIL, FAIL</strong>

Shit will happen, so be ready to fail. Assets won't load, video will have the wrong codec, image will be 80mb, network will be down....

That's Google's approach to servers. Instead of having a big fat multimillion dollar server, they have a farm of 100 mini-servers and they *know* one or two *will* crash everyday. They've build their systems to cope with failure and fail gracefully.

Also embed some default content for when everything else fails. 

<strong>RELEASE, RELEASE, RELEASE</strong>

You must release resources. Explicitly remove every single listener you add, use FP 10 unloadAndStop and if you are in AIR don't hold references to File objects (more about this in another post).

If you are a good dev, the Flash player will behave most of the times... 

<strong>MONITOR, MONITOR, MONITOR</strong>

...but sometimes it won't. Or something you didn't even think was possible will happen in-your-face. You can't prevent <strong>all</strong> errors, but you can react when they happen.

At the beginning we were trusting our own app to be its own watchdog, but then we got a nasty crash and obviously the watchdog failed as well. So we've created a <a href="http://blog.zarate.tv/2010/02/08/build-tools-with-haxe/">little haXe/Neko app</a> called "<em>the helper</em>" that is automatically called every minute and that checks the state of our app.

At the moment, the helper is being automatically launched using <a href="http://developer.apple.com/mac/library/documentation/Darwin/Reference/ManPages/man5/launchd.plist.5.html#//apple_ref/doc/man/5/launchd.plist">launchd</a> (fancy cron job for OS X), but that has very interesting side effects (again, more on another post).

The helper checks if our app is running using something like:

[code lang="bash"]ps -x -o comm[/code]

And parsing the result for a relevant match. If the app is not running, it starts it again using:

[code lang="bash"]open /path/to/our/app[/code]

Since we are using AIR 2 beta, we could implement a more refined communication system using the new <a href="http://www.adobe.com/devnet/air/flex/quickstart/interacting_with_native_process.html">Native Process API</a>, but for the time being checking if the app is running "<em>the hard way</em>" is enough.

<strong>UPDATE, UPDATE, UPDATE</strong>

Find a good mechanism to auto-update your app. Most 24/7 apps are unattended apps and they might well be in a different room / building / city / country. But even if you are just a few steps away, you still want to be able to remotely deploy a new version.

We decided to implement our own update system based on GIT commits instead of relying on AIR's update framework.

<strong>LOG, LOG, LOG</strong>

Log as much as you can. You'll be happy you did when you need to find out why your app crashed. Believe me, in this case more is more, even if you face huge log files. If you are a little bit consistent you can always build automatic parsing tools for your logs or just run a simple grep to find error traces.

BTW, we settled for a log file per day to avoid massive log files.  

<strong>WARN, WARN, WARN</strong>

As I said before, most of these apps run unattended, so you want to be notified as soon as possible when there's an error. You can:

* Use a private Twitter account that people subscribe to.
* Send an email. You can do that from Flash using for example <a href="http://www.bytearray.org/?p=27">SMTP Mailer</a> and a local SMTP server.

Whatever you do, don't rely on one method only, specially Twitter, in case is down when the app needs it.

<strong>REMOTE, REMOTE, REMOTE</strong>

You either enable VNC, SSH or both. If you can't, then be prepared for walking / driving / taking the bus a lot.

--

I'll leave the details of running your apps using launchd and the peculiar way in which AIR holds "hard" references to files for another posts.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1546</wp:post_id>
		<wp:post_date>2010-05-03 15:40:03</wp:post_date>
		<wp:post_date_gmt>2010-05-03 14:40:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>running-flash-apps-247</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="air"><![CDATA[air]]></category>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="code"><![CDATA[code]]></category>
		<category domain="category" nicename="development"><![CDATA[development]]></category>
		<category domain="category" nicename="flash"><![CDATA[flash]]></category>
		<category domain="category" nicename="haxe"><![CDATA[haxe]]></category>
		<category domain="category" nicename="mac"><![CDATA[mac]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A folder is not a file</title>
		<link>http://blog.zarate.tv/2010/06/19/a-folder-is-not-a-file/</link>
		<pubDate>Sat, 19 Jun 2010 16:23:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1594</guid>
		<description></description>
		<content:encoded><![CDATA[That seems pretty obvious, right? Well, not for quite a few people. Just check out the opening sentence on the ActionScript reference for the <a href="http://help.adobe.com/en_US/AS3LCR/Flash_10.0/flash/filesystem/File.html">File</a> object:

<blockquote>A File object represents a path to a file <strong>or directory</strong>.</blockquote>

Uh? Why? When you bring this up some people start banging about old paradigms such as "<em>system nodes</em>" and other ancient stuff. Well, I think whoever designed the AIR API lost a great opportunity to make a difference and start applying some usability to API design. This is most likely due to the old inferiority complex about ActionScript being a "serious" language that Java and C developers cannot look down to.

Well, how do you think Java and C developers explain it to Grandma?

<blockquote>Yeah, you have 2 types of files, one is for storing information, the other is a special type of file which can contain other files (of the first type) and other special files like itself.</blockquote>

Or

<blockquote>Yeah, you have files for your docs, and folders where you can group other files and folders. Y'know, like real life files and folders.</blockquote>

Best part is, since they are forcing the concept so much, they end up with ugly APIs and code. Let's see:

Smelly code:
[code lang="actionscript"]// WTF? I want a folder but have to create a new File object? 
var folder : File = new File(path);[/code]
[code lang="actionscript"]// The code below compiles although it doesn't make sense
// cause a file can't contain files. Wondering if returns 0 or throws an error
var file : File = new File(path);
var files : Array = file.getDirectoryListing();[/code]

Smelly API: 
<a href="http://help.adobe.com/en_US/AS3LCR/Flash_10.0/flash/filesystem/File.html#isDirectory">File.isDirectory</a> says it pretty much all:

<blockquote>Indicates whether <strong>the reference</strong> is to a directory. The value is true if the File object points to a directory; false otherwise.</blockquote>

"<em>The reference</em>". Maybe they should've called the class Reference instead of File, then?

Also, if files and folders are the same, why there is <a href="http://help.adobe.com/en_US/AS3LCR/Flash_10.0/flash/filesystem/File.html#deleteDirectory()">File.deleteDirectory(deleteDirectoryContents)</a> vs <a href="http://help.adobe.com/en_US/AS3LCR/Flash_10.0/flash/filesystem/File.html#deleteFile()">File.deleteFile()</a>? Sure there should be a common method called File.delete(), right? Well, turns out that most systems don't allow you to remove a non-empty folder without confirmation and thus the <em>deleteDirectoryContents</em> parameter.

So, convinced now? If you are not, then enjoy the official API. If you are, check out <a href="http://github.com/zarate/xapi">XAPI</a> for AIR : )

Benefits (IMHO):

* No instances, all methods are static.
* Different <a href="http://github.com/zarate/xapi/blob/master/src/air/xa/File.as">File</a> and <a href="http://github.com/zarate/xapi/blob/master/src/air/xa/Folder.as">Folder</a> APIs with consistent method names.
* Much simpler API. Compare:

Reading the contents of a text file in plain AIR:

[code lang="actionscript"]var file : File = new File(path);
var stream : FileStream = new FileStream();
stream.open(file, FileMode.READ);
var content : String = stream.readUTFBytes(stream.bytesAvailable);
stream.close();[/code]

Using XAPI:
[code lang="actionscript"]var content : String = xa.File.read(path);[/code]

You decide : )

XAPI for AIR hasn't been released yet, so if you can't wait just go and checkout the code from Github. Once it's done it will be released as a SWC, I guess.

Extra ball: XAPI for AIR would be almost 100% identical to XAPI for haXe which was the original implementation (differences due to platform limitations), so if  you are up to developing <a href="http://blog.zarate.tv/2010/02/08/build-tools-with-haxe/">build tools using haXe</a> the jump would be much simpler cause you would be using the same (X)API.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1594</wp:post_id>
		<wp:post_date>2010-06-19 17:23:47</wp:post_date>
		<wp:post_date_gmt>2010-06-19 16:23:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-folder-is-not-a-file</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="air"><![CDATA[air]]></category>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="haxe"><![CDATA[haxe]]></category>
		<wp:postmeta>
			<wp:meta_key>jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/bBJKcx]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/bBJKcx]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1463</wp:comment_id>
			<wp:comment_author><![CDATA[Simon Richardson]]></wp:comment_author>
			<wp:comment_author_email>me@simonrichardson.info</wp:comment_author_email>
			<wp:comment_author_url>http://www.simonrichardson.info</wp:comment_author_url>
			<wp:comment_author_IP>95.146.200.124</wp:comment_author_IP>
			<wp:comment_date>2010-06-19 19:36:26</wp:comment_date>
			<wp:comment_date_gmt>2010-06-19 18:36:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have to agree with you. It feels like Adobe just slapped this together without thought or reason. This is why people do frown on Actionscript from other languages, because of this exact case.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1509</wp:comment_id>
			<wp:comment_author><![CDATA[Pimm Hogeling]]></wp:comment_author>
			<wp:comment_author_email>pimm@ilumbo.org</wp:comment_author_email>
			<wp:comment_author_url>http://ilumbo.org/</wp:comment_author_url>
			<wp:comment_author_IP>86.90.133.146</wp:comment_author_IP>
			<wp:comment_date>2010-06-22 17:54:54</wp:comment_date>
			<wp:comment_date_gmt>2010-06-22 16:54:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for your explanation.

I personally feel a lot for working with instances. Particularly because you can pass instances around. When using XAPI, you will have to pass the path to the file - as a string - around, which is less flexible.

Obviously, it is super easy to wrap XAPI so it has the API that I'd prefer.

And yes, I agree that being able to write one liners can be super powerful.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1496</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>78.105.2.37</wp:comment_author_IP>
			<wp:comment_date>2010-06-21 17:17:50</wp:comment_date>
			<wp:comment_date_gmt>2010-06-21 16:17:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Pimm, thanks : )

For me, they way I use XAPI, the fact that I can get a lot done with "one liners" is a good thing. To read or write a file, I don't need to create an instance of the File class and work with it.

Also, I think it prevents memory leaks in AIR since if you use XAPI you just cannot hold a reference to a file. As a matter of fact, this is something I specially don't like about AIR's API. File objects are actual pointers to files in the system. 2 months ago I was working on a project and, used to work with haXe, didn't realize this until I started to get errors when those files were removed from the system (and I was trying to access them). I'm not saying it doesn't make sense, I say XAPI prevents you from this mistake (although I guess it could be slower on heavy benchmarks).

Cheers!

J]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1520</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>78.105.2.37</wp:comment_author_IP>
			<wp:comment_date>2010-06-23 14:30:07</wp:comment_date>
			<wp:comment_date_gmt>2010-06-23 13:30:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why's passing an instance of the file object more flexible than passing the path? I reckon that if you are making several actions on the same file it could be slower (since with XAPI you create an instance every time you use the API), but not so sure about flexibility.

Maybe is a different way of coding?

Cheers and thanks for the debate : )

J]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1495</wp:comment_id>
			<wp:comment_author><![CDATA[Pimm Hogeling]]></wp:comment_author>
			<wp:comment_author_email>pimm@ilumbo.org</wp:comment_author_email>
			<wp:comment_author_url>http://ilumbo.org/</wp:comment_author_url>
			<wp:comment_author_IP>86.90.133.146</wp:comment_author_IP>
			<wp:comment_date>2010-06-21 16:52:56</wp:comment_date>
			<wp:comment_date_gmt>2010-06-21 15:52:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Juan,

Thank you - on behalf of all the AS3/haXe developers - for doing this. It's always good to propose new ways of doing things.

One question comes to mind: you list "no instances, all methods are static" as a benefit. Could you explain why you believe static methods are better than instances, in this case?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1646</wp:comment_id>
			<wp:comment_author><![CDATA[Pimm Hogeling]]></wp:comment_author>
			<wp:comment_author_email>pimm@ilumbo.org</wp:comment_author_email>
			<wp:comment_author_url>http://ilumbo.org/</wp:comment_author_url>
			<wp:comment_author_IP>86.90.133.146</wp:comment_author_IP>
			<wp:comment_date>2010-07-09 12:03:18</wp:comment_date>
			<wp:comment_date_gmt>2010-07-09 11:03:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When using instances, you can also use the power of polymorphism. However, as you mentioned, it does require more lines of code.

Different way of coding, I'm sure.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>No more unfinis</title>
		<link>http://blog.zarate.tv/2010/06/30/no-more-unfinis/</link>
		<pubDate>Wed, 30 Jun 2010 10:08:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1618</guid>
		<description></description>
		<content:encoded><![CDATA[hed emails sent :/

We've all done it, we've all received them:

<blockquote>Sorry, sent the email too fast :/ I was saying...</blockquote>

The email was sent <em>too fast</em>. Gmail helps out a little bit if you try to send an email without subject:

<img src="http://blog.zarate.tv/wp-content/uploads/2010/06/gmail_preventig_email_without_subject.png" alt="" title="Gmail preventing sending an email without subject" width="489" height="257" class="alignnone size-full wp-image-1619" />

But to me that's not enough because most of the times when I get to write the Body of the email, the recipients and Subject have been already filled, that's what email clients lead you to. First <em>To</em>, then <em>CC</em>, <em>BCC</em>, <em>Subject</em> and finally the <em>Body</em>. So by the time you get to the Body, you've most likely filled both To and Subject and if for some reason you are too quick to fire up, all the mandatory fields are filled and validation looking for empty fields passes.

To prevent this I've taught myself to leave empty To and Subject fields and write the Body first. Only when I've written (and read-proof) the Body I fill To and Subject. This has reduced a lot the number of unfinished emails I send. 

So I was thinking about re-arranging email clients like this:

<img src="http://blog.zarate.tv/wp-content/uploads/2010/06/mail.png" alt="" title="Re-organized email client, body first, then subject, recipients at the end" width="1204" height="902" class="alignnone size-full wp-image-1623" />

See? First the Body, then Subject and the recipients of the email at the end.

Of course this won't help much when replaying to an email, since both Subject and recipients would be automatically filled, but the current layout doesn't prevent that either, so that's a tie.

 You guys think this makes sense? Would this help reduce the number of accidentally emails sent? Or am I just talking non-sense?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1618</wp:post_id>
		<wp:post_date>2010-06-30 11:08:12</wp:post_date>
		<wp:post_date_gmt>2010-06-30 10:08:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>no-more-unfinis</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="usability"><![CDATA[usability]]></category>
		<wp:postmeta>
			<wp:meta_key>jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2010/06/30/no-more-unfinis/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/a65blW]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Nexus One on Ubuntu: mind your cable!</title>
		<link>http://blog.zarate.tv/2010/07/31/nexus-one-on-ubuntu-mind-your-cable/</link>
		<pubDate>Sat, 31 Jul 2010 09:19:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1636</guid>
		<description></description>
		<content:encoded><![CDATA[I've finally started to do some Android development at <a href="http://www.ustwo.co.uk/">the studio of dreams™</a>. I've started by fixing some silly bugs and adding minor features on several of our <a href="http://android.ustwo.co.uk/apps">apps</a> and now I'm facing my first serious task, which is abstracting Facebook and Twitter integration into a simpler to use library. Anyway.

When working at home I'd rather use Ubuntu instead of OS X but couldn't get <a href="http://developer.android.com/sdk/eclipse-adt.html">ADT</a> to find out my Nexus One, so I was stuck on the emulator which was not feasible since one of the apps (<a href="http://android.ustwo.co.uk/tagged/Dot%E2%84%A2">.™</a>) uses the accelerometer. I needed to test on the real device.

First I went to the <a href="http://developer.android.com/guide/developing/device.html">Android documentation</a> and then after Googling quite a bit I finally ended up in this very good tutorial: <a href="http://alan.lamielle.net/2010/01/22/nexus-one-usb-in-ubuntu-9-10">Nexus One USB in Ubuntu 9.10</a>. But still no luck. ADB was still showing <em>???????????</em> instead of my precious. Finally, somewhere, read a comment about the USB cable being involved in the party as well.

Since I don't want to carry around the USB cable, 3 weeks ago I went out and bought an extra one so I can keep one home and one in the office. First went to a Carphone Warehouse shop and they told me generic cables will NOT charge the phone. Transferring files would be ok, but no charging. After that I went to a T-Mobile shop and they told me that yes, the generic cable would indeed charge the phone. Are you sure? <em>Yes</em>. Are you <strong>really</strong> sure? <em>Yes</em>. Ok, so be it.

And indeed charges the phone, the guy at T-Mobile was right. However, it prevents USB debugging... in <em>Ubuntu</em>. Cause the same generic cable with the same Nexus works ok on OS X, but it prevents testing on Ubuntu. God knows what kind of shit there's going on in there (why everything works on OS X, but on Ubuntu files and charging do, debugging does not), but just keep it in mind:

<strong>Mind your cable!</strong>

(at least on Linux)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1636</wp:post_id>
		<wp:post_date>2010-07-31 10:19:08</wp:post_date>
		<wp:post_date_gmt>2010-07-31 09:19:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nexus-one-on-ubuntu-mind-your-cable</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[android]]></category>
		<category domain="category" nicename="ustwo"><![CDATA[ustwo]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/b1tHUH]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2010/07/31/nexus-one-on-ubuntu-mind-your-cable/]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3603</wp:comment_id>
			<wp:comment_author><![CDATA[sole]]></wp:comment_author>
			<wp:comment_author_email>listas@soledadpenades.com</wp:comment_author_email>
			<wp:comment_author_url>http://soledadpenades.com</wp:comment_author_url>
			<wp:comment_author_IP>78.86.226.53</wp:comment_author_IP>
			<wp:comment_date>2010-10-19 16:43:37</wp:comment_date>
			<wp:comment_date_gmt>2010-10-19 15:43:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Standard Mini USB = http://en.wikipedia.org/wiki/File:Usb_connectors.JPG

I see in the USB article that the Nexus One uses a "Micro" USB... and it's not filed under the 'proprietary' connectors list, so in theory it should work, but I see it doesn't! ñ_ñ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3410</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>86.26.8.206</wp:comment_author_IP>
			<wp:comment_date>2010-10-10 19:36:58</wp:comment_date>
			<wp:comment_date_gmt>2010-10-10 18:36:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey : )

Just bought one in a TMobile shop. What you mean it doesn't use a standard mini USB? The generic one I'm still using fits perfectly and recharges the phone without problems.

I have to say though, that since I wrote the post I've seen some weird things the Android SDK and the phone in Ubuntu. I'll give it another try!

Cheers,

J]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3409</wp:comment_id>
			<wp:comment_author><![CDATA[sole]]></wp:comment_author>
			<wp:comment_author_email>listas@soledadpenades.com</wp:comment_author_email>
			<wp:comment_author_url>http://soledadpenades.com</wp:comment_author_url>
			<wp:comment_author_IP>78.86.226.53</wp:comment_author_IP>
			<wp:comment_date>2010-10-10 19:24:04</wp:comment_date>
			<wp:comment_date_gmt>2010-10-10 18:24:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow, that "generic cable" issue is quite odd. What sort of generic cable was he referring to? I mean, the Nexus One doesn't use an standard mini USB connector, but their own connector. I thought the cables which fit the phone were all HTC branded, maybe you bought one which isn't "HTC proper" and has some incompatible pins.

I'm using only HTC cables so I haven't encountered that issue. Good to know, if it's true. Or maybe your computer was just missing a restart...? :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Dual booting between Snow Leopard and Ubuntu 10.04</title>
		<link>http://blog.zarate.tv/2010/08/24/dual-booting-between-snow-leopard-and-ubuntu-10-04/</link>
		<pubDate>Tue, 24 Aug 2010 11:50:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1641</guid>
		<description></description>
		<content:encoded><![CDATA[There are a million tutos out there about dual booting, but I just did it today and found it easier than everything I could find and definitely simpler than the last time I had to do it:

* Boot OSX and run the Disk Utility tool. Create a new partition using the free space in your HD. Don't format it, just leave it as free space.
* Download and install <a href="http://refit.sourceforge.net/">rEFIt</a>. Once you've done that, you can setup Linux as the default OS by editing refit.conf and uncommenting #legacyfirst.
* Insert Ubuntu's CD and restart.
* Hold the ALT key while booting up so you are offered all boot options. Select Ubuntu's CD and install.
* DONE.

No need for Bootcamp or anything, it's as simple as that.

Just a note about how I'm installing Ubuntu these days. Read sometime ago somewhere (sorry, no link) about being able to reinstall Ubuntu without losing your data. It goes like this. When installing Ubuntu, choose manual partitions. You need to create 3 of them, in this order:

* System partition: pick up the space you want, but 15 - 20gb should be enough since it's going to be for the system only. Select "/" as the mounting point.
* SWAP: select it on the combo and pick up at least the size of your RAM.
* Everything else, for the home partition. Select "/home" as the mounting point.
* DONE.

Now, next time you want to reinstall Ubuntu, if you follow the same partition scheme, you will boot up to the new system and all your data will be there. And with "all the data" I mean <em>all</em> the data: bookmarks, browser history, files, subversion sites and credentials.... Since in the Linux world all user data is (or should be) stored in your home directory, and you don't touch that one when reinstalling, you boot up to a new system with your old data in place. I call that a "dirty" installation as opposed to a "clean" installation when I back up all the files and completely wipe out the hard disk.

As per Ubuntu on the MacBookPro, it's going fairly well. Haven't touched the console for the installation. Just used the proprietary hardware drivers manager (System > Administration > Hardware drivers) for the WiFi and the graphic card. Have to say that after trying the NVIDIA closed drivers I'm sticking with the default ones, seem to do the job for me. Only if you want the F keys to work as normal human beings would expect, you go through <a href="https://help.ubuntu.com/community/AppleKeyboard#Ubuntu%209.04%20and%20Newer">this</a> (using the .conf file method).

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1641</wp:post_id>
		<wp:post_date>2010-08-24 12:50:33</wp:post_date>
		<wp:post_date_gmt>2010-08-24 11:50:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dual-booting-between-snow-leopard-and-ubuntu-10-04</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<category domain="category" nicename="mac"><![CDATA[mac]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2010/08/24/dual-booting-between-snow-leopard-and-ubuntu-10-04/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[ New post: Dual booting between Snow Leopard and Ubuntu 10.04 http://bit.ly/8ZH8x0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/8ZH8x0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Running SOSLogger in Ubuntu</title>
		<link>http://blog.zarate.tv/2010/09/08/running-soslogger-in-ubuntu/</link>
		<pubDate>Wed, 08 Sep 2010 17:04:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1650</guid>
		<description></description>
		<content:encoded><![CDATA[Just a quick note on this one.

* Install Java.
* Download the <a href="http://sos.powerflasher.com/fileadmin/sosmax/sos_max.zip">cross-platform SOS package</a>, unzip it somewhere. Just as a precaution, I usually remove spaces from folder names.
* Create a text file called <em>launcher.sh</em> in SOS' folder (update with your path):

[code lang="bash"]#!/bin/bash
cd ~/software/sos_max
java -jar SOS.jar[/code]

* Give it exec rights: <em>chmod +x launcher.sh</em>
* Right click on an empty space on your desktop, then pick up Create Launcher. Give it a name, an icon, browse for the path to the script you created in the step below and you are good to go. You can now launch it just by clicking on the icon on your desktop.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1650</wp:post_id>
		<wp:post_date>2010-09-08 18:04:21</wp:post_date>
		<wp:post_date_gmt>2010-09-08 17:04:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>running-soslogger-in-ubuntu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="flash"><![CDATA[flash]]></category>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/acJgpk]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2010/09/08/running-soslogger-in-ubuntu/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Working with GIT submodules</title>
		<link>http://blog.zarate.tv/2010/10/05/working-with-git-submodules/</link>
		<pubDate>Tue, 05 Oct 2010 21:23:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1658</guid>
		<description></description>
		<content:encoded><![CDATA[Thanks to the extraordinary amount of Open Source ActionScript projects it is very common that we handle 3-4 different external libraries per project. PureMVC, Signals, GTween... How do you keep track of all that?!

SVN has <a href="http://svnbook.red-bean.com/en/1.5/svn.advanced.externals.html">externals</a> and GIT has <a href="http://book.git-scm.com/5_submodules.html">submodules</a>. The idea is simple: make your project by a composition of other projects.

This is a mini tutorial / note to self post on how to do it for GIT, mostly a mix and match of <a href="http://chrisjean.com/2009/04/20/git-submodules-adding-using-removing-and-updating/">Git Submodules: Adding, Using, Removing, and Updating</a>, <a href="http://woss.name/blog/2008/4/9/using-git-submodules-to-track-plugins.html">Using git submodules to track plugins</a>, <a href="https://git.wiki.kernel.org/index.php/GitSubmoduleTutorial">this tutorial</a> and the official documentation.

Some important stuff to keep in mind:

* A submodule is just get a GIT repository within another GIT repository.

* When you add a submodule you are not only adding its files, <strong>you also add a pointer to the specific commit at the time you added it</strong>. Let's say your repo is in revision 10 and the submodule is in revision 100. After sometime you need to update the submodule to revision 101. Once you do that, you need to also update the pointer of the main repository to the submodule, so it's pointing to the latest version, not the initial one when you added the submodule. Sorry, can't express that better! We'll see how to do this in a moment.

* You have to manually force an update on the submodule to get its latest changes, as opposed to SVN externals where an update in the main repository automatically triggers an update in the submodule. IMHO, this is <strong>good</strong>, cause it prevents undesired updates.

Enough talking, let's go for it. 

Let's assume you have your MAIN repository running and that you want to add <a href="http://github.com/robertpenner/as3-signals">AS3 signals</a> as a submodule in <em>lib/signals</em>:

[code lang="bash"]git submodule add git://github.com/robertpenner/as3-signals.git lib/signals
git commit -m "Adding AS3 signals as a submodule."[/code]

That's it, you got yourself a copy of AS3 signals straight from the main repository. Now let's say a new feature gets added or a bug is fixed. You need to update your submodule. Remember, you have to manually do this. To update a specific submodule just browse to it and run a pull:

[code lang="bash"]cd lib/signals
git pull[/code]

That has brought you the updates of the submodule, <strong>but you also have to tell GIT you are keeping those changes</strong>. To do so, go back to the root folder and commit (what you commit is a new pointer to a different commit in the submodule repository):

[code lang="bash"]cd ../../
git commit -a -m "Updating submodule because bla bla"[/code]

Cloning a project with submodules is a little bit different that usual, but no problem if done correctly. The issue is that when you clone the submodule its head is "detached", is not pointing to a branch. To avoid so run the following when cloning a project with submodules:

[code lang="bash"]git clone project/path/or/url
git submodule update --init
cd lib/signals
git checkout master
cd ../..
git config submodule.lib/signals.update merge
# we are using lib/signals as the name, cause that's where we checked it out[/code]

This way when you run updates you won't need to re-check out the branch you were in.

Once the project is correctly checked out and new changes are coming other devs get the submodule updates using:

[code lang="bash"]git pull # to update the pointer
git submodule update # to get the actual update[/code]

If you make a mistake while adding the submodule sadly there's no single command to remove a it, you have to do it by hand (got this from <a href="http://pitupepito.homelinux.org/?p=24">How to remove a git submodule</a>):

* Edit both .gitmodules and .git/config and remove the lines corresponding to the submodule you want to remove.
* Run: 

[code lang="bash"]git rm --cached lib/signals
rm -rf lib/signals
git commit -a -m "Removing signals as a submodule"[/code]

Also, if you need to setup a SVN repository as a GIT module, read <a href="http://stackoverflow.com/questions/465042/is-it-possible-to-have-a-subversion-repository-as-a-git-submodule">Is it possible to have a subversion repository as a git submodule?</a>

Basic GIT stuff as the bonus track:

[code lang="bash"]# change gedit for "mate" or your text editor of choice
git config core.editor "gedit"

# set up credentials for this project only
git config user.name "You Name Here"
git config user.email "your@email.com"[/code]

Set up Beyond Compare as your editor for GIT diffs using <a href="http://code.google.com/p/zcode/source/browse/trunk/lamescripts/bcompare_git">this lamescript</a>.

HTH!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1658</wp:post_id>
		<wp:post_date>2010-10-05 22:23:10</wp:post_date>
		<wp:post_date_gmt>2010-10-05 21:23:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>working-with-git-submodules</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[code]]></category>
		<category domain="category" nicename="source-control"><![CDATA[source control]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/cN8MRi]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2010/10/05/working-with-git-submodules/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Love gadgets, hate slavery</title>
		<link>http://blog.zarate.tv/2010/11/14/love-gadgets-hate-slavery/</link>
		<pubDate>Sun, 14 Nov 2010 09:11:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1714</guid>
		<description></description>
		<content:encoded><![CDATA[It was something everyone knew all along, but the story about the <a href="http://www.engadget.com/2010/05/19/the-fate-of-a-generation-of-workers-foxconn-undercover-fully-tr/">Foxconn workers</a> was the wake up call for me. 

It was just too much to ignore it.

I'm a geek and as such I LOVE gadgets but it's just impossible to ignore the conditions of the workers that actually make them. It's just plain slavery, to anyone's standards. Incredible long hours, barely legal wages, almost no rights for the employees...

Ok, so what could I do? Turns out, not a lot.  

Shortly after <a href="http://soledadpenades.com/2010/06/04/made-in-china/">Sole tried to find out one single hardware manufacturer with factories anywhere outside the far East</a>.... without luck. So even if you want to look for hardware produced in the "first world" where you somehow assume the conditions for the workers would be better, you won't find any.

And we are not talking about an industry where margins are really low. 

In one side you have a bunch of <del datetime="2010-11-14T08:42:27+00:00">arseholes</del> <a href="http://www.demotix.com/news/340732/ipad-reaches-uk-regent-steet-apple-store-celebrates-it-feast">geeks queuing for days to buy an iPad</a> (so surely money can't be much of an issue) and on the other side you have companies such Apple, Intel, Microsoft, AMD, etc. making shit loads of money, so why don't we spread the wealth a little bit, shall we?

Comes in the <a href="http://www.fairtradehardware.com/">Fair Trade Hardware</a> manifesto:

<blockquote>* We are willing to pay some extra money as long as that money goes to the people working in the factories.
    * Companies cannot excuse themselves arguing that they comply with local laws, because some of those laws are unjust.
    * Companies should also help by reducing their margins and passing those savings on to their workforce.</blockquote>

C'mon. If you are working in the IT industry, you can't be doing that bad, money-wise. Even if we are not in the DotCom days any more, you still have Xboxes, PS3, iPads, iPods, digital cameras, laptops, flat HD TVs, smart phones... I'm sure you can pay a little extra. And same goes for the companies making them, they are big enough to be able to reduce their fat 6-figure bonuses by 10% and pass that on to the people that are responsible in the first place for those bonuses.

So, if you give a shit about any of that, just go to <a href="http://www.fairtradehardware.com/">Fair Trade Hardware</a> and leave a comment, post about it, tweet it, facebook it, let other people know. Who knows, we might get even heard somewhere and make a difference.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1714</wp:post_id>
		<wp:post_date>2010-11-14 10:11:56</wp:post_date>
		<wp:post_date_gmt>2010-11-14 09:11:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>love-gadgets-hate-slavery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hardware"><![CDATA[hardware]]></category>
		<category domain="category" nicename="the-industry"><![CDATA[the industry]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/b4wjCn]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2010/11/14/love-gadgets-hate-slavery/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>App stores, the more, the merrier</title>
		<link>http://blog.zarate.tv/2011/01/05/app-stores-the-more-the-merrier/</link>
		<pubDate>Wed, 05 Jan 2011 20:47:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1729</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.amazonappstoredev.com/2011/01/introducing-the-amazon-appstore-developer-portal.html">Amazon is about to open its own app store</a>. I say that's a good thing. Both for users <em>and</em> devs.

Going to ask the same question I asked on Twitter: 

<blockquote>As a user, would you rather have Tesco only or Tesco + 10 other supermarkets + independent deli shops?</blockquote>

If you are up for one single big supermarket only, good luck with that. I rather have no monopoly and let the competition drive innovation. Google's official Android Market sucks big time. The web interface is a joke and the mobile app just about. Look at what <a href="https://developer.amazon.com/help/faq.html">Amazon is bringing to the table</a>:

* App pre-orders
* Video uploads
* Content is tested
* Switch an app from free to paid as you like

Now take that <em>in-your-face</em> Google. What you think Google is going to do? Stay still and loose app share or put its market together by matching what Amazon has done and offer even better features? 

What about an app store with an API so I can publish, update and manage apps as part of an automated process? What about vertical app stores (games, health, education, porn, for TV only, for cars only, ...)? What about luxury app stores? What about app stores that are successful cause they do a service by getting rid of the shitty apps and you only find quality?

Yeah, as a developer Amazon would be yet another app store to deal with, but I've never heard brands such as CocaCola or Nike  complaining about <em>more</em> places to sell. 

<strong>Oh, boy, several app stores, that is so confusing for users!</strong>

No, it's not. Does your granny get confused because she can buy milk both at Tesco and Sainsbury's? No, she doesn't. She buys in either:

a) what is closest
b) what is cheaper
c) what she trusts the most

a) doesn't apply on the internet (although it kind of does if you consider localisation), so she will choose either what's cheaper or what she trusts the most. Is there a chance that she will buy on a dodgy app store? Well, yeah. That's where users need to learn to apply common sense in the Internet, same as they do on the real world. Does it look too good to be true? It probably is, so stay well away. Simples.

And by the way, I think the way to go is buying either off the original application website or following a link from there. Example, you want to buy ustwo™'s most anti-social app <a href="http://itunes.apple.com/gb/app/happy-snapper/id399423061?mt=8">Happy Snapper™</a> (coming soon to Android!)? Either buy at <a href="http://android.ustwo.co.uk/">android.ustwo.co.uk</a> or from link in the official page to your app store of choice. As with real life products, a brand (ustwo™) will choose where to sell (Android Market, Amazon, <a href="http://www.getjar.com/">GetJar</a>, direct, etc).

And remember, <strong>the fact that there are several app stores does not force users to buy nor devs to sell in all of them</strong>.

Happy that I can choose.

PS: not sure this is possible, but I wish app stores legalese would allow a one-to-rule-them-all dev entry point. IE: I upload my app to ONE website and it automatically uploads it to my app stores of choice. Anyone?
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1729</wp:post_id>
		<wp:post_date>2011-01-05 21:47:35</wp:post_date>
		<wp:post_date_gmt>2011-01-05 20:47:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>app-stores-the-more-the-merrier</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[android]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/hRZa0d]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2011/01/05/app-stores-the-more-the-merrier/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Alchemy, what&#039;s Adobe waiting for?</title>
		<link>http://blog.zarate.tv/2011/02/06/alchemy-whats-adobe-waiting-for/</link>
		<pubDate>Sun, 06 Feb 2011 10:27:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1748</guid>
		<description></description>
		<content:encoded><![CDATA[I've been lately having conversations with some people about "fast SWFs" and always came to the same question: <strong>what's Adobe waiting for?</strong> Alchemy has been around for +2 years and still there's no official way to use the Alchemy opcodes that give you extra performance. Adobe has released FP 10.1 and will release 10.2 sometime soon, and haven't heard absolutely anything about <a href="http://labs.adobe.com/technologies/alchemy/">Alchemy</a> coming up.

On top of the options <a href="http://blog.zarate.tv/2008/12/05/want-it-fast/">I wrote about back in 2008</a> now there's a third way of accessing those hidden FP APIs: <a href="http://code.google.com/p/apparat/">Apparat</a>. So you can use Alchemy, haXe and Apparat but you cannot use an officially supported API. I don't think this is because those Flash Player APIs are not stable, they are. Projects like the <a href="http://www.audiotool.com/">AudioTool</a> wouldn't be possible without them. 

So why is Adobe not pushing for this? With 10.1 and the Flash Player running on Android devices there is the need more than ever to squeeze every last drop of performance out of the player. Does Adobe feel providing ActionScript APIs for this would require a new version of the language? Well, vectors were added without taking it to AS4 or at least AS3.1 (which should've happened IMHO).

Even if Adobe doesn't see a market for Alchemy itself (doubt it, take a look at the <a href="http://forums.adobe.com/community/labs/alchemy">forums</a> or the <a href="http://unitzeroone.com/blog/2011/01/21/demo-video-of-webm-being-decoded-by-flash/">Flash WebM decoder by Ralph Hauwert</a>), adding ActionScript APIs for the Alchemy opcodes shouldn't be too hard?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1748</wp:post_id>
		<wp:post_date>2011-02-06 11:27:06</wp:post_date>
		<wp:post_date_gmt>2011-02-06 10:27:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>alchemy-whats-adobe-waiting-for</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<category domain="category" nicename="alchemy"><![CDATA[alchemy]]></category>
		<category domain="category" nicename="apparat"><![CDATA[apparat]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/hNI9pt]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2011/02/06/alchemy-whats-adobe-waiting-for/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AS3 variable scopes and shadowing</title>
		<link>http://blog.zarate.tv/2011/03/19/as3-variable-scopes-and-shadowing/</link>
		<pubDate>Sat, 19 Mar 2011 10:06:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1773</guid>
		<description></description>
		<content:encoded><![CDATA[[code lang="actionscript"]myVar = "some value here";
trace(myVar);
var myVar : String;[/code]

<strong>Why on earth does this compile?</strong>

It does not only compile, it runs perfectly fine since once compiled all variable declarations are moved to the top of the function. <a href="http://www.senocular.com/?entry=451">Senocular posted about it long ago</a>.

Something like that simply won't compile in haXe or Android, and I think it's safer.

We recently almost screwed up a demo because of something similar: <a href="http://en.wikipedia.org/wiki/Variable_shadowing">variable shadowing</a>. In a nutshell, you define two variables with the same name and type in two different scopes. We are used to see this a lot in parameters:

[code lang="actionscript"]function(wadus : String) : void
{
   this.wadus = wadus;
}[/code]

And I'm starting to think that maybe we should auto-impose the good old "_" rule to class members:

[code lang="actionscript"]function(wadus : String) : void
{
   this._wadus = wadus;
}[/code]

The thing is that if this is not enforced by the compiler, it's quite easy to forget about it.

Also I don't like that you can do things like this:

[code lang="actionscript"]for(var x : int = 0; x < 10; x++)
{
	trace("x: " + x);
}
			
trace("final: " + x);[/code]

That <em>x</em> belongs to the for loop, you shouldn't be allowed to access it outside of it. I don't know, the AS3 scope system always surprises me and most of the times not in a good way :/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1773</wp:post_id>
		<wp:post_date>2011-03-19 11:06:27</wp:post_date>
		<wp:post_date_gmt>2011-03-19 10:06:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>as3-variable-scopes-and-shadowing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[android]]></category>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="haxe"><![CDATA[haxe]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/eSDpFo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2011/03/19/as3-variable-scopes-and-shadowing/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>8409</wp:comment_id>
			<wp:comment_author><![CDATA[Cay]]></wp:comment_author>
			<wp:comment_author_email>ventdaval@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://cay.cl</wp:comment_author_url>
			<wp:comment_author_IP>188.84.4.166</wp:comment_author_IP>
			<wp:comment_date>2011-03-19 15:30:47</wp:comment_date>
			<wp:comment_date_gmt>2011-03-19 14:30:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Agree on everything, except the for loop: it doesn't create a new scope, same with if statements, etc... 
And in that line, "with" has always annoyed the hell out of me :P]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1300545047.8837";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:67:{s:15:"comment_post_ID";s:4:"1773";s:14:"comment_author";s:3:"Cay";s:20:"comment_author_email";s:19:"ventdaval@gmail.com";s:18:"comment_author_url";s:13:"http://cay.cl";s:15:"comment_content";s:172:"Agree on everything, except the for loop: it doesn't create a new scope, same with if statements, etc... 
And in that line, "with" has always annoyed the hell out of me :P";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:12:"188.84.4.166";s:10:"user_agent";s:129:"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.151 Safari/534.16";s:8:"referrer";s:67:"http://blog.zarate.tv/2011/03/19/as3-variable-scopes-and-shadowing/";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:67:"http://blog.zarate.tv/2011/03/19/as3-variable-scopes-and-shadowing/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:3:"Cay";s:10:"POST_email";s:19:"ventdaval@gmail.com";s:8:"POST_url";s:13:"http://cay.cl";s:12:"POST_comment";s:172:"Agree on everything, except the for loop: it doesn't create a new scope, same with if statements, etc... 
And in that line, "with" has always annoyed the hell out of me :P";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1773";s:26:"POST_akismet_comment_nonce";s:10:"8512a0b0c9";s:18:"POST_bb2_screener_";s:23:"1300544540 188.84.4.166";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"TYS@FkWjtW4AABo6Gt0AAAAC";s:10:"SCRIPT_URL";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:42:"http://blog.zarate.tv/wp-comments-post.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:15:"HTTP_CONNECTION";s:5:"close";s:12:"HTTP_REFERER";s:67:"http://blog.zarate.tv/2011/03/19/as3-variable-scopes-and-shadowing/";s:14:"CONTENT_LENGTH";s:3:"379";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:21:"http://blog.zarate.tv";s:15:"HTTP_USER_AGENT";s:129:"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.151 Safari/534.16";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:90:"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"es-ES,es;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:11:"HTTP_COOKIE";s:0:"";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:12:"188.84.4.166";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:48:"/home/zarate/blog.zarate.tv/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"51128";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1300545046";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Find manufacturer and device model from AIR</title>
		<link>http://blog.zarate.tv/2011/03/20/find-manufacturer-and-device-model-from-air/</link>
		<pubDate>Sun, 20 Mar 2011 00:45:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1785</guid>
		<description></description>
		<content:encoded><![CDATA[[UPDATE]

This can be done and in pure and simple AS3! Read <a href="http://www.funky-monkey.nl/blog/2010/11/11/getting-device-properties-like-os-model-brand-sdk-version-and-cpu-on-air-for-andoid/">Getting Device Properties like OS, Model, Brand, SDK Version and CPU on AIR for Andoid</a> and take a look to <a href="https://github.com/funky-monkey/Android-Native-Device-Info">Android Native Device Info</a>.

Thanks to Héctor for the link!

[/UPDATE]

You can't.

You thought I had the solution? Sorry.

Let's say you have an AIR app and you want to find out in which device your app is running. You could take a look to <a href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/system/Capabilities.html#os">Capabilities.os</a> and <a href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/system/Capabilities.html#manufacturer">Capabilities.manufacturer</a> but you would only get something along the lines of "Android", "Windows", etc. And you are after something like "Samsung / Galaxy TAB".

You could also think that a combination of NativeProcess and a native app might be your solution, but you would be out of luck because <a href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html">is not supported when your app runs with a mobileDevice profile</a>. 

If you were prepared to add an external server / service as a dependency you could think that you could make a request to your server, take a look to the user agent, parse it and return something meaningful and simple? Nice try, but browsers' user agents are <a href="http://android-developers.blogspot.com/2010/12/android-browser-user-agent-issues.html">very unreliable</a>. Have a look at the user agent from the same device (Samsung Galaxy S), but from the default browser, Opera Mobile and an AIR app respectively:

* Mozilla/5.0 (Linux; U; Android 2.2; en-gb; GT-I9000 Build/FROYO) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1

* Opera/9.80 (Android; Linux; Opera Mobi/ADR-1011151731; U; en) Presto/2.5.28 Version/10.1

* Mozilla/5.0 (Android; U; en-GB) AppleWebKit/531.9 (KHTML, like Gecko) AdobeAIR/2.6

Not enough information and nowhere consistent enough to parse with a certain degree of confidence.

So, what's left? C'mon! There's got to be <em>something</em>! It's right <em>there</em>! You only need to make it to <a href="http://developer.android.com/reference/android/os/Build.html#MANUFACTURER">Build.MANUFACTURER</a>, <a href="http://developer.android.com/reference/android/os/Build.html#MODEL">Build.MODEL</a> and <a href="http://developer.android.com/reference/android/os/Build.html#PRODUCT">Build.PRODUCT</a>.

Well, I've got two ideas, one dirty, the other one complicated.

<strong>DIRTY</strong>: Make a native app that runs on the background, as a <a href="http://developer.android.com/reference/android/app/Service.html">Service</a>, with a socket server. Then from Flash you just connect to that socket server passing messages back and forth. <a href="http://thinkandroid.wordpress.com/2010/03/27/incorporating-socket-programming-into-your-applications/">It's not that complicated</a>. Problems are a) it would be a separate app and specially b) it would have to be manually started, you cannot start it from the client AIR app as far as I know.

<strong>COMPLICATED</strong>: Build an AIR for Android wrapper, a-la <a href="http://www.kuneri.net/index.php">Kuneri</a>. You would have to build the socket server from the option above, bundle it and pack it with the SWF, everything in one single app. I'm sure is doable, at the end of the day that's what the AIR SDK is doing, right? You wouldn't even run into legal problems, since you wouldn't distribute the AIR runtime for Android (official AIR apps for Android require the AIR runtime as a separate download).

So, am I the only one thinking that we've just found a business opportunity? AIR apps on steroids for Android with custom Java classes.

I would start right now if I didn't have to go to bed.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1785</wp:post_id>
		<wp:post_date>2011-03-20 01:45:09</wp:post_date>
		<wp:post_date_gmt>2011-03-20 00:45:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>find-manufacturer-and-device-model-from-air</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[android]]></category>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/e9iM20]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2011/03/20/find-manufacturer-and-device-model-from-air/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>8453</wp:comment_id>
			<wp:comment_author><![CDATA[Héctor]]></wp:comment_author>
			<wp:comment_author_email>neverbirth@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>80.32.179.142</wp:comment_author_IP>
			<wp:comment_date>2011-03-20 15:51:36</wp:comment_date>
			<wp:comment_date_gmt>2011-03-20 14:51:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[https://github.com/funky-monkey/Android-Native-Device-Info]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1300632697.0474";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:65:{s:15:"comment_post_ID";s:4:"1785";s:14:"comment_author";s:7:"Héctor";s:20:"comment_author_email";s:20:"neverbirth@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:58:"https://github.com/funky-monkey/Android-Native-Device-Info";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"80.32.179.142";s:10:"user_agent";s:152:"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET4.0C)";s:8:"referrer";s:189:"http://blog.zarate.tv/2011/03/20/find-manufacturer-and-device-model-from-air/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+zarate%2Fzblog+%28ZBlog%29&utm_content=Google+Reader";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:77:"http://blog.zarate.tv/2011/03/20/find-manufacturer-and-device-model-from-air/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:7:"Héctor";s:10:"POST_email";s:20:"neverbirth@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:58:"https://github.com/funky-monkey/Android-Native-Device-Info";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1785";s:26:"POST_akismet_comment_nonce";s:10:"8c7a636f56";s:18:"POST_bb2_screener_";s:24:"1300632040 80.32.179.142";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"TYYUeEWjtW4AABjGEfoAAAAE";s:10:"SCRIPT_URL";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:42:"http://blog.zarate.tv/wp-comments-post.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:11:"HTTP_ACCEPT";s:254:"image/gif, image/jpeg, image/pjpeg, application/x-ms-application, application/vnd.ms-xpsdocument, application/xaml+xml, application/x-ms-xbap, application/x-shockwave-flash, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*";s:12:"HTTP_REFERER";s:189:"http://blog.zarate.tv/2011/03/20/find-manufacturer-and-device-model-from-air/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+zarate%2Fzblog+%28ZBlog%29&utm_content=Google+Reader";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"es";s:15:"HTTP_USER_AGENT";s:152:"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET4.0C)";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:14:"CONTENT_LENGTH";s:3:"242";s:15:"HTTP_CONNECTION";s:5:"close";s:18:"HTTP_CACHE_CONTROL";s:8:"no-cache";s:11:"HTTP_COOKIE";s:0:"";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:13:"80.32.179.142";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:48:"/home/zarate/blog.zarate.tv/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"24617";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1300632696";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8454</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>86.26.5.67</wp:comment_author_IP>
			<wp:comment_date>2011-03-20 16:04:06</wp:comment_date>
			<wp:comment_date_gmt>2011-03-20 15:04:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow Hector thanks!

Wonder what the hell was Google thinking when I was doing my research : )]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1300633447.1878";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:4:"1785";s:14:"comment_author";s:6:"Zarate";s:20:"comment_author_email";s:18:"zzzarate@gmail.com";s:18:"comment_author_url";s:16:"http://zarate.tv";s:15:"comment_content";s:95:"Wow Hector thanks!

Wonder what the hell was Google thinking when I was doing my research : )";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:10:"86.26.5.67";s:10:"user_agent";s:103:"Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.9.2.15) Gecko/20110303 Ubuntu/10.04 (lucid) Firefox/3.6.15";s:8:"referrer";s:77:"http://blog.zarate.tv/2011/03/20/find-manufacturer-and-device-model-from-air/";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:77:"http://blog.zarate.tv/2011/03/20/find-manufacturer-and-device-model-from-air/";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:95:"Wow Hector thanks!

Wonder what the hell was Google thinking when I was doing my research : )";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1785";s:32:"POST__wp_unfiltered_html_comment";s:10:"2223f8d36d";s:26:"POST_akismet_comment_nonce";s:10:"a02821d82e";s:18:"POST_bb2_screener_";s:21:"1300633229 86.26.5.67";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"TYYXZkWjtW4AADlxVTYAAAAD";s:10:"SCRIPT_URL";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:42:"http://blog.zarate.tv/wp-comments-post.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:15:"HTTP_USER_AGENT";s:103:"Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.9.2.15) Gecko/20110303 Ubuntu/10.04 (lucid) Firefox/3.6.15";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-gb,en;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:15:"HTTP_CONNECTION";s:5:"close";s:12:"HTTP_REFERER";s:77:"http://blog.zarate.tv/2011/03/20/find-manufacturer-and-device-model-from-air/";s:11:"HTTP_COOKIE";s:0:"";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"268";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:10:"86.26.5.67";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:48:"/home/zarate/blog.zarate.tv/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"41949";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1300633446";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>TestF, benchmark for Flash devices</title>
		<link>http://blog.zarate.tv/2011/04/01/testf-benchmark-for-flash-devices/</link>
		<pubDate>Fri, 01 Apr 2011 10:03:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1810</guid>
		<description></description>
		<content:encoded><![CDATA[Yesterday I finally made <a href="http://testf.net">TestF</a> open to the public just before my talk at the <a href="http://www.lfpug.com/31st-march-2011-31032011/">LFPUG</a> that <a href="http://ustwo.co.uk">ustwo</a> kindly hosted. Thanks to everyone that attended and specially to <a href="http://tink.ws/">Tink</a> for keeping alive the Flash scene in London for all these years!

So, what is TestF about?

<blockquote>Its aim is putting Flash devices to the test, highlighting strengths and weaknesses. Which one has more raw CPU power. Which one has better access to disk. Which one has better hardware acceleration. And so on.</blockquote>

In the studio we get new devices all the time, a few of them prototypes that have not been released yet so there's not much information available on the internet. So, is it fast? How's the GPU? Any noticeable problems? You simply don't know.

To help us get an initial feeling of what are we really dealing with we've put together <a href="http://testf.net">TestF</a>, a simple set of tests that will push the device to see how far it can go. Tests for BitmapData, the drawing API, IO performance... And more on the pipeline.

Since you cannot make much out of the results of a few tests, we need people to run the test on their devices so we keep filling up the <a href="https://spreadsheets.google.com/ccc?key=0AsHeP8atCEXodEhJMmEyRml0RGdkUFNsRjl3NXpYZ0E&hl=en_GB#gid=0">open database</a>. The more information we have, the better so we can discard edge cases where the test has been skewed for some reason.

So, ready for it? The simplest way is searching on the Android Market for "testf" and here's the <a href="https://market.android.com/details?id=air.net.testf.benchmark">direct link</a>. Alternatively, take a look to the <a href="https://github.com/zarate/testf/wiki/Download">downloads</a> page for more options.

There's a lot of stuff to be done:

* Review current tests and add many more (StageVideo, PixelBender, tweening...)
* Data visualization. Once we have a fair amount of data, we need clever ways of visualizing it.
* Device comparisons. Being able to select a few devices, a few tests and get the results filtered and graphs.   
* The ability to add bespoke tests without recompiling the main app, so devs can add their own. 
* Investigate iOS support.
* Throw in some design to the website, the app, etc.

TestF is open source so you can pop by the <a href="https://github.com/zarate/testf">github page</a> to take a look to the code and <a href="https://github.com/zarate/testf/wiki/_pages">documentation</a>.

Any help, comments, feedback much appreciated.

We are also eager for data, so if you can spare 2 minutes, download it from the market and run the test!

[UPDATE]

How could I FORGET?! Maaaassive thanks to my team of beta-testers for their feedback and patience. In no particular order: <a href="http://elraul.es/">Elecash</a>, <a href="http://www.q-interactiva.com/studio">Marcos</a>, <a href="http://www.richardleggett.co.uk/blog/index.php">Richard Leggett</a>, <a href="http://www.rialvalue.com/blog/">Xavi Beumala</a>, <a href="http://jacksondunstan.com/">Jackson Dunstan</a> and <a href="http://joan.garnet.io/en/">Joan Llenas</a>.

Next beer is on me guys!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1810</wp:post_id>
		<wp:post_date>2011-04-01 11:03:06</wp:post_date>
		<wp:post_date_gmt>2011-04-01 10:03:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testf-benchmark-for-flash-devices</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<category domain="category" nicename="air"><![CDATA[air]]></category>
		<category domain="category" nicename="android"><![CDATA[android]]></category>
		<category domain="category" nicename="as3"><![CDATA[as3]]></category>
		<category domain="category" nicename="development"><![CDATA[development]]></category>
		<category domain="category" nicename="hardware"><![CDATA[hardware]]></category>
		<category domain="category" nicename="open-source"><![CDATA[open source]]></category>
		<category domain="category" nicename="ustwo"><![CDATA[ustwo]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/eufkKu]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2011/04/01/testf-benchmark-for-flash-devices/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Client centred development</title>
		<link>http://blog.zarate.tv/2011/04/13/client-centred-development/</link>
		<pubDate>Wed, 13 Apr 2011 07:49:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1830</guid>
		<description></description>
		<content:encoded><![CDATA[Or why you need to keep it cool when deadlines arrive. 

We've all been there when a project starts and everyone merrily go from meeting to meeting, sprint demo to sprint demo, features are coming at a steady pace... All nice, sun's high in the sky and unicorns roam free.

You never know who shot first, but after some time emails have no smilies and morning scrum meetings are just as not as happy as 2 weeks ago. WTF happened? A release approaching happened. 

So, the release is coming and the client starts to think you might not make it, feature X starts looking unlikely to happen, vendor Y is late with their delivery so your development time shrinks but of course the deadline doesn't move... everyone's is simply not in the mood any more. Now you can feel the pressure coming from the other side of the Blackberry. 

Usually nobody says this out loud, but could you not, oh developer, simply go <em>faster</em>? You sure you need that much time for <em>that?</em> I mean, are you <em>sure</em>?

When this happens is very easy for developers to subconsciously start cutting corners and turning quality down a notch. Initially nothing major, just some little corners here and there.

Well, that's when you have to keep it cool. <a href="http://200billionscandal.typepad.com/.a/6a00d83451da3169e2010536faf62f970c-800wi">Chill the fuck out</a>.

You know when UX people talk about <a href="http://www.uxmag.com/strategy/user-led-does-not-equal-user-centered">user centred design as opposed to user led design</a>? Same here. One thing is what the client <em>wants</em>, another thing what the client <em>needs</em>. Especially long term. 

If you start dropping quality you start accumulating <a href="http://www.codinghorror.com/blog/2009/02/paying-down-your-technical-debt.html">technical debt</a> and enter the risky territory of <a href="http://blog.zarate.tv/2010/03/22/broken-windows/">buildings with broken windows</a>. Damn, you can easily arrive to a point where devs feel it's ok to copy and paste code all over the place. 

Watch out, though, don't be a cocky bastard that thinks simply knows better than everyone else. You MUST listen and you NEVER take big decisions without telling anyone. Run it by your peers, project manager and of course the client. Making good calls regarding when to go by the book and when it's ok to bend the rules is to me what tells apart junior from senior. Fuck, it's the difference between <a href="http://www.youtube.com/watch?v=j82GKTgVDkw&feature=player_detailpage#t=160s">Morpheus and Neo in Matrix 1</a>:

<blockquote>Do you believe that my being stronger or faster has anything to do with my muscles in this place? You think that's air you are breathing now?</blockquote>

Priceless.

To sum up. When deadlines come:

* Don't give shorter estimates to make the client happy in the short term.
* It's ok to <em>bend</em> the rules sometimes, but if you <em>break</em> the rules you need to let peers and specially client know.
* If you bend or break the rules you have to document it. Depending on severity you can a) leave a FIXME or TODO note in the code b) send an email to your dev mailing list c) raise a bug d) add it to the documentation and e) all of the above.
* If you find yourself constantly having to ditch good development practices either a) you are not estimating well or b) your client is being unreasonable with timings and then that's a client you really don't want to hang out with for much longer.

<a href="http://www.youtube.com/watch?v=USlnfTGlhXc">Be water my friend</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1830</wp:post_id>
		<wp:post_date>2011-04-13 08:49:49</wp:post_date>
		<wp:post_date_gmt>2011-04-13 07:49:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>client-centred-development</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bugs"><![CDATA[bugs]]></category>
		<category domain="category" nicename="code"><![CDATA[code]]></category>
		<category domain="category" nicename="development"><![CDATA[development]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/g3WqcN]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2011/04/13/cliente-centred-development/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[cliente-centred-development]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>18272</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; Design Lesson 3]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2011/09/08/design-lesson-3/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.2.138</wp:comment_author_IP>
			<wp:comment_date>2011-09-08 21:34:53</wp:comment_date>
			<wp:comment_date_gmt>2011-09-08 20:34:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Massive catch 22. When do you make the call? Based on what? I probably should add that to to the list of what tells appart junior from senior developers. [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1315633962.8988";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1315514093.5933";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:51:{s:15:"comment_post_ID";s:4:"1830";s:14:"comment_author";s:29:"ZBlog &raquo; Design Lesson 3";s:18:"comment_author_url";s:49:"http://blog.zarate.tv/2011/09/08/design-lesson-3/";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:165:"[...] Massive catch 22. When do you make the call? Based on what? I probably should add that to to the list of what tells appart junior from senior developers. [...]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:12:"67.205.2.138";s:10:"user_agent";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.2.1";s:8:"referrer";s:0:"";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:60:"http://blog.zarate.tv/2011/04/13/client-centred-development/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:11:"/xmlrpc.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"Tmkm60WjtW4AADLwgSQAAAAA";s:10:"SCRIPT_URL";s:11:"/xmlrpc.php";s:10:"SCRIPT_URI";s:32:"http://blog.zarate.tv/xmlrpc.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:15:"HTTP_USER_AGENT";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.2.1";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:11:"HTTP_ACCEPT";s:3:"*/*";s:12:"CONTENT_TYPE";s:8:"text/xml";s:20:"HTTP_ACCEPT_ENCODING";s:29:"deflate;q=1.0, compress;q=0.5";s:14:"CONTENT_LENGTH";s:3:"310";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:12:"67.205.2.138";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:38:"/home/zarate/blog.zarate.tv/xmlrpc.php";s:11:"REMOTE_PORT";s:5:"57908";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:11:"/xmlrpc.php";s:15:"HTTP_CONNECTION";s:5:"close";s:8:"PHP_SELF";s:11:"/xmlrpc.php";s:12:"REQUEST_TIME";s:10:"1315514091";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>AIR 2.7, the dark side</title>
		<link>http://blog.zarate.tv/2011/06/18/air-2-7-the-dark-side/</link>
		<pubDate>Sat, 18 Jun 2011 10:06:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1848</guid>
		<description></description>
		<content:encoded><![CDATA[So, <a href="http://blogs.adobe.com/flashplayer/2011/06/adobe-air-2-7-now-available-ios-apps-4x-faster.html">AIR 2.7 is out</a>. Yay! iOS generated apps now 4x faster. Yay! Echo cancellation. Yay! Android apps now can be installed on the SD card. Yay! <a href="http://blogs.adobe.com/flashplayer/2011/06/adobe-air-and-linux-increasing-distribution-on-devices.html">Adobe has dropped AIR for Linux desktops</a>. Ya.., Sorry, <strong>what</strong>?

<blockquote>We will no longer be releasing our own versions of Adobe AIR and the AIR SDK for desktop Linux. [...] The last Adobe release of AIR for desktop Linux is AIR 2.6.</blockquote>

Ouch.

So, Adobe has crunched some numbers and apparently AIR downloads for Linux represent less than 1%. Clearly not a huge market, you cannot argue with that. However, is it all about the numbers? Where has it gone all that "we are truly cross-platform" mantra? What about those continuous integration servers that need to run unit tests and automated testing tools such as Selenium? What about the Flash developers running Linux that develop AIR apps that are later run on Windows, Macs, Android...?  

Hard to argue that the end user is not screaming for Linux support, but not so sure about developers. Out of 6 devs in my team, we have 3 Ubuntus, 2 Macs and 1 Windows. 

Also, what about companies that have gone for AIR since even if it wasn't providing a native experience, at least it was serving the majority if not all of their customer base? Companies like <a href="http://blog.pandora.com/pandora/archives/2008/06/from-the-lab-pa.html">Pandora</a> or the <a href="http://www.nytimes.com/subscriptions/Multiproduct/lp5558.html">New York Times</a> have *paid* AIR applications that now they cannot sell to 1% of their user base. 

Uncool.

However. 

What Adobe says now is that whoever wants AIR running on their OS should join the <a href="http://www.openscreenproject.org/">Open Screen Project</a> and code the final integration layer themselves. This is how Google and RIM have Flash and AIR running on Android and the Playbook, for example. 

I can only see one Linux distro stepping up for their users and doing the job: Ubuntu. But, would they? Would they put time and effort into supporting a proprietary technology that doesn't offer a native experience for their users or rather support Open Source alternatives of the most successful AIR apps currently being used?

I guess the answer is: depends. Depends in the amount of complains they get from their users, the amount of work involved in doing the port, the actual support that Adobe offers during the process,...

Well, since email is free I've sent an email to the Ubuntu man himself, <a href="http://www.markshuttleworth.com/">Mark Shuttleworth</a>. Let's hope first we convince Claire (his PA) that this is an important matter, then that Mark gets to read the email, then that he thinks it's worth answering back, then that he think this is of utmost importance for Ubuntu and finally let's hope we get AIR 2.7 for Linux desktops in a couple of weeks.

Yeah, let's hope.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1848</wp:post_id>
		<wp:post_date>2011-06-18 11:06:09</wp:post_date>
		<wp:post_date_gmt>2011-06-18 10:06:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>air-2-7-the-dark-side</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<category domain="category" nicename="air"><![CDATA[air]]></category>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/iedfZ1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2011/06/18/air-2-7-the-dark-side/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[New post: AIR 2.7, the dark side http://bit.ly/iedfZ1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>15380</wp:comment_id>
			<wp:comment_author><![CDATA[ZBlog &raquo; No Molehill on Linux either]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zarate.tv/2011/07/26/no-molehill-on-linux-either/</wp:comment_author_url>
			<wp:comment_author_IP>67.205.2.138</wp:comment_author_IP>
			<wp:comment_date>2011-07-26 14:23:36</wp:comment_date>
			<wp:comment_date_gmt>2011-07-26 13:23:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] a month after announcing that there won&#8217;t be an official AIR runtime for Linux, Adobe drops Molehill support for the Linux Flash Player too. This is even worst, since this being [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:51:{s:15:"comment_post_ID";s:4:"1848";s:14:"comment_author";s:41:"ZBlog &raquo; No Molehill on Linux either";s:18:"comment_author_url";s:61:"http://blog.zarate.tv/2011/07/26/no-molehill-on-linux-either/";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:195:"[...] a month after announcing that there won&#8217;t be an official AIR runtime for Linux, Adobe drops Molehill support for the Linux Flash Player too. This is even worst, since this being [...]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:12:"67.205.2.138";s:10:"user_agent";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.1.3";s:8:"referrer";s:0:"";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:55:"http://blog.zarate.tv/2011/06/18/air-2-7-the-dark-side/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:11:"/xmlrpc.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"Ti6-1kWjtW4AADhrDzUAAAAE";s:10:"SCRIPT_URL";s:11:"/xmlrpc.php";s:10:"SCRIPT_URI";s:32:"http://blog.zarate.tv/xmlrpc.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:15:"HTTP_USER_AGENT";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.1.3";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:11:"HTTP_ACCEPT";s:3:"*/*";s:12:"CONTENT_TYPE";s:8:"text/xml";s:20:"HTTP_ACCEPT_ENCODING";s:29:"deflate;q=1.0, compress;q=0.5";s:14:"CONTENT_LENGTH";s:3:"317";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:12:"67.205.2.138";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:38:"/home/zarate/blog.zarate.tv/xmlrpc.php";s:11:"REMOTE_PORT";s:5:"51588";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:11:"/xmlrpc.php";s:15:"HTTP_CONNECTION";s:5:"close";s:8:"PHP_SELF";s:11:"/xmlrpc.php";s:12:"REQUEST_TIME";s:10:"1311686614";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311686669.6147";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311686616.9254";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>No Molehill on Linux either</title>
		<link>http://blog.zarate.tv/2011/07/26/no-molehill-on-linux-either/</link>
		<pubDate>Tue, 26 Jul 2011 13:23:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1861</guid>
		<description></description>
		<content:encoded><![CDATA[And here we go again.

Just a month after announcing that <a href="http://blog.zarate.tv/2011/06/18/air-2-7-the-dark-side/">there won't be an official AIR runtime for Linux</a>, <a href="http://sebleedelisle.com/2011/07/no-molehill-on-linux/">Adobe drops Molehill support for the Linux Flash Player</a> too. This is even worst, since this being part of the player itself I doubt Linux distros would have a chance to do it themselves.

It's really so disheartening. 

We are exactly back to the days of Flash Player 8 when Adobe simply didn't provide a player for Linux (jumped from 7 to 9). We are back to the days where Linux was a second class citizen. We are back to the days where it's not possible to be a Flash developer on Linux. They don't even post it on the <a href="http://blogs.adobe.com/flashplayer/">official Flash Player and AIR blog</a>, <a href="http://blogs.adobe.com/penguinswf/">the Linux blog</a> or <a href="http://blogs.adobe.com/open/">the Open Source blog</a>. Only <a href="http://forums.adobe.com/message/3689265#3689265">one message on the forums</a> and <a href="http://twitter.com/#!/thibault_imbert/status/85429017653673984">a twit</a> from <a href="http://www.bytearray.org/">Thibault Imbert</a>.

I'm sure this is a business decision but I don't know what the fuck Adobe is about these days any more. They were putting so much effort into becoming a "serious" platform, ready for the enterprise and take it on the big boys. They developed the language from the joke AVM1 + AS2 was to a fairly decent AVM2 + AS3. Bring on the Java-based command line compiler and tools. They promised Linux releases at the same time that Mac and Windows releases. They also promised time and time again that AIR was the real deal when it came down to cross-platform development, Adobe was going to do the hard word of abstracting all those platform specific APIs so we would only need to worry about our app's features.

Now where is all that? Was it all just marketing bullshit? As soon as the things got real (hardware acceleration and advanced features), bye-bye Linux. To me they are looking like either:

a) naive and over confident thinking that they could pull it off
b) a headless chicken one day saying A, the next day doing B
c) liars

Choose what you want.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1861</wp:post_id>
		<wp:post_date>2011-07-26 14:23:27</wp:post_date>
		<wp:post_date_gmt>2011-07-26 13:23:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>no-molehill-on-linux-either</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
		<category domain="category" nicename="air"><![CDATA[air]]></category>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/pb9Psf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[New post: No Molehill on Linux either http://bit.ly/pb9Psf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>15410</wp:comment_id>
			<wp:comment_author><![CDATA[Héctor]]></wp:comment_author>
			<wp:comment_author_email>neverbirth@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>79.148.220.67</wp:comment_author_IP>
			<wp:comment_date>2011-07-26 23:26:55</wp:comment_date>
			<wp:comment_date_gmt>2011-07-26 22:26:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'd go with option a.

Well, from what I understand, Molehill will be there in the Linux version, but running only through software, and I've read it runs rather well on there as well (at least way better than what was offered on old FP versions).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1311719216.253";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:67:{s:15:"comment_post_ID";s:4:"1861";s:14:"comment_author";s:7:"Héctor";s:20:"comment_author_email";s:20:"neverbirth@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:249:"I'd go with option a.

Well, from what I understand, Molehill will be there in the Linux version, but running only through software, and I've read it runs rather well on there as well (at least way better than what was offered on old FP versions).";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"79.148.220.67";s:10:"user_agent";s:108:"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.122 Safari/534.30";s:8:"referrer";s:173:"http://blog.zarate.tv/2011/07/26/no-molehill-on-linux-either/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+zarate%2Fzblog+%28ZBlog%29&utm_content=Google+Reader";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:61:"http://blog.zarate.tv/2011/07/26/no-molehill-on-linux-either/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:7:"Héctor";s:10:"POST_email";s:20:"neverbirth@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:249:"I'd go with option a.

Well, from what I understand, Molehill will be there in the Linux version, but running only through software, and I've read it runs rather well on there as well (at least way better than what was offered on old FP versions).";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1861";s:26:"POST_akismet_comment_nonce";s:10:"3889f07133";s:18:"POST_bb2_screener_";s:24:"1311719022 79.148.220.67";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"Ti8-LkWjtW4AAEXWubkAAAAC";s:10:"SCRIPT_URL";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:42:"http://blog.zarate.tv/wp-comments-post.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:15:"HTTP_CONNECTION";s:5:"close";s:12:"HTTP_REFERER";s:173:"http://blog.zarate.tv/2011/07/26/no-molehill-on-linux-either/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+zarate%2Fzblog+%28ZBlog%29&utm_content=Google+Reader";s:14:"CONTENT_LENGTH";s:3:"449";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:21:"http://blog.zarate.tv";s:15:"HTTP_USER_AGENT";s:108:"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.122 Safari/534.30";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"es-ES,es;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:11:"HTTP_COOKIE";s:0:"";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:13:"79.148.220.67";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:48:"/home/zarate/blog.zarate.tv/wp-comments-post.php";s:11:"REMOTE_PORT";s:4:"2102";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1311719214";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15397</wp:comment_id>
			<wp:comment_author><![CDATA[davr]]></wp:comment_author>
			<wp:comment_author_email>drorex@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.234.197.139</wp:comment_author_IP>
			<wp:comment_date>2011-07-26 20:13:53</wp:comment_date>
			<wp:comment_date_gmt>2011-07-26 19:13:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Luckily I don't use AIR and I don't need hardware 3D for my web apps, so Linux users of my flash-based web application will be completely unaffected. The main people who will be hurt are those on linux who want to play more advanced games (admit it, that's 90% of the use of 3D these days)...but who runs linux if they want to play games anyway?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:65:{s:15:"comment_post_ID";s:4:"1861";s:14:"comment_author";s:4:"davr";s:20:"comment_author_email";s:16:"drorex@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:345:"Luckily I don't use AIR and I don't need hardware 3D for my web apps, so Linux users of my flash-based web application will be completely unaffected. The main people who will be hurt are those on linux who want to play more advanced games (admit it, that's 90% of the use of 3D these days)...but who runs linux if they want to play games anyway?";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"66.234.197.139";s:10:"user_agent";s:70:"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0";s:8:"referrer";s:61:"http://blog.zarate.tv/2011/07/26/no-molehill-on-linux-either/";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:61:"http://blog.zarate.tv/2011/07/26/no-molehill-on-linux-either/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:4:"davr";s:10:"POST_email";s:16:"drorex@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:345:"Luckily I don't use AIR and I don't need hardware 3D for my web apps, so Linux users of my flash-based web application will be completely unaffected. The main people who will be hurt are those on linux who want to play more advanced games (admit it, that's 90% of the use of 3D these days)...but who runs linux if they want to play games anyway?";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1861";s:26:"POST_akismet_comment_nonce";s:10:"3889f07133";s:18:"POST_bb2_screener_";s:25:"1311707382 66.234.197.139";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"Ti8R70WjtW4AABrVubEAAAAJ";s:10:"SCRIPT_URL";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:42:"http://blog.zarate.tv/wp-comments-post.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:15:"HTTP_USER_AGENT";s:70:"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:15:"HTTP_CONNECTION";s:5:"close";s:12:"HTTP_REFERER";s:61:"http://blog.zarate.tv/2011/07/26/no-molehill-on-linux-either/";s:11:"HTTP_COOKIE";s:0:"";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"529";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"66.234.197.139";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:48:"/home/zarate/blog.zarate.tv/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"36684";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1311707631";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311707635.7054";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1311716045.817";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Design Lesson 3</title>
		<link>http://blog.zarate.tv/2011/09/08/design-lesson-3/</link>
		<pubDate>Thu, 08 Sep 2011 20:33:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1877</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>Software architecture does not age gracefully. Software architecture degrades in direct proportion to the number of changes made to the software: bug fixes corrode the layering and new features stress design.

Deciding when the software architecture has degraded sufficiently that you should re-design or re-write a module is a hard decision. On one hand, as the architecture degrades, maintenance and development become more difficult and at the end of that path is a legacy piece of software maintainable only by having an army of brute-force testers for every release, because nobody understands how the software works inside.

On the other hand, users will bitterly complain over the instability and incompatibilities that result from fundamental changes. As a software architect, your only guarantee is that someone will be angry with you no matter which path you choose.</blockquote>

<strong>WHAT ABOUT THAT?</strong>

Total epiphany moment right there.

Written by Margo Seltzer and Keith Bostic (creators of <a href="http://en.wikipedia.org/wiki/Berkeley_DB">Berkeley DB</a>) as part of their contribution to <a href="http://www.aosabook.org/" title="The Architecture of Open Source Applications">The Architecture of Open Source Applications</a> (CC license, you can <a href="http://www.aosabook.org/en/bdb.html">read it on-line</a>, but the paper copy benefits go to Amnesty International).

So, where do I start?! 

<blockquote>Software architecture does not age gracefully. Software architecture degrades in direct proportion to the number of changes made to the software: bug fixes corrode the layering and new features stress design.</blockquote>

How many times I've seen that happening. There are several factors adding to that problem:

1) Devs keep understimating how hard fixing bugs really is. We should not ever trust ourselves when we think "<em>oh, that's a quick fix</em>". If you don't take the time to REALLY understand why the original dev missed the issue, you are quite likely to fix a bug and open a new one. It's always very desirable to have a quick chat with the original dev so you double check you are not missing anything.

2) Devs don't like doing bug fixing, they like implementing new shiny features, so the attitude when bug fixing is "done, get me out of here", which obviously is a recipe for more bugs.

3) It's difficult to keep the consistency over long periods of time, whether when fixing bugs or adding new features. Even with the best of the intentions, maybe you've learnt something since the original implementation, maybe you have different ideas than the original dev... the bigger the team and the longer the project, the tougher is to keep code consistency.

4) <a href="http://www.google.com/search?client=ubuntu&channel=fs&q=Complexity+happens%2C+simplicity+you+have+to+strive+for&ie=utf-8&oe=utf-8">Complexity happens, simplicity you have to strive for</a>.

<blockquote>Deciding when the software architecture has degraded sufficiently that you should re-design or re-write a module is a hard decision. On one hand, as the architecture degrades, maintenance and development become more difficult and at the end of that path is a legacy piece of software maintainable only by having an army of brute-force testers for every release, because nobody understands how the software works inside.</blockquote>

How many times have we asked ourselves "<em>why has this been coded like this?</em>" Again, if you don't know the answer to that question you are most likely missing important information. And without that information how you solve the problem is likely to add a little bit of a mess. Fast forward 2, 3 or 20 years, put together all those little messes and that's why you have spaghetti code.

<blockquote>On the other hand, users will bitterly complain over the instability and incompatibilities that result from fundamental changes. As a software architect, your only guarantee is that someone will be angry with you no matter which path you choose.</blockquote>

Massive catch 22. When do you make the call? Based on what? I probably should add that to to <a href="http://blog.zarate.tv/2011/04/13/client-centred-development/">the list of what tells appart junior from senior developers</a>.

Same as you should fix bugs during the sprints, you should refactor in your sprints as well. Granted, you can't justify re-writing the whole app on the back of a simple user story, but if you realise the code you need to implement your current user story would greatly benefit from a re-write of this or that other related piece of code, I say do it. Don't accumulate too much technical debt. Don't leave the <a href="http://blog.zarate.tv/2010/03/22/broken-windows/">window broken</a> for too long.

--

I haven't finished the book yet and I have to say that there are 2 or 3 not-so-good chapters, but <strong>Design Lesson 3</strong> makes it worthwhile.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1877</wp:post_id>
		<wp:post_date>2011-09-08 21:33:29</wp:post_date>
		<wp:post_date_gmt>2011-09-08 20:33:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>design-lesson-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="books"><![CDATA[books]]></category>
		<category domain="category" nicename="bugs"><![CDATA[bugs]]></category>
		<category domain="category" nicename="code"><![CDATA[code]]></category>
		<category domain="category" nicename="development"><![CDATA[development]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/rm88xs]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2011/09/08/design-lesson-3/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[New post: Design Lesson 3 http://bit.ly/rm88xs]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>19481</wp:comment_id>
			<wp:comment_author><![CDATA[gianpi]]></wp:comment_author>
			<wp:comment_author_email>gianpi@ustwo.se</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>212.181.116.46</wp:comment_author_IP>
			<wp:comment_date>2011-09-29 09:29:13</wp:comment_date>
			<wp:comment_date_gmt>2011-09-29 08:29:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I politely disagree with this:

"Software architecture does not age gracefully. Software architecture degrades in direct proportion to the number of changes made to the software: bug fixes corrode the layering and new features stress design.
Deciding when the software architecture has degraded sufficiently that you should re-design or re-write a module is a hard decision. On one hand, as the architecture degrades, maintenance and development become more difficult and at the end of that path is a legacy piece of software maintainable only by having an army of brute-force testers for every release, because nobody understands how the software works inside."

That happens because management doesn't give developers enough time to work on the issues properly, and even in the rare cases when they do, developers are sometimes too lazy to get to try new practices and tool that could help with that.

i.e. TDD in my opinion would avoid the above, if developers had enough time to put it in place (but does it actually take more time, when you look at the overall picture?). And like I said, when developers have that time, do they use it? Look at this cycle:

http://vinkamat.com/wp-content/uploads/2011/03/tdd_cycle.jpg

Pretty straightforward, however 90% of the people would skip the 'refactor' bit, and then you end up like you quoted :)

g]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1317285896.0604";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1317284954.2467";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:67:{s:15:"comment_post_ID";s:4:"1877";s:14:"comment_author";s:6:"gianpi";s:20:"comment_author_email";s:15:"gianpi@ustwo.se";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:1360:"I politely disagree with this:

"Software architecture does not age gracefully. Software architecture degrades in direct proportion to the number of changes made to the software: bug fixes corrode the layering and new features stress design.
Deciding when the software architecture has degraded sufficiently that you should re-design or re-write a module is a hard decision. On one hand, as the architecture degrades, maintenance and development become more difficult and at the end of that path is a legacy piece of software maintainable only by having an army of brute-force testers for every release, because nobody understands how the software works inside."

That happens because management doesn't give developers enough time to work on the issues properly, and even in the rare cases when they do, developers are sometimes too lazy to get to try new practices and tool that could help with that.

i.e. TDD in my opinion would avoid the above, if developers had enough time to put it in place (but does it actually take more time, when you look at the overall picture?). And like I said, when developers have that time, do they use it? Look at this cycle:

http://vinkamat.com/wp-content/uploads/2011/03/tdd_cycle.jpg

Pretty straightforward, however 90% of the people would skip the 'refactor' bit, and then you end up like you quoted :)

g";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"212.181.116.46";s:10:"user_agent";s:117:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.186 Safari/535.1";s:8:"referrer";s:49:"http://blog.zarate.tv/2011/09/08/design-lesson-3/";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:49:"http://blog.zarate.tv/2011/09/08/design-lesson-3/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:6:"gianpi";s:10:"POST_email";s:15:"gianpi@ustwo.se";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:1360:"I politely disagree with this:

"Software architecture does not age gracefully. Software architecture degrades in direct proportion to the number of changes made to the software: bug fixes corrode the layering and new features stress design.
Deciding when the software architecture has degraded sufficiently that you should re-design or re-write a module is a hard decision. On one hand, as the architecture degrades, maintenance and development become more difficult and at the end of that path is a legacy piece of software maintainable only by having an army of brute-force testers for every release, because nobody understands how the software works inside."

That happens because management doesn't give developers enough time to work on the issues properly, and even in the rare cases when they do, developers are sometimes too lazy to get to try new practices and tool that could help with that.

i.e. TDD in my opinion would avoid the above, if developers had enough time to put it in place (but does it actually take more time, when you look at the overall picture?). And like I said, when developers have that time, do they use it? Look at this cycle:

http://vinkamat.com/wp-content/uploads/2011/03/tdd_cycle.jpg

Pretty straightforward, however 90% of the people would skip the 'refactor' bit, and then you end up like you quoted :)

g";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1877";s:26:"POST_akismet_comment_nonce";s:10:"fcb2ddaa03";s:18:"POST_bb2_screener_";s:25:"1317284638 212.181.116.46";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"ToQsWUWjtW4AAEIBJKcAAAAC";s:10:"SCRIPT_URL";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:42:"http://blog.zarate.tv/wp-comments-post.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:15:"HTTP_CONNECTION";s:5:"close";s:14:"CONTENT_LENGTH";s:4:"1647";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:21:"http://blog.zarate.tv";s:15:"HTTP_USER_AGENT";s:117:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.186 Safari/535.1";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:49:"http://blog.zarate.tv/2011/09/08/design-lesson-3/";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:26:"en-GB,en-US;q=0.8,en;q=0.6";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:11:"HTTP_COOKIE";s:0:"";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"212.181.116.46";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:48:"/home/zarate/blog.zarate.tv/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"42150";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1317284953";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19479</wp:comment_id>
			<wp:comment_author><![CDATA[Simon]]></wp:comment_author>
			<wp:comment_author_email>me@simonrichardson.info</wp:comment_author_email>
			<wp:comment_author_url>http://www.simonrichardson.info</wp:comment_author_url>
			<wp:comment_author_IP>86.5.172.110</wp:comment_author_IP>
			<wp:comment_date>2011-09-29 09:20:41</wp:comment_date>
			<wp:comment_date_gmt>2011-09-29 08:20:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Two notes: 
1. You should always refactor the code. What you did in the previous sprint should have no knowledge of the next sprint i.e. you should be programming for what is in the task at hand, not what you guess is in the future task. That is why you should be willing to accept change as part of agile and that means understanding what you wrote in the previous sprint and refactoring/adding/changing that for the new task.
2. I'd like to see you modify an app in 20 years ;-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1317284443.146";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1317285896.9896";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:67:{s:15:"comment_post_ID";s:4:"1877";s:14:"comment_author";s:5:"Simon";s:20:"comment_author_email";s:23:"me@simonrichardson.info";s:18:"comment_author_url";s:31:"http://www.simonrichardson.info";s:15:"comment_content";s:482:"Two notes: 
1. You should always refactor the code. What you did in the previous sprint should have no knowledge of the next sprint i.e. you should be programming for what is in the task at hand, not what you guess is in the future task. That is why you should be willing to accept change as part of agile and that means understanding what you wrote in the previous sprint and refactoring/adding/changing that for the new task.
2. I'd like to see you modify an app in 20 years ;-)";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:12:"86.5.172.110";s:10:"user_agent";s:117:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.186 Safari/535.1";s:8:"referrer";s:49:"http://blog.zarate.tv/2011/09/08/design-lesson-3/";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:49:"http://blog.zarate.tv/2011/09/08/design-lesson-3/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:5:"Simon";s:10:"POST_email";s:23:"me@simonrichardson.info";s:8:"POST_url";s:31:"http://www.simonrichardson.info";s:12:"POST_comment";s:482:"Two notes: 
1. You should always refactor the code. What you did in the previous sprint should have no knowledge of the next sprint i.e. you should be programming for what is in the task at hand, not what you guess is in the future task. That is why you should be willing to accept change as part of agile and that means understanding what you wrote in the previous sprint and refactoring/adding/changing that for the new task.
2. I'd like to see you modify an app in 20 years ;-)";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1877";s:26:"POST_akismet_comment_nonce";s:10:"fcb2ddaa03";s:18:"POST_bb2_screener_";s:23:"1317283937 86.5.172.110";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"ToQqWEWjtW4AADseRGwAAAAB";s:10:"SCRIPT_URL";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:42:"http://blog.zarate.tv/wp-comments-post.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:15:"HTTP_CONNECTION";s:5:"close";s:14:"CONTENT_LENGTH";s:3:"713";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:21:"http://blog.zarate.tv";s:15:"HTTP_USER_AGENT";s:117:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.186 Safari/535.1";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:49:"http://blog.zarate.tv/2011/09/08/design-lesson-3/";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:26:"en-GB,en-US;q=0.8,en;q=0.6";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:11:"HTTP_COOKIE";s:0:"";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:12:"86.5.172.110";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:48:"/home/zarate/blog.zarate.tv/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"49571";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1317284441";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19482</wp:comment_id>
			<wp:comment_author><![CDATA[Zarate]]></wp:comment_author>
			<wp:comment_author_email>zzzarate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zarate.tv</wp:comment_author_url>
			<wp:comment_author_IP>83.217.104.34</wp:comment_author_IP>
			<wp:comment_date>2011-09-29 09:55:53</wp:comment_date>
			<wp:comment_date_gmt>2011-09-29 08:55:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Simon: change is good, nobody says otherwise. The point is that is VERY difficult to put 2-3 years of changes while still being faithful to the original architecture. And if you are not faithful to the original architecture, then at some point you are going to be half way through the old one and a new one. IE: you are in a mess.

@Gianpi: you are focusing too much on the testing side of the statement. You could have an application with 100% TDD test coverage that could still be a bunch of spaghetti code from the architectural point of view. Sure, TDD helps with bugs, is a very good step, but is not the answer to everything.

J]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1317286554.0171";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:65:{s:15:"comment_post_ID";s:4:"1877";s:14:"comment_author";s:6:"Zarate";s:20:"comment_author_email";s:18:"zzzarate@gmail.com";s:18:"comment_author_url";s:16:"http://zarate.tv";s:15:"comment_content";s:639:"@Simon: change is good, nobody says otherwise. The point is that is VERY difficult to put 2-3 years of changes while still being faithful to the original architecture. And if you are not faithful to the original architecture, then at some point you are going to be half way through the old one and a new one. IE: you are in a mess.

@Gianpi: you are focusing too much on the testing side of the statement. You could have an application with 100% TDD test coverage that could still be a bunch of spaghetti code from the architectural point of view. Sure, TDD helps with bugs, is a very good step, but is not the answer to everything.

J";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:13:"83.217.104.34";s:10:"user_agent";s:137:"Mozilla/5.0 (X11; Linux i686) AppleWebKit/534.30 (KHTML, like Gecko) Ubuntu/10.04 Chromium/12.0.742.112 Chrome/12.0.742.112 Safari/534.30";s:8:"referrer";s:49:"http://blog.zarate.tv/2011/09/08/design-lesson-3/";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:49:"http://blog.zarate.tv/2011/09/08/design-lesson-3/";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:639:"@Simon: change is good, nobody says otherwise. The point is that is VERY difficult to put 2-3 years of changes while still being faithful to the original architecture. And if you are not faithful to the original architecture, then at some point you are going to be half way through the old one and a new one. IE: you are in a mess.

@Gianpi: you are focusing too much on the testing side of the statement. You could have an application with 100% TDD test coverage that could still be a bunch of spaghetti code from the architectural point of view. Sure, TDD helps with bugs, is a very good step, but is not the answer to everything.

J";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1877";s:32:"POST__wp_unfiltered_html_comment";s:10:"5e0f3edcde";s:26:"POST_akismet_comment_nonce";s:10:"0c35849726";s:18:"POST_bb2_screener_";s:24:"1317285914 83.217.104.34";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"ToQymEWjtW4AADMxnxIAAAAP";s:10:"SCRIPT_URL";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:42:"http://blog.zarate.tv/wp-comments-post.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:15:"HTTP_CONNECTION";s:5:"close";s:12:"HTTP_REFERER";s:49:"http://blog.zarate.tv/2011/09/08/design-lesson-3/";s:14:"CONTENT_LENGTH";s:3:"839";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:21:"http://blog.zarate.tv";s:15:"HTTP_USER_AGENT";s:137:"Mozilla/5.0 (X11; Linux i686) AppleWebKit/534.30 (KHTML, like Gecko) Ubuntu/10.04 Chromium/12.0.742.112 Chrome/12.0.742.112 Safari/534.30";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:26:"en-GB,en-US;q=0.8,en;q=0.6";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:11:"HTTP_COOKIE";s:0:"";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:13:"83.217.104.34";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:48:"/home/zarate/blog.zarate.tv/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"62616";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1317286552";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19483</wp:comment_id>
			<wp:comment_author><![CDATA[gianpi]]></wp:comment_author>
			<wp:comment_author_email>gianpi@ustwo.se</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>213.115.159.178</wp:comment_author_IP>
			<wp:comment_date>2011-09-29 09:57:49</wp:comment_date>
			<wp:comment_date_gmt>2011-09-29 08:57:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Zarate: at the risk of sounding patronising, you're making a very common mistake. TDD is all about code design, and very little about testing.

g]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1317286669.5256";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:67:{s:15:"comment_post_ID";s:4:"1877";s:14:"comment_author";s:6:"gianpi";s:20:"comment_author_email";s:15:"gianpi@ustwo.se";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:148:"@Zarate: at the risk of sounding patronising, you're making a very common mistake. TDD is all about code design, and very little about testing.

g";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:15:"213.115.159.178";s:10:"user_agent";s:117:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.186 Safari/535.1";s:8:"referrer";s:64:"http://blog.zarate.tv/2011/09/08/design-lesson-3/comment-page-1/";s:4:"blog";s:21:"http://blog.zarate.tv";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:49:"http://blog.zarate.tv/2011/09/08/design-lesson-3/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:6:"gianpi";s:10:"POST_email";s:15:"gianpi@ustwo.se";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:148:"@Zarate: at the risk of sounding patronising, you're making a very common mistake. TDD is all about code design, and very little about testing.

g";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1877";s:26:"POST_akismet_comment_nonce";s:10:"fcb2ddaa03";s:18:"POST_bb2_screener_";s:25:"1317286607 212.181.116.46";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:4:"PATH";s:29:"/bin:/usr/bin:/sbin:/usr/sbin";s:9:"RAILS_ENV";s:10:"production";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"ToQzDEWjtW4AADL2knQAAAAJ";s:10:"SCRIPT_URL";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:42:"http://blog.zarate.tv/wp-comments-post.php";s:4:"dsid";s:7:"8426807";s:13:"ds_id_8426807";s:0:"";s:7:"DH_USER";s:6:"zarate";s:9:"HTTP_HOST";s:14:"blog.zarate.tv";s:15:"HTTP_CONNECTION";s:5:"close";s:14:"CONTENT_LENGTH";s:3:"333";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:21:"http://blog.zarate.tv";s:15:"HTTP_USER_AGENT";s:117:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.186 Safari/535.1";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:64:"http://blog.zarate.tv/2011/09/08/design-lesson-3/comment-page-1/";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:26:"en-GB,en-US;q=0.8,en;q=0.6";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:11:"HTTP_COOKIE";s:0:"";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:14:"blog.zarate.tv";s:11:"SERVER_ADDR";s:12:"67.205.2.138";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:15:"213.115.159.178";s:13:"DOCUMENT_ROOT";s:27:"/home/zarate/blog.zarate.tv";s:12:"SERVER_ADMIN";s:24:"webmaster@blog.zarate.tv";s:15:"SCRIPT_FILENAME";s:48:"/home/zarate/blog.zarate.tv/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"42392";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1317286668";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Write once, compile everywhere</title>
		<link>http://blog.zarate.tv/2011/11/19/write-once-compile-everywhere/</link>
		<pubDate>Sat, 19 Nov 2011 18:08:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.zarate.tv/?p=1897</guid>
		<description></description>
		<content:encoded><![CDATA[So, funny last couple of weeks for Flash devs, uh?

Since we are all mostly fed up with the subject, I'll take a look to a couple of projects that go precisely in the opposite direction of Flash. In <a href="http://blog.joa-ebert.com/">Joa Ebert</a>'s words:

<blockquote>we do not believe in write once run anywhere because that just does not make sense. [...] write platform-agnostic code using kickass-libraries and being able to reuse that</blockquote>

What I ask to any of these frameworks is <strong>deep</strong> integration with the <em>host</em> OS. That means that for example in Android I should be able to hook up with the native back button, menus, notifications, etc. I should be able to launch other apps in the system such as the browser, mail, camera, etc. 

Ditto for whatever feels native on iOS.

If you don't achieve that, the applications are going to feel strange to the system. Like traditional Java or Flash apps for the desktop do. Like a blob in the user's space.

This is particularly important for the UI components: buttons, text fields, scroll bars... they need to look and behave like their native counterparts. As a matter of fact, they simply <em>should</em> be the native versions. Obviously if you want a set of UI components that once compiled are translated to natives components then you need to settle for the lowest common API. Do you think that's too much of a trade off?

I think games could somehow get away with bespoke UI components, but definitely not enterprise apps. 

Check out these:

<strong><a href="http://blog.joa-ebert.com/2011/11/11/project-hiddenwood/">Hiddenwood</a></strong>

<blockquote>Hiddenwood is a collection of libraries and tools specifically designed to support different devices and platforms. The core libraries are the “driver layer” and always platform-specific with a platform-independent interface.
On top of that we provide a basic layer of libraries like our UI system, animation framework or managed collections which guarantee 0% garbage collection activity and have been battle-tested in Audiotool.</blockquote>

So, write Java and compile to HTML + JS, Android and iOS in the making. I can see 2 very good points behind Hiddenwood straight away:

1) It's Java, so you have BAZILLION libs out there ready for you to plug and play.
2) It has Mr. Ebert and the whole Audiotool team behind, so almost guaranteed top quality.

<strong><a href="http://www.haxenme.org/">haXeNME</a></strong>

Write haXe using an almost identical to Flash API and compile to Android, iOS, HTML + JS, but also to native desktop apps for Windows, Mac and Linux.

As a Flash developer the Java syntax is not far off, but the haXe syntax is literally 2 steps ahead. IE, Flash + all you miss from the AS3 syntax: abstracts, macros, inlining...

With a Flash-like API, a Flash-like-but-better syntax and near-native speed, it looks like a no-brainer for Flash devs.

--

So, if you are feeling gloomy as a Flash dev due to Adobe's latests news, just roll up your sleeves and get dirty with any of these bad boys.

J

PS: we are <a href="http://apps.ustwo.co.uk/wt/">looking for beta testers for the release of Whale Trail for Android</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1897</wp:post_id>
		<wp:post_date>2011-11-19 19:08:08</wp:post_date>
		<wp:post_date_gmt>2011-11-19 18:08:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>write-once-compile-everywhere</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="haxe"><![CDATA[haxe]]></category>
		<category domain="category" nicename="java"><![CDATA[java]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[New post: Write once, compile everywhere http://bit.ly/vhJIuW]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://blog.zarate.tv/2011/11/19/write-once-compile-everywhere/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/vhJIuW]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
